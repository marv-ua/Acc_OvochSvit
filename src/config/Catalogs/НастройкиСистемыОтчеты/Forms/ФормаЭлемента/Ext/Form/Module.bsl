
&НаКлиенте
Процедура ОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	ДополнительныеРеквизитыКлиент.ОбработкаРасшифровки(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВиджет(Результат)
	
	
	ДополнительныеРеквизитыСервер.ОбновитьВиджет(ЭтаФорма, СтрЗаменить(Результат,"ОбновитьВиджет",""));
	
КонецПроцедуры

&НаКлиенте
Процедура УниверсальнаяКоманда(Команда)
	
	ОтветКоманды = ДополнительныеРеквизитыКлиент.УниверсальнаяКоманда(ЭтаФорма, Команда);
	
	Если СтрНайти(ОтветКоманды,"ОбновитьВиджет") Тогда
		ОбновитьВиджет(ОтветКоманды);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЗначениеКопирования") и ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		//Надо скопировать хранилище схемы
		Источник = Параметры.ЗначениеКопирования;
		
		ТекущийОбъект = РеквизитФормыВЗначение("Объект");
		
		ТекущийОбъект.ХранилищеСхемыКомпоновки = Новый ХранилищеЗначения(Источник.ХранилищеСхемыКомпоновки.Получить());
		ПрочитатьСхемы(ТекущийОбъект);
		
	ИначеЕсли Объект.Ссылка.Пустая() Тогда
		
		ПеренестиСхемуНаСервер(Новый СхемаКомпоновкиДанных);
		
	КонецЕсли;
	
	ФормыСервер.ЗаполнитьПутиКДаннымДляРедактированияКода(ЭтаФорма);
	
	ДополнительныеСвойства = Новый Структура("ДополнительныеРеквизиты", Новый Структура);
	ДополнительныеРеквизитыСервер.ВывестиВиджетОтчета(ЭтаФорма, Объект.Ссылка, "ГруппаПраво");
	
	ЗаполнитьПраваДоступа();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПраваДоступа()
	
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	НастройкиСистемыВидыРолей.Ссылка КАК ВидРоли,
	//|	НастройкиСистемыВидыРолей.СистемнаяРоль КАК СистемнаяРоль,
	//|	НастройкиСистемыОтчетыОграничениеДоступа.Доступ КАК Доступ,
	//|	НастройкиСистемыОтчетыОграничениеДоступа.КодПриКомпоновкеРезультата КАК КодПриКомпоновкеРезультата
	//|ИЗ
	//|	Справочник.НастройкиСистемыВидыРолей КАК НастройкиСистемыВидыРолей
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиСистемыОтчеты.ОграничениеДоступа КАК НастройкиСистемыОтчетыОграничениеДоступа
	//|		ПО НастройкиСистемыВидыРолей.Ссылка = НастройкиСистемыОтчетыОграничениеДоступа.ВидРоли
	//|			И (НастройкиСистемыОтчетыОграничениеДоступа.Ссылка = &Ссылка)
	//|ГДЕ
	//|	НЕ НастройкиСистемыВидыРолей.ЭтоГруппа
	//|	И НЕ НастройкиСистемыВидыРолей.ПометкаУдаления
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	СистемнаяРоль УБЫВ,
	//|	Доступ УБЫВ,
	//|	ВидРоли";
	//
	//ПраваДоступа.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиСхемуНаСервер(СхемаКлиент)
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКлиент, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСхемуКомпоновки(Команда)
	
	#Если ТолстыйКлиентОбычноеПриложение ИЛИ ТолстыйКлиентУправляемоеПриложение Тогда
		СхемаКлиент = ПолучитьСхемуССервера();
		
		КонструкторСхемы = Новый КонструкторСхемыКомпоновкиДанных;
		КонструкторСхемы.УстановитьСхему(СхемаКлиент);
		
		//Элементы.РедактироватьСхемуКомпоновки.Доступность = Ложь;
		
		КонструкторСхемы.Редактировать(ЭтаФорма);
	#Иначе
		
		ПоказатьПредупреждение(,"Для редактирования СКД перезайдите в толстом клиенте управляемое приложение!!!", 10, "Редактирование СКД");
		
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСхемуССервера()
	Схема = ПолучитьИзВременногоХранилища(АдресСхемы);
	
	Возврат Схема;
КонецФункции

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПрочитатьСхемы(ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСхемы(ТекущийОбъект)
	СохраненнаяСхема = ТекущийОбъект.ХранилищеСхемыКомпоновки.Получить();
	
	Если ТипЗнч(СохраненнаяСхема) <> Тип("СхемаКомпоновкиДанных") Тогда
		СохраненнаяСхема = Новый СхемаКомпоновкиДанных;
	КонецЕсли;
	
	ПеренестиСхемуНаСервер(СохраненнаяСхема);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Схема = ПолучитьСхемуССервера();
	
	ТекущийОбъект.ХранилищеСхемыКомпоновки = Новый ХранилищеЗначения(Схема);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	#Если ТолстыйКлиентОбычноеПриложение ИЛИ ТолстыйКлиентУправляемоеПриложение Тогда
	СхемаКлиент = ВыбранноеЗначение;
	ПеренестиСхемуНаСервер(СхемаКлиент);
	
	Модифицированность = Истина;
	
	Элементы.РедактироватьСхемуКомпоновки.Доступность = Истина;
	#КонецЕсли
КонецПроцедуры

&НаСервере
Функция СформироватьНаСервере()
	
	тмп = ДополнительныеРеквизитыСервер.ОбновитьВиджет(ЭтаФорма, "КомандаОбновленияВиджета1", ?(ВывестиВТаблицуЗначений, "ТаблицаЗначений", Неопределено), Истина);
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьСхему(Команда)
	
	СформироватьНаСервере();
	
	КомпоновкаДанныхКлиент.ДобавитьКнопкиУровней(ЭтаФорма);
	
КонецПроцедуры

#Область КомандыФормы

&НаКлиенте
Процедура РедактироватьКод(Элемент, СтандартнаяОбработка);
	ФормыКлиент.РедактироватьКод(ЭтаФорма, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ЕстьОграничениеДоступаНаУровнеПравПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

Процедура УстановитьВидимость()
	УстановитьДоступностьРеквизита(ЭтаФорма, "ПраваДоступа, ПраваДоступаКодПриКомпоновкеРезультата", Объект.ЕстьОграничениеДоступаНаУровнеПрав);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.ОграничениеДоступа.Очистить();
	
	Для Каждого ТекСтрока Из ПраваДоступа Цикл
		
		Если НЕ ТекСтрока.Доступ и ПустаяСтрока(ТекСтрока.КодПриКомпоновкеРезультата) Тогда
			Продолжить;
		КонецЕсли;
		
		НовСтрока = Объект.ОграничениеДоступа.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	//ПриСозданииНаСервере(Ложь, Ложь);
КонецПроцедуры

#КонецОбласти