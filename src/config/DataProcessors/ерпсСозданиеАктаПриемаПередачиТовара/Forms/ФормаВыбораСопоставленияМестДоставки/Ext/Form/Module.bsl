
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресЗагруженыхДанных = Параметры.АдресЗагруженыхДанных;	
	Т = ПолучитьИзВременногоХранилища(Параметры.АдресЗагруженыхДанных);
	
	ТТ = Т.Скопировать();
	ТТ.Свернуть("ПунктРазгрузкиПоиск,ПунктРазгрузки,ДатаОтгрузки,ИДЗаявкиКлиента");
	
	ПунктыРазгрузки.Загрузить(ТТ);	
	
КонецПроцедуры

&НаСервере
Функция ОКНаСервере()
	
	//Т = ПунктыРазгрузки.Выгрузить();
	//
	//МассивСтрок = Т.НайтиСтроки(Новый Структура("ПунктРазгрузки", ПредопределенноеЗначение("Справочник.ПунктыРазгрузки.ПустаяСсылка")));
	//Для Каждого Эл Из МассивСтрок Цикл
	//	Т.Удалить(Эл);
	//КонецЦикла;

	//Для Каждого Эл Из Т Цикл
	//	Менеджер = РегистрыСведений.а_СвязьОбъектов.СоздатьМенеджерЗаписи();
	//	Менеджер.ИД = Эл.ПунктРазгрузкиПоиск;
	//	Менеджер.ТипОбъекта = ПредопределенноеЗначение("Перечисление.а_ТипыОбъектов.ПунктРазгрузки");
	//	Менеджер.Объект = Эл.ПунктРазгрузки;
	//	Попытка
	//		Менеджер.Записать();
	//	Исключение
	//		ЗаписьЖурналаРегистрации("Сопоставление пунктов разгрузки"
	//			, УровеньЖурналаРегистрации.Ошибка
	//			, Метаданные.РегистрыСведений.а_СвязьОбъектов
	//			,
	//			, ОписаниеОшибки() + Символы.ПС + Эл.ПунктРазгрузкиПоиск
	//		);
	//	КонецПопытки;
	//КонецЦикла;
	//
	//Возврат ПоместитьВоВременноеХранилище(Т);
	
	
	
КонецФункции

&НаКлиенте
Процедура ОК(Команда)
	ОповеститьОЗавершенииРаботыФормы(Истина);
	//Закрыть(ОКНаСервере());
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОЗавершенииРаботыФормы(ОбновлятьТАблицу)
	ОбновитьПорядок = Ложь;
	Индекс = 1;
	Для Каждого СтрокаТЧ Из ПунктыРазгрузки Цикл
		Если СтрокаТЧ.РеквизитДопУпорядочивания <> Индекс Тогда
			ОбновитьПорядок = Истина;
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	Адрес = ПолучитьАдресТЧ(ОбновлятьТАблицу);
	ОповеститьОВыборе(Адрес);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресТЧ(ОбновлятьТАблицу = Истина)
	
	
	Если ОбновлятьТАблицу тогда
		ЗаполнитьТаблицуКПереносу();
	КонецЕсли;
	
	ТЗКПередаче = ЭтотОбъект.КПереносу.Выгрузить();
	
	Возврат ПоместитьВоВременноеХранилище(ТЗКПередаче);
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуКПереносу()
	
	ЭтотОбъект.КПереносу.Очистить();
	НовТЗ = ЭтотОбъект.ПунктыРазгрузки.Выгрузить();//ВыбранныеМеста.НайтиСтроки(Новый Структура("Выбрана",Истина)));
	НовТЗ.Сортировать("РеквизитДопУпорядочивания Возр");
	Для каждого ТекСтрока из НовТЗ Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.ПунктРазгрузки) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ЭтотОбъект.КПереносу.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		НоваяСтрока.Выбрана = Истина;
		НоваяСтрока.Ссылка = ТекСтрока.ПунктРазгрузки;
		НоваяСтрока.Наименование = СокрЛП(ТекСтрока.ПунктРазгрузки) + ?(ПустаяСТрока(ТекСтрока.ИДЗаявкиКлиента),"", " ("+ТекСтрока.ИДЗаявкиКлиента+")");
		НоваяСтрока.РеквизитДопУпорядочивания = ТекСтрока.РеквизитДопУпорядочивания;
		
		ТекСтрока.РеквизитДопУпорядочивания = ТекСтрока.РеквизитДопУпорядочивания + 1;
		
		//Если ТекСтрока.Кількість > 0 тогда
		//	Для ид = 1 по ТекСтрока.Кількість - 1 Цикл
		//		ЗаполнитьЗначенияСвойств(ЭтотОбъект.КПереносу.Добавить(),ТекСтрока);
		//	КонецЦикла;
		//КонецЕсли;
		
		
	КонецЦикла;
КонецПроцедуры


