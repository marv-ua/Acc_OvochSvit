
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	КодФормы = "ЗагрузкаАктовПриемаПередачи";
	Максимум = 0;
	
	ЗаполнитьВыбранныеМеста(Параметры.МестаДоставки);

	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыбранныеМеста(МестаДоставки)
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ПунктыРазгрузки.Ссылка КАК Ссылка,
	                      |	ПунктыРазгрузки.ПометкаУдаления КАК ПометкаУдаления,
	                      |	ПунктыРазгрузки.Код КАК Код,
	                      |	ПунктыРазгрузки.Наименование КАК Наименование
	                      |ИЗ
	                      |	Справочник.ПунктыРазгрузки КАК ПунктыРазгрузки
	                      |ГДЕ
	                      |	НЕ ПунктыРазгрузки.ПометкаУдаления");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ВыбранныеМеста.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
		НоваяСтрока.Выбрана = Ложь;
		НоваяСтрока.Выбрана = Не МестаДоставки.Найти(ВыборкаДетальныеЗаписи.Ссылка) = Неопределено;
			
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВыбранныеЦены

&НаКлиенте
Процедура ВыбранныеЦеныПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	ЗадаватьВопрос = Ложь;
	Для каждого ТекСтрока из ВыбранныеМеста.НайтиСтроки(Новый Структура("Выбрана",Истина)) Цикл
		Если ТекСтрока.Кількість > 0 тогда
			ЗадаватьВопрос = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗадаватьВопрос тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаОЗаполнении_Дат",ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения,"Заповнити періоди?",РежимДиалогаВопрос.ДаНет);
	Иначе
		ОповеститьОЗавершенииРаботыФормы(Истина);
	КонецЕсли;
КонецПроцедуры 
&НаКлиенте
Процедура ПослеВопросаОЗаполнении_Дат(Результ, дПараметры) Экспорт

	Адрес = ПолучитьАдресТЧ(Истина);
	ОписаниеОбЗаполнении = Новый ОписаниеОповещения("ПослеЗаполненияКолонки_Дат",ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура("ВыбранныеМеста",Адрес);
	ОткрытьФорму(
		"Обработка.ерпсСозданиеАктаПриемаПередачиТовара.Форма.ФормаЗаполненияДатДоставки",
		ПараметрыОткрытия,
		ЭтаФорма);
	
КонецПроцедуры
&НаКлиенте
Процедура ПослеЗаполненияКолонки_Дат(Результ, дПараметры) Экспорт

	ОповеститьОЗавершенииРаботыФормы(Ложь);
	
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьТаблицуКПереносу()
	
	ЭтотОбъект.КПереносу.Очистить();
	НовТЗ = ЭтотОбъект.ВыбранныеМеста.Выгрузить(ВыбранныеМеста.НайтиСтроки(Новый Структура("Выбрана",Истина)));
	НовТЗ.Сортировать("РеквизитДопУпорядочивания Возр");
	Для каждого ТекСтрока из НовТЗ Цикл
		ЗаполнитьЗначенияСвойств(ЭтотОбъект.КПереносу.Добавить(),ТекСтрока);
		Если ТекСтрока.Кількість > 0 тогда
			Для ид = 1 по ТекСтрока.Кількість - 1 Цикл
				ЗаполнитьЗначенияСвойств(ЭтотОбъект.КПереносу.Добавить(),ТекСтрока);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОЗавершенииРаботыФормы(ОбновлятьТАблицу)
	ОбновитьПорядок = Ложь;
	Индекс = 1;
	Для Каждого СтрокаТЧ Из ВыбранныеМеста Цикл
		Если СтрокаТЧ.РеквизитДопУпорядочивания <> Индекс Тогда
			ОбновитьПорядок = Истина;
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	Адрес = ПолучитьАдресТЧ(ОбновлятьТАблицу);
	ОповеститьОВыборе(Адрес);
	
КонецПроцедуры


&НаСервере
Функция ПолучитьАдресТЧ(ОбновлятьТАблицу = Истина)
	
	
	Если ОбновлятьТАблицу тогда
		ЗаполнитьТаблицуКПереносу();
	КонецЕсли;
	
	ТЗКПередаче = ЭтотОбъект.КПереносу.Выгрузить();
	
	Возврат ПоместитьВоВременноеХранилище(ТЗКПередаче);
КонецФункции

&НаКлиенте
Процедура ВыбратьВсеМеста(Команда)
	
	Для Каждого СтрокаТаблицы Из ВыбранныеМеста Цикл
		Если Не СтрокаТаблицы.Выбрана Тогда
			СтрокаТаблицы.Выбрана = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсеМеста(Команда)
	
	Для Каждого СтрокаТаблицы Из ВыбранныеМеста Цикл
		Если СтрокаТаблицы.Выбрана Тогда
			СтрокаТаблицы.Выбрана = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВыбранныеМеста.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВыбранныеЦены.ПометкаУдаления");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);

КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеЦеныВыбранаПриИзменении(Элемент)
	Максимум = Максимум+1;
	Элементы.ВыбранныеМеста.ТекущиеДанные.РеквизитДопУпорядочивания = Максимум;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ОповеститьОВыборе(ВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПункт(Команда)
	ОткрытьФорму("Справочник.ПунктыРазгрузки.ФормаОбъекта",,,,,, Новый ОписаниеОповещения("ПослеЗаписиНовогоЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписиНовогоЗавершение(Параметр1, Параметр2) Экспорт
	
	ВыбранныеМеста.Очистить();
	ЗаполнитьВыбранныеМеста(Новый Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрВыбранные(Команда)
	Если Элементы.ФильтрВыбранные.Пометка Тогда
		Элементы.ВыбранныеМеста.ОтборСтрок = Новый ФиксированнаяСтруктура();
		Элементы.ФильтрВыбранные.Пометка = Ложь;
	Иначе
		Элементы.ВыбранныеМеста.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Выбрана", Истина));
		Элементы.ФильтрВыбранные.Пометка = Истина;
	КонецЕсли;
КонецПроцедуры


#КонецОбласти