
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//ПРЕЖНИЙ КОД.
	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
	//	
	//	Если ТипЗнч(ПараметрыПечати.Документ) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
	//		ТабДокумент = ПечатьТТН_ПеремещениеТоваров(ПараметрыПечати, ОбъектыПечати);
	//	Иначе
	//		ТабДокумент = ПечатьТТН(ПараметрыПечати, ОбъектыПечати);
	//	КонецЕсли;
	//	
	//	ИмяФайлаПечатнойФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//		НСтр("ru='Товарно-транспортная накладная (1-ТН) №%1 от %2';uk='Товарно-транспортна накладна (1-ТН) №%1 від %2'"),
	//		ПараметрыПечати.НомерТТН,
	//		Формат(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыПечати.Документ, "Дата"), "ДФ=dd.MM.yyyy"));
	//	
	//	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН", НСтр("ru='Товарно-транспортная накладная (1-ТН)';uk='Товарно-транспортна накладна (1-ТН)'"), 
	//		ТабДокумент,,"Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН", ИмяФайлаПечатнойФормы);
	//КонецЕсли;
	
	//ерпсНикодаЕвгений 2021-10-11 НОВЫЙ КОД
	Если МассивОбъектов.Количество() > 1 Тогда
		ТабДокумент = ПечатьНесколькихТТН(ПараметрыПечати, ОбъектыПечати, МассивОбъектов);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН", , ТабДокумент,
		, "Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2019_Упрощенная", "ТТН" , Ложь)
		//Иначе - отрабатывает типовая логика
	Иначе
		//...ерпсНикодаЕвгений 2021-10-11
		
		Если ТипЗнч(ПараметрыПечати.Документ) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			ТабДокумент = ПечатьТТН_ПеремещениеТоваров(ПараметрыПечати, ОбъектыПечати);
		//#8950
		ИначеЕсли ТипЗнч(ПараметрыПечати.Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			ТабДокумент = ПечатьТТН_ПоступлениеТоваровУслуг(ПараметрыПечати, ОбъектыПечати);
		//...#8950
		Иначе
			ТабДокумент = ПечатьТТН(ПараметрыПечати, ОбъектыПечати);
		КонецЕсли;
		
		ИмяФайлаПечатнойФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Товарно-транспортная накладная (1-ТН) №%1 от %2';uk='Товарно-транспортна накладна (1-ТН) №%1 від %2'"),
		ПараметрыПечати.НомерТТН,
		Формат(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыПечати.Документ, "Дата"), "ДФ=dd.MM.yyyy"));
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН", НСтр("ru='Товарно-транспортная накладная (1-ТН)';uk='Товарно-транспортна накладна (1-ТН)'"), 
		ТабДокумент,,"Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН", ИмяФайлаПечатнойФормы);
		
	КонецЕсли;

	
КонецПроцедуры

Функция ПечатьТТН(ПараметрыПечати, ОбъектыПечати) Экспорт
	//ПРЕЖНИЙ КОД
	//УстановитьПривилегированныйРежим(Истина);
	//
	//мВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	//
	//Документ                 = ПараметрыПечати.Документ;
	//МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	//ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	//ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	//ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	//Водитель                 = ПараметрыПечати.Водитель;
	//Перевозчик               = ПараметрыПечати.Перевозчик;
	//ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	//НомерТТН                 = ПараметрыПечати.НомерТТН;
	//
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ДатаСреза",          Документ.Дата);
	//Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Документ.Склад);
	//Запрос.УстановитьПараметр("ТекущийДокумент",  Документ);
	//Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());

	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	Ссылка       КАК Документ,
	//|	Номер,
	//|	Дата         КАК ДатаДокумента,
	//|	Организация,
	//|	Организация  КАК ЮрФизЛицо,
	//|	Организация  КАК Поставщик,
	//|	Организация  КАК Контрагент,
	//|	Организация  КАК Руководители,
	//|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
	//|	      ТОГДА Контрагент
	//|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	//| 	Организация  КАК Грузоотправитель,
	//|	БанковскийСчетОрганизации КАК БанковскийСчет,
	//|	Контрагент   КАК Покупатель,
	//|	Контрагент   КАК Плательщик,
	//|	ОтветственныеЛица.ФизическоеЛицо КАК ОтветственноеЛицо,
	//|	ВалютаДокумента,
	//|	КурсВзаиморасчетов       КАК Курс,
	//|	КратностьВзаиморасчетов  КАК Кратность,
	//|	СуммаВключаетНДС,
	//|	Получил,
	//|	ДоверенностьСерия,
	//|	ДоверенностьНомер,
	//|	ДоверенностьДата
	//|ИЗ
	//|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	//|
	//|ЛЕВОЕ СОЕДИНЕНИЕ
	//|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
	//|ПО
	//|	ОтветственныеЛица.СтруктурнаяЕдиница = РеализацияТоваровУслуг.Склад
	//|
	//|ГДЕ
	//|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";

	//Шапка = Запрос.Выполнить().Выбрать();
	//Шапка.Следующий();

	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ТекущийДокумент", Документ);

	//Если Документ.ВалютаДокумента = Документ.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
	//	// Документ оформлен в валюте взаиморасчетов
	//	Запрос.УстановитьПараметр("Курс", Документ.КурсВзаиморасчетов);
	//	Запрос.УстановитьПараметр("Кратность", Документ.КратностьВзаиморасчетов);
	//Иначе
	//	// Документ оформлен в валюте регламентированного учета
	//	Запрос.УстановитьПараметр("Курс", 1);
	//	Запрос.УстановитьПараметр("Кратность", 1);
	//КонецЕсли;

	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	ВложенныйЗапрос.Номенклатура                                 КАК Номенклатура,
	//|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное              КАК ТоварНаименование,
	//|	ВложенныйЗапрос.Номенклатура.Код			                 КАК Артикул,
	//|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	//|	ВложенныйЗапрос.ЕдиницаИзмерения.Код 						 КАК БазоваяЕдиницаКодПоОКЕИ,
	//|	ВложенныйЗапрос.ЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	//|	ВложенныйЗапрос.Номенклатура.ВидУпаковки					 КАК ВидУпаковки,
	//|	ВложенныйЗапрос.СтавкаНДС           КАК СтавкаНДС,
	//|	ВложенныйЗапрос.Цена                КАК Цена,
	//|	ВложенныйЗапрос.Количество          КАК Количество,
	//|	ВложенныйЗапрос.Сумма               КАК Сумма,
	//|	ВложенныйЗапрос.СуммаНДС            КАК СуммаНДС,
	//|	ВложенныйЗапрос.НомерСтроки         КАК НомерСтроки,
	//|	ВложенныйЗапрос.Метка               КАК Метка
	//|ИЗ
	//|
	//|	(
	//|	ВЫБРАТЬ
	//|		РеализацияТоваровУслуг.Номенклатура,
	//|		РеализацияТоваровУслуг.Коэффициент,
	//|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	//|		РеализацияТоваровУслуг.ЕдиницаИзмерения 					 КАК ЕдиницаИзмеренияМест,
	//|		РеализацияТоваровУслуг.СтавкаНДС,
	//|		РеализацияТоваровУслуг.Цена * &Курс / &Кратность             КАК Цена,
	//|		СУММА(РеализацияТоваровУслуг.Количество)                     КАК Количество,
	//|		СУММА(РеализацияТоваровУслуг.Сумма    * &Курс / &Кратность)  КАК Сумма,
	//|		СУММА(РеализацияТоваровУслуг.СуммаНДС * &Курс / &Кратность)  КАК СуммаНДС,
	//|		МИНИМУМ(РеализацияТоваровУслуг.НомерСтроки)                  КАК НомерСтроки,
	//|		0                                                            КАК Метка
	//|	ИЗ
	//|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	//|	ГДЕ
	//|		РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	//|
	//|СГРУППИРОВАТЬ ПО
	//|		РеализацияТоваровУслуг.Номенклатура,
	//|		РеализацияТоваровУслуг.Коэффициент,
	//|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	//|		РеализацияТоваровУслуг.СтавкаНДС,
	//|		РеализацияТоваровУслуг.Цена
	//|
	//|	) КАК ВложенныйЗапрос
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	РеализацияТоваровУслуг.Номенклатура                    КАК Номенклатура,
	//|	РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	//|	РеализацияТоваровУслуг.Номенклатура.Код   			   КАК Артикул,
	//|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	//|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения.Код 						КАК БазоваяЕдиницаКодПоОКЕИ,
	//|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	//|	NULL                                                  КАК ВидУпаковки,
	//|	""Без НДС""                                           КАК СтавкаНДС,
	//|	РеализацияТоваровУслуг.Цена * &Курс / &Кратность      КАК Цена,
	//|	РеализацияТоваровУслуг.Количество                     КАК Количество,
	//|	РеализацияТоваровУслуг.Сумма * &Курс / &Кратность     КАК Сумма,
	//|	0                                                     КАК СуммаНДС,
	//|	РеализацияТоваровУслуг.НомерСтроки                    КАК НомерСтроки,
	//|	2                                                     КАК Метка
	//|ИЗ
	//|	Документ.РеализацияТоваровУслуг.ВозвратнаяТара КАК РеализацияТоваровУслуг
	//|
	//|ГДЕ
	//|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	//|
	//|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	//|
	//|";

	//ЗапросТовары = Запрос.Выполнить().Выгрузить();

	//ТабДокумент = Новый ТабличныйДокумент;
	//
	//НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	//
	//Если Шапка.ДатаДокумента < Дата("20140114") Тогда
	//	ЗаполнитьТТН (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
	//ИначеЕсли Шапка.ДатаДокумента < Дата("20180910")Тогда
	//	ЗаполнитьТТН2014 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
	//ИначеЕсли Шапка.ДатаДокумента < Дата("20190712")Тогда
	//    ЗаполнитьТТН2018 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
	//Иначе
	//	Если ПараметрыПечати.УпрощеннаяТТН Тогда 
	//		ЗаполнитьТТН2019_Упрощенная(Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
	//	Иначе 
	//		ЗаполнитьТТН2019 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
	//	КонецЕсли;
	//КонецЕсли;
	//
	//// В табличном документе зададим имя области, в которую был выведен объект.
	//// Конкретно в этом случае, нужен не для покомплектной печати, а для возможности задать наименование фалйа при сохранении с номером и датой.
	//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
	//	НомерСтрокиНачало, ОбъектыПечати, Документ);
	//	
	////Если ПараметрыПечати.УпрощеннаяТТН Тогда
	////	ТабДокумент.АвтоМасштаб = Истина;
	////	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	////КонецЕсли;	
	//Возврат ТабДокумент;
	//	
	УстановитьПривилегированныйРежим(Истина);
	
	мВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Документ                 = ПараметрыПечати.Документ;
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	Перевозчик               = ПараметрыПечати.Перевозчик;
	//ерпсНикодаЕвгений 2021-10-06 Проверка отсутствия заполнения параметра Перевозчика для подстановки основной Организации в значение
	//Перевозчик               = ПараметрыПечати.Перевозчик;
	Если ПараметрыПечати.Перевозчик <> "" Тогда
	Перевозчик               = ПараметрыПечати.Перевозчик;
	Иначе Перевозчик		 = Документ.Организация.Наименование;
	//Иначе Перевозчик		 = Справочники.Организации.НайтиПоКоду("000000001");
	КонецЕсли;
	//...ерпсНикодаЕвгений 2021-10-06

	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	
	//ерпсНикодаЕвгений 2021-10-05
	НомерТТН                 = ПараметрыПечати.НомерТТН;
	//...ерпсНикодаЕвгений 2021-10-05

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          Документ.Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Документ.Склад);
	Запрос.УстановитьПараметр("ТекущийДокумент",  Документ);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Ссылка       КАК Документ,
	|	Номер,
	|	Дата         КАК ДатаДокумента,
	|	Организация,
	|	Организация  КАК ЮрФизЛицо,
	|	Организация  КАК Поставщик,
	|	Организация  КАК Контрагент,
	|	Организация  КАК Руководители,
	|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
	|	      ТОГДА Контрагент
	|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	| 	Организация  КАК Грузоотправитель,
	|	БанковскийСчетОрганизации КАК БанковскийСчет,
	|	Контрагент   КАК Покупатель,
	|	Контрагент   КАК Плательщик,
	|	ОтветственныеЛица.ФизическоеЛицо КАК ОтветственноеЛицо,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов       КАК Курс,
	|	КратностьВзаиморасчетов  КАК Кратность,
	|	СуммаВключаетНДС,
	|	Получил,
	|	ДоверенностьСерия,
	|	ДоверенностьНомер,
	|	ДоверенностьДата
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
	|ПО
	|	ОтветственныеЛица.СтруктурнаяЕдиница = РеализацияТоваровУслуг.Склад
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Документ);

	Если Документ.ВалютаДокумента = Документ.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		// Документ оформлен в валюте взаиморасчетов
		Запрос.УстановитьПараметр("Курс", Документ.КурсВзаиморасчетов);
		Запрос.УстановитьПараметр("Кратность", Документ.КратностьВзаиморасчетов);
	Иначе
		// Документ оформлен в валюте регламентированного учета
		Запрос.УстановитьПараметр("Курс", 1);
		Запрос.УстановитьПараметр("Кратность", 1);
	КонецЕсли;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                 КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное              КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код			                 КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код 						 КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Номенклатура.ВидУпаковки					 КАК ВидУпаковки,
	|	ВложенныйЗапрос.СтавкаНДС           КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                КАК Цена,
	|	ВложенныйЗапрос.Количество          КАК Количество,
	|	ВложенныйЗапрос.Сумма               КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС            КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки         КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка               КАК Метка
	|ИЗ
	|
	|	(
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения 					 КАК ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена * &Курс / &Кратность             КАК Цена,
	|		СУММА(РеализацияТоваровУслуг.Количество)                     КАК Количество,
	|		СУММА(РеализацияТоваровУслуг.Сумма    * &Курс / &Кратность)  КАК Сумма,
	|		СУММА(РеализацияТоваровУслуг.СуммаНДС * &Курс / &Кратность)  КАК СуммаНДС,
	|		МИНИМУМ(РеализацияТоваровУслуг.НомерСтроки)                  КАК НомерСтроки,
	|		0                                                            КАК Метка
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена
	|
	|	) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Номенклатура                    КАК Номенклатура,
	|	РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.Номенклатура.Код   			   КАК Артикул,
	|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения.Код 						КАК БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	|	NULL                                                  КАК ВидУпаковки,
	|	""Без НДС""                                           КАК СтавкаНДС,
	|	РеализацияТоваровУслуг.Цена * &Курс / &Кратность      КАК Цена,
	|	РеализацияТоваровУслуг.Количество                     КАК Количество,
	|	РеализацияТоваровУслуг.Сумма * &Курс / &Кратность     КАК Сумма,
	|	0                                                     КАК СуммаНДС,
	|	РеализацияТоваровУслуг.НомерСтроки                    КАК НомерСтроки,
	|	2                                                     КАК Метка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ВозвратнаяТара КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";

	ЗапросТовары = Запрос.Выполнить().Выгрузить();

	ТабДокумент = Новый ТабличныйДокумент;
	
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	Если Шапка.ДатаДокумента < Дата("20140114") Тогда
		ЗаполнитьТТН (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
	ИначеЕсли Шапка.ДатаДокумента < Дата("20180910")Тогда
		ЗаполнитьТТН2014 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
	ИначеЕсли Шапка.ДатаДокумента < Дата("20190712")Тогда
	    ЗаполнитьТТН2018 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
		
	//ерпсНикодаЕвгений 05-11-2021 Изменения в заполнении ТТН согласно закону от 01-10-2021	
	ИначеЕсли Шапка.ДатаДокумента > Дата("20210930")Тогда
	    ЗаполнитьТТН2021 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
	//...ерпсНикодаЕвгений 05-11-2021	
	Иначе
		Если ПараметрыПечати.УпрощеннаяТТН Тогда 
			ЗаполнитьТТН2019_Упрощенная(Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
		Иначе 
			ЗаполнитьТТН2019 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
		КонецЕсли;
	КонецЕсли;
	
	// В табличном документе зададим имя области, в которую был выведен объект.
	// Конкретно в этом случае, нужен не для покомплектной печати, а для возможности задать наименование фалйа при сохранении с номером и датой.
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Документ);
		
	//Если ПараметрыПечати.УпрощеннаяТТН Тогда
	//	ТабДокумент.АвтоМасштаб = Истина;
	//	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	//КонецЕсли;	
	Возврат ТабДокумент;

КонецФункции // ПечатьТТН()

Функция ПечатьНесколькихТТН(ПараметрыПечати, ОбъектыПечати, МассивОбъектов) Экспорт//ерпсНикода 2021-10-11
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыПечати.Удалить("ПечатьНескольких");
	ПараметрыПечати.Удалить("УпрощеннаяТТН");
   		    
   		
	мВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	МассивПараметров = Новый Массив;
	Для Каждого ТекЭлем из ПараметрыПечати Цикл
	МассивПараметров.Добавить(ТекЭлем);	
    КонецЦикла;
	
	Счетчик = 0;
	Счетчик2 = ПараметрыПечати.Количество()/МассивОбъектов.Количество();
	МассивПараметров.Найти("Документ0");
	
	ТабДокументИтог = Новый ТабличныйДокумент;
	МассивТабДок = Новый Массив;
	
	Для каждого Элемент из МассивОбъектов Цикл
		ПараметрыПечатиНов = Новый Структура;
		
	Документ                 = МассивПараметров[Счетчик + 0].Значение;
	ПараметрыПечатиНов.Вставить("Документ", Документ); 
	МаркаИГосНомерАвтомобиля = МассивПараметров[Счетчик + 1].Значение;
	ПараметрыПечатиНов.Вставить("МаркаИГосНомерАвтомобиля", МаркаИГосНомерАвтомобиля); 
	ГосНомерПрицепа          = МассивПараметров[Счетчик + 2].Значение;
	ПараметрыПечатиНов.Вставить("ГосНомерПрицепа", ГосНомерПрицепа);
	ПунктПогрузки            = МассивПараметров[Счетчик + 3].Значение;
	ПараметрыПечатиНов.Вставить("ПунктПогрузки", ПунктПогрузки);
	ПунктРазгрузки           = МассивПараметров[Счетчик + 4].Значение;
	ПараметрыПечатиНов.Вставить("ПунктРазгрузки", ПунктРазгрузки);
	Водитель                 = МассивПараметров[Счетчик + 5].Значение;
	ПараметрыПечатиНов.Вставить("Водитель", Водитель);
	Перевозчик               = МассивПараметров[Счетчик + 6].Значение;

	//ерпсНикодаЕвгений 2021-11-23
	
	//Если Перевозчик <> "" Тогда
	//	Перевозчик               = Перевозчик;
	//	ПараметрыПечатиНов.Вставить("Перевозчик", Перевозчик);
	//Иначе Перевозчик		 = Документ.Организация.Наименование;

	//	ПараметрыПечатиНов.Вставить("Перевозчик", Перевозчик);
	//КонецЕсли;
	

	Если Перевозчик <> "" Тогда
		Перевозчик               = 	Перевозчик;
		ПараметрыПечатиНов.Вставить("Перевозчик", Перевозчик);
	Иначе Перевозчик         	 = Строка(Документ.Организация.Наименование) + ", Код ЄДРПОУ " + Строка(Документ.Организация.КодПоЕДРПОУ);
		ПараметрыПечатиНов.Вставить("Перевозчик", Перевозчик);
	КонецЕсли;
	
	
	//...ерпсНикодаЕвгений 2021-11-23

	
	ВидПеревозки             = МассивПараметров[Счетчик + 7].Значение;
	ПараметрыПечатиНов.Вставить("ВидПеревозки", ВидПеревозки);

	
	НомерТТН                 = МассивПараметров[Счетчик + 9].Значение;
	ПараметрыПечатиНов.Вставить("НомерТТН", НомерТТН);
	ПараметрыПечатиНов.Вставить("УпрощеннаяТТН", Истина);
	Если ПараметрыПечати.Свойство("БезЦен") Тогда
		ПараметрыПечатиНов.Вставить("БезЦен", ПараметрыПечати.БезЦен);
	КонецЕсли;


	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          Документ.Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Документ.Склад);
	Запрос.УстановитьПараметр("ТекущийДокумент",  Документ);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Ссылка       КАК Документ,
	|	Номер,
	|	Дата         КАК ДатаДокумента,
	|	Организация,
	|	Организация  КАК ЮрФизЛицо,
	|	Организация  КАК Поставщик,
	|	Организация  КАК Контрагент,
	|	Организация  КАК Руководители,
	|	ВЫБОР КОГДА Грузополучатель = &ПустойКонтрагент
	|	      ТОГДА Контрагент
	|	      ИНАЧЕ Грузополучатель КОНЕЦ КАК Грузополучатель,
	| 	Организация  КАК Грузоотправитель,
	|	БанковскийСчетОрганизации КАК БанковскийСчет,
	|	Контрагент   КАК Покупатель,
	|	Контрагент   КАК Плательщик,
	|	ОтветственныеЛица.ФизическоеЛицо КАК ОтветственноеЛицо,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов       КАК Курс,
	|	КратностьВзаиморасчетов  КАК Кратность,
	|	СуммаВключаетНДС,
	|	Получил,
	|	ДоверенностьСерия,
	|	ДоверенностьНомер,
	|	ДоверенностьДата
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
	|ПО
	|	ОтветственныеЛица.СтруктурнаяЕдиница = РеализацияТоваровУслуг.Склад
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Документ);

	Если Документ.ВалютаДокумента = Документ.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		// Документ оформлен в валюте взаиморасчетов
		Запрос.УстановитьПараметр("Курс", Документ.КурсВзаиморасчетов);
		Запрос.УстановитьПараметр("Кратность", Документ.КратностьВзаиморасчетов);
	Иначе
		// Документ оформлен в валюте регламентированного учета
		Запрос.УстановитьПараметр("Курс", 1);
		Запрос.УстановитьПараметр("Кратность", 1);
	КонецЕсли;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                 КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное              КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код			                 КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код 						 КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Номенклатура.ВидУпаковки					 КАК ВидУпаковки,
	|	ВложенныйЗапрос.СтавкаНДС           КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                КАК Цена,
	|	ВложенныйЗапрос.Количество          КАК Количество,
	|	ВложенныйЗапрос.Сумма               КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС            КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки         КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка               КАК Метка
	|ИЗ
	|
	|	(
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения 					 КАК ЕдиницаИзмеренияМест,
	|		РеализацияТоваровУслуг.СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена * &Курс / &Кратность             КАК Цена,
	|		СУММА(РеализацияТоваровУслуг.Количество)                     КАК Количество,
	|		СУММА(РеализацияТоваровУслуг.Сумма    * &Курс / &Кратность)  КАК Сумма,
	|		СУММА(РеализацияТоваровУслуг.СуммаНДС * &Курс / &Кратность)  КАК СуммаНДС,
	|		МИНИМУМ(РеализацияТоваровУслуг.НомерСтроки)                  КАК НомерСтроки,
	|		0                                                            КАК Метка
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|		РеализацияТоваровУслуг.Номенклатура,
	|		РеализацияТоваровУслуг.Коэффициент,
	|		РеализацияТоваровУслуг.ЕдиницаИзмерения,
	|		РеализацияТоваровУслуг.СтавкаНДС,
	|		РеализацияТоваровУслуг.Цена
	|
	|	) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Номенклатура                    КАК Номенклатура,
	|	РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.Номенклатура.Код   			   КАК Артикул,
	|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения.Код 						КАК БазоваяЕдиницаКодПоОКЕИ,
	|	РеализацияТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	|	NULL                                                  КАК ВидУпаковки,
	|	""Без НДС""                                           КАК СтавкаНДС,
	|	РеализацияТоваровУслуг.Цена * &Курс / &Кратность      КАК Цена,
	|	РеализацияТоваровУслуг.Количество                     КАК Количество,
	|	РеализацияТоваровУслуг.Сумма * &Курс / &Кратность     КАК Сумма,
	|	0                                                     КАК СуммаНДС,
	|	РеализацияТоваровУслуг.НомерСтроки                    КАК НомерСтроки,
	|	2                                                     КАК Метка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ВозвратнаяТара КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";

	ЗапросТовары = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент = Новый ТабличныйДокумент;
		
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	//ерпсНикодаЕвгений 05-11-2021 
	//Прежний код
	//Если Шапка.ДатаДокумента < Дата("20140114") Тогда
	//	ЗаполнитьТТН (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечатиНов)
	//ИначеЕсли Шапка.ДатаДокумента < Дата("20180910")Тогда
	//	ЗаполнитьТТН2014 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечатиНов)
	//ИначеЕсли Шапка.ДатаДокумента < Дата("20190712")Тогда
	//    ЗаполнитьТТН2018 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечатиНов)
	//Иначе
	//	Если ПараметрыПечатиНов.УпрощеннаяТТН Тогда 
	//		ЗаполнитьТТН2019_Упрощенная(Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечатиНов)
	//	Иначе 
	//		ЗаполнитьТТН2019 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечатиНов)
	//	КонецЕсли;
	//КонецЕсли;
	
	Если Шапка.ДатаДокумента < Дата("20140114") Тогда
		ЗаполнитьТТН (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечатиНов)
	ИначеЕсли Шапка.ДатаДокумента < Дата("20180910")Тогда
		ЗаполнитьТТН2014 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечатиНов)
	ИначеЕсли Шапка.ДатаДокумента < Дата("20190712")Тогда
	    ЗаполнитьТТН2018 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечатиНов)
		
	//ерпсНикодаЕвгений 05-11-2021 Изменения в заполнении ТТН согласно закону от 01-10-2021	
	ИначеЕсли Шапка.ДатаДокумента > Дата("20210930")Тогда
	    ЗаполнитьТТН2021 (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечатиНов)
	//...ерпсНикодаЕвгений 05-11-2021
	
	Иначе
		Если ПараметрыПечатиНов.УпрощеннаяТТН Тогда
			//ерпсНикодаЕвгений 05-11-2021 Изменения в заполнении ТТН согласно закону от 01-10-2021	
			Если Шапка.ДатаДокумента > Дата("20210930")Тогда
	   			 ЗаполнитьТТН2021 (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечатиНов)
			 Иначе 
				 ЗаполнитьТТН2019_Упрощенная(Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечатиНов)
			КонецЕсли;	
	//...ерпсНикодаЕвгений 05-11-2021
		
		Иначе 
			ЗаполнитьТТН2019 (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечатиНов)
		КонецЕсли;
	КонецЕсли;

	
	//...ерпсНикодаЕвгений 05-11-2021
	
	Счетчик = Счетчик + Счетчик2;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
	НомерСтрокиНачало, ОбъектыПечати, Документ);
	
	МассивТабДок.Добавить(ТабДокумент);	
			
КонецЦикла;

Для каждого ТабДок из МассивТабДок Цикл
		ТабДокументИтог.Вывести(ТабДок);
		ТабДокументИтог.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;	

	Возврат ТабДокументИтог;
		

КонецФункции // ПечатьНесколькихТТН()...ерпсНикода 2021-10-11

	
Процедура ЗаполнитьТТН (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	
	Документ                 = ПараметрыПечати.Документ;
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	Перевозчик               = ПараметрыПечати.Перевозчик;
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН");
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);

	Если ЗначениеЗаполнено(Документ.БанковскийСчетОрганизации) Тогда
		НомерСчета = Документ.БанковскийСчетОрганизации.НомерСчета;
		Банк       = Документ.БанковскийСчетОрганизации.Банк;
		МФО		   = Документ.БанковскийСчетОрганизации.Банк.Код;
		
		СведенияОГрузоотправитель.Вставить("НомерСчета",       НомерСчета);
		СведенияОГрузоотправитель.Вставить("Банк",             Банк);
		СведенияОГрузоотправитель.Вставить("МФО",              МФО);
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузоотправительЕДРПОУ = СведенияОГрузоотправитель.КодПоЕДРПОУ;
	ОбластьМакета.Параметры.ГрузополучательЕДРПОУ  = СведенияОГрузополучателе.КодПоЕДРПОУ;
	ОбластьМакета.Параметры.ПлательщикЕДРПОУ       = СведенияОПокупателе.КодПоЕДРПОУ;
	
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя = Водитель;
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	
	ТабДокумент.Вывести(ОбластьМакета);

	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок = ЗапросТовары.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;

	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 0;

	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование;
		//		Мест        = ВыборкаСтрок.КоличествоМест;
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = Окр((ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС)), 2);
		ОбластьМакета.Параметры.Сумма = СуммаСНДС;

		ОбластьМакета.Параметры.Цена = ?(Количество = 0, 0, СуммаСНДС / Количество);

		ТабДокумент.Вывести(ОбластьМакета);

		// увеличим итоги по дукументу
		ИтогоКоличество = ИтогоКоличество + Количество;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;

	КонецЦикла;

	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;

	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");

	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	// Отпуск товара разрешил
	ФИООтпускРазрешил       = Руководители.РуководительПредставление;
	ДолжностьОтпускРазрешил = Руководители.РуководительДолжность;
	
	ОбластьМакета.Параметры.ОтпускРазрешилДолжность = ДолжностьОтпускРазрешил;
	ОбластьМакета.Параметры.ДоверенностьЧерезКого   = Шапка.Получил;
	
	ОбластьМакета.Параметры.СерияДоверенности = Шапка.ДоверенностьСерия;
	ОбластьМакета.Параметры.НомерДоверенности = Шапка.ДоверенностьНомер;
	ОбластьМакета.Параметры.ДатаДоверенности  = Формат(Шапка.ДоверенностьДата, "ДФ = ""дд.ММ.гггг""");
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПрочиеСведения");
	ТабДокумент.Вывести(ОбластьМакета);

КонецПроцедуры // ЗаполнитьТТН()

Процедура ЗаполнитьТТН2014 (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	
	Документ                 = ПараметрыПечати.Документ;
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	Перевозчик               = ПараметрыПечати.Перевозчик;
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;

	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2014");
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	
	Если ЗначениеЗаполнено(Документ.БанковскийСчетОрганизации) Тогда
		НомерСчета = Документ.БанковскийСчетОрганизации.НомерСчета;
		Банк       = Документ.БанковскийСчетОрганизации.Банк;
		МФО		   = Документ.БанковскийСчетОрганизации.Банк.Код;
		
		СведенияОГрузоотправитель.Вставить("НомерСчета",       НомерСчета);
		СведенияОГрузоотправитель.Вставить("Банк",             Банк);
		СведенияОГрузоотправитель.Вставить("МФО",              МФО);
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя = Водитель;
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	// Отпуск товара разрешил
	ФИООтпускРазрешил       = Руководители.РуководительПредставление;
	ДолжностьОтпускРазрешил = Руководители.РуководительДолжность;
	
	ОбластьМакета.Параметры.ОтпускРазрешилДолжность = ?(ЗначениеЗаполнено(ФИООтпускРазрешил), ФИООтпускРазрешил + ", " + ДолжностьОтпускРазрешил, "");
	
	ОбластьМакета.Параметры.СерияДоверенности = Шапка.ДоверенностьСерия;
	ОбластьМакета.Параметры.НомерДоверенности = Шапка.ДоверенностьНомер;
	ОбластьМакета.Параметры.ДатаДоверенности  = Формат(Шапка.ДоверенностьДата, "ДФ = ""дд.ММ.гггг""");
	
	СуммаСНДС   = Окр((ЗапросТовары.Итог("Сумма") + ?(Шапка.СуммаВключаетНДС, 0, ЗапросТовары.Итог("СуммаНДС"))), 2);
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	ОбластьМакета.Параметры.СуммаНДС                = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ЗапросТовары.Итог("СуммаНДС"), Константы.ВалютаРегламентированногоУчета.Получить());
	
	Количество = ЗапросТовары.Итог("Количество");
	КоличествоМест = ?(Цел(Количество) = Количество, Количество, Цел(Количество) + 1);
	КоличествоМестПрописью = НРег(ЧислоПрописью(КоличествоМест,"Л=uk_UK"));
	ОбластьМакета.Параметры.КоличествоМестПрописью  = Лев(КоличествоМестПрописью,СтрДлина(КоличествоМестПрописью)-3);
	
	ТабДокумент.Вывести(ОбластьМакета);
    ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();

	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;

	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 1;

	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование;
		//		Мест        = ВыборкаСтрок.КоличествоМест;
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = Окр((ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС)), 2);
		СуммаБезНДС = СуммаСНДС - ВыборкаСтрок.СуммаНДС;
		
		ОбластьМакета.Параметры.Сумма = СуммаСНДС;

		ОбластьМакета.Параметры.Цена = ?(Количество = 0, 0, СуммаБезНДС / Количество);

		ТабДокумент.Вывести(ОбластьМакета);

		// увеличим итоги по дукументу
		ИтогоКоличество = ИтогоКоличество + Количество;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
		Ном             = Ном + 1;

	КонецЦикла;

	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры  //ЗаполнитьТТН2014

Процедура ЗаполнитьТТН2018 (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	
	Документ                 = ПараметрыПечати.Документ;
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	Перевозчик               = ПараметрыПечати.Перевозчик;
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;

	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2018");
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	
	Если ЗначениеЗаполнено(Документ.БанковскийСчетОрганизации) Тогда
		НомерСчета = Документ.БанковскийСчетОрганизации.НомерСчета;
		Банк       = Документ.БанковскийСчетОрганизации.Банк;
		МФО		   = Документ.БанковскийСчетОрганизации.Банк.Код;
		
		СведенияОГрузоотправитель.Вставить("НомерСчета",       НомерСчета);
		СведенияОГрузоотправитель.Вставить("Банк",             Банк);
		СведенияОГрузоотправитель.Вставить("МФО",              МФО);
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя = Водитель;
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	// Отпуск товара разрешил
	ФИООтпускРазрешил       = Руководители.РуководительПредставление;
	ДолжностьОтпускРазрешил = Руководители.РуководительДолжность;
	
	ОбластьМакета.Параметры.ОтпускРазрешилДолжность = ?(ЗначениеЗаполнено(ФИООтпускРазрешил), ФИООтпускРазрешил + ", " + ДолжностьОтпускРазрешил, "");
	
	ОбластьМакета.Параметры.СерияДоверенности = Шапка.ДоверенностьСерия;
	ОбластьМакета.Параметры.НомерДоверенности = Шапка.ДоверенностьНомер;
	ОбластьМакета.Параметры.ДатаДоверенности  = Формат(Шапка.ДоверенностьДата, "ДФ = ""дд.ММ.гггг""");
	
	СуммаСНДС   = Окр((ЗапросТовары.Итог("Сумма") + ?(Шапка.СуммаВключаетНДС, 0, ЗапросТовары.Итог("СуммаНДС"))), 2);
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	ОбластьМакета.Параметры.СуммаНДС                = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ЗапросТовары.Итог("СуммаНДС"), Константы.ВалютаРегламентированногоУчета.Получить());
	
	Количество = ЗапросТовары.Итог("Количество");
	КоличествоМест = ?(Цел(Количество) = Количество, Количество, Цел(Количество) + 1);
	КоличествоМестПрописью = НРег(ЧислоПрописью(КоличествоМест,"Л=uk_UK"));
	ОбластьМакета.Параметры.КоличествоМестПрописью  = Лев(КоличествоМестПрописью,СтрДлина(КоличествоМестПрописью)-3);
	
	ТабДокумент.Вывести(ОбластьМакета);
    ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();

	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;

	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 1;

	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование;
		//		Мест        = ВыборкаСтрок.КоличествоМест;
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = Окр((ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС)), 2);
		СуммаБезНДС = СуммаСНДС - ВыборкаСтрок.СуммаНДС;
		
		ОбластьМакета.Параметры.Сумма = СуммаСНДС;

		ОбластьМакета.Параметры.Цена = ?(Количество = 0, 0, СуммаБезНДС / Количество);

		ТабДокумент.Вывести(ОбластьМакета);

		// увеличим итоги по дукументу
		ИтогоКоличество = ИтогоКоличество + Количество;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
		Ном             = Ном + 1;

	КонецЦикла;

	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры  //ЗаполнитьТТН2018

Процедура ЗаполнитьТТН2019 (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	
	Документ                 = ПараметрыПечати.Документ;
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	
	//ерпсНикодаЕвгений 2021-10-06
	//Перевозчик               = ПараметрыПечати.Перевозчик;
	Если ПараметрыПечати.Перевозчик <> "" Тогда
		Перевозчик               = ПараметрыПечати.Перевозчик;
	Иначе Перевозчик		 = Справочники.Организации.НайтиПоКоду("000000001");
	КонецЕсли;
	//...ерпсНикодаЕвгений 2021-10-06

	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;

	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2019");
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	 СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	 СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	 СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента,,Шапка.БанковскийСчет,КодЯзыкаПечать);
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Формат(Шапка.ДатаДокумента,"Л=uk_UA; ДФ='''""''dd''""'' MMMM yyyy'") +" року";
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	
	//3135_2020.04.28
	//ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ФактическийАдрес,",, КодЯзыкаПечать);
	//ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ПлательщикПредставление       = Шапка.Грузоотправитель.Наименование + " " + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель,  "КодПоЕДРПОУ,ФактическийАдрес,",, КодЯзыкаПечать);
	//...3135_2020.04.28
	
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	
	//3135_2020.04.28
	//ОбластьМакета.Параметры.ФИОВодителя = Водитель;
	ОбластьМакета.Параметры.ФИОВодителя = Водитель +  ?(ЗначениеЗаполнено(Документ.Водитель), Документ.Водитель.Права, "");
	//...3135_2020.04.28
	
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	
	//3135_2020.04.28
	//ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Шапка.Грузоотправитель.Наименование + " код за ЄДРПОУ " +СведенияОГрузоотправитель.КодПоЕДРПОУ;//3135_2020.04.28
	//...3135_2020.04.28
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	СуммаСНДС   = Окр((ЗапросТовары.Итог("Сумма") + ?(Шапка.СуммаВключаетНДС, 0, ЗапросТовары.Итог("СуммаНДС"))), 2);
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	ОбластьМакета.Параметры.СуммаНДС                = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ЗапросТовары.Итог("СуммаНДС"), Константы.ВалютаРегламентированногоУчета.Получить());
	
	//3135_2020.04.28
	//Количество = ЗапросТовары.Итог("Количество");
	Количество = 0;
	
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		Количество = Количество+ ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес =0,0,Окр(ВыборкаСтрок.Количество /ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));  
	КонецЦикла;
	
	КоличествоТОв = Окр(ЗапросТовары.Итог("Количество"),0)/1000;
	//...3135_2020.04.28
	
	КоличествоМест = ?(Цел(Количество) = Количество, Количество, Цел(Количество) + 1);
	КоличествоМестПрописью = НРег(ЧислоПрописью(КоличествоМест,"Л=uk_UK"));
	ОбластьМакета.Параметры.КоличествоМестПрописью  = Лев(КоличествоМестПрописью,СтрДлина(КоличествоМестПрописью)-3);
	
	//3135_2020.04.28
	//ерпсНикодаЕвгений 2022-01-26
	//исправлено "тисячних" на "десятитисячних"
	З = ЧислоПрописью( КоличествоТОв,"Л=uk_UK; FS=ИСТИНА;",   "ціла, цілих, цілих, ж, десятитисячна, десятитисячних, десятитисячних, ж, 4");
	//...ерпсНикодаЕвгений 2022-01-26

	ОбластьМакета.Параметры.МассаСловами = " " +  З;
	   	
	ПредставлениеВОдит ="";
	Если ЗначениеЗаполнено(Документ.Водитель) Тогда 
		ЗапросПоЛицам = Новый Запрос();
		ЗапросПоЛицам.УстановитьПараметр("ДатаСреза",   Шапка.ДатаДокумента);
		ЗапросПоЛицам.УстановитьПараметр("ФизЛицо",   Документ.Водитель.ФизическоеЛицо);
		
		ЗапросПоЛицам.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	ФИОФизЛицСрезПоследних.Фамилия,
		                      |	ФИОФизЛицСрезПоследних.Имя,
		                      |	ФИОФизЛицСрезПоследних.Отчество,
		                      |	ФИОФизЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо
		                      |ИЗ
		                      |	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаСреза, ФизическоеЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних";
		
		РезВодит = ЗапросПоЛицам.Выполнить().Выбрать();
		Если РезВодит.Следующий() Тогда 
			ПредставлениеВОдит = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(РезВодит.Фамилия, РезВодит.Имя, РезВодит.Отчество);
		КонецЕсли;
	КонецЕсли;
		
	//ОбластьМакета.Параметры.ФиоВодительДолжность =  ?(ЗначениеЗаполнено(Документ.Авто),ПредставлениеВОдит + ", водій","");
	ОбластьМакета.Параметры.ФиоВодительДолжность =  ?(ЗначениеЗаполнено(Документ.Водитель),ПредставлениеВОдит + ", водій","");
	
	
	Доки =  ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Документ, НСтр("ru='Расходная накладная';uk='Видаткова накладна'",КодЯзыкаПечать),КодЯзыкаПечать);
	
	ОбластьМакета.Параметры.Доки = Доки;
	//...3135_2020.04.28
	
	ТабДокумент.Вывести(ОбластьМакета);
    //ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();

	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;

	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 1;

	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование;
		//		Мест        = ВыборкаСтрок.КоличествоМест;
		Количество  = ВыборкаСтрок.Количество;
		СуммаСНДС   = Окр((ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС)), 2);
		СуммаБезНДС = СуммаСНДС - ВыборкаСтрок.СуммаНДС;
		
		ОбластьМакета.Параметры.Сумма = СуммаСНДС;

		ОбластьМакета.Параметры.Цена = ?(Количество = 0, 0, СуммаБезНДС / Количество);
		
		//3135_2020.04.28
		ОбластьМакета.Параметры.Масса =Количество/1000;
		ОбластьМакета.Параметры.ДокументыСопровождения = Доки;
		ОбластьМакета.Параметры.Количество = ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес=0,0, Окр(Количество/ ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		//...3135_2020.04.28

		ТабДокумент.Вывести(ОбластьМакета);

		// увеличим итоги по дукументу
		//3135_2020.04.28
		//ИтогоКоличество = ИтогоКоличество + Количество;
		ИтогоКоличество = ИтогоКоличество + ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес=0,0, Окр(Количество/ ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		//...3135_2020.04.28
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
		Ном             = Ном + 1;

	КонецЦикла;

	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;
	//3135_2020.04.28
	ОбластьМакета.Параметры.ИтогоМасса = КоличествоТОв;
	//...3135_2020.04.28

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	//3135_2020.04.28
	ДанныеДиретор = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Документ.Организация, Документ.ПредставительОрганизации, Документ.Дата);
	
	ФиоДиректора = ДанныеДиретор.Представление + ", " + ДанныеДиретор.Должность;		
	ОбластьМакета.Параметры.ФИОДиректор = ФиоДиректора;//?(ЗначениеЗаполнено(ФИООтпускРазрешил), ФИООтпускРазрешил + ", " + ДолжностьОтпускРазрешил, "");
	//...3135_2020.04.28
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры  //ЗаполнитьТТН2019

Процедура ЗаполнитьТТН2019_Упрощенная (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	//ПРЕЖНИЙ КОД
	//Документ                 = ПараметрыПечати.Документ;
	//МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	//ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	//ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	//ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	//Водитель                 = ПараметрыПечати.Водитель;
	//Перевозчик    = ПараметрыПечати.Перевозчик;
	//ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	//НомерТТН                 = ПараметрыПечати.НомерТТН;

	//
	//// Зададим параметры макета
	//ТабДокумент.ПолеСверху              = 0;
	//ТабДокумент.ПолеСлева               = 5;
	//ТабДокумент.ПолеСнизу               = 0;
	//ТабДокумент.ПолеСправа              = 5;
	//ТабДокумент.АвтоМасштаб             = Истина;
	//ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	//Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2019_Упрощенная");
	//
	//КодЯзыкаПечать = "uk";
	//
	//// Выводим общие реквизиты шапки
	// СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	// СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	// СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента,,Шапка.БанковскийСчет,КодЯзыкаПечать);
	//
	//
	//ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	//ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	//ОбластьМакета.Параметры.ДатаДокумента                 = Формат(Шапка.ДатаДокумента,"Л=uk_UA; ДФ='''""''dd''""'' MMMM yyyy'") +" року";
	//ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	//ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	//ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	//ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	//
	////3135_2020.04.28
	////ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	//ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ФактическийАдрес,",, КодЯзыкаПечать);
	////ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	//ОбластьМакета.Параметры.ПлательщикПредставление       = Шапка.Грузоотправитель.Наименование + " " + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель,  "КодПоЕДРПОУ,ФактическийАдрес,",, КодЯзыкаПечать);
	////...3135_2020.04.28
	//
	//ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	//
	////3135_2020.04.28
	////ОбластьМакета.Параметры.ФИОВодителя = Водитель;
	//ОбластьМакета.Параметры.ФИОВодителя = Водитель +  ?(ЗначениеЗаполнено(Документ.Водитель), Документ.Водитель.Права, "");
	////...3135_2020.04.28
	//
	//ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	//ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	//
	//ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	//ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	//
	////3135_2020.04.28
	////ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	////ЕРПС.Кононенко
	////ОбластьМакета.Параметры.ОрганизацияПеревозчик = Шапка.Грузоотправитель.Наименование + " код за ЄДРПОУ " +СведенияОГрузоотправитель.КодПоЕДРПОУ;//3135_2020.04.28
	//ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	////...3135_2020.04.28
	////...ЕРПС.Кононенко
	//Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	//
	//СуммаСНДС   = Окр((ЗапросТовары.Итог("Сумма") + ?(Шапка.СуммаВключаетНДС, 0, ЗапросТовары.Итог("СуммаНДС"))), 2);
	//ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	//ОбластьМакета.Параметры.СуммаНДС                = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ЗапросТовары.Итог("СуммаНДС"), Константы.ВалютаРегламентированногоУчета.Получить());
	//
	////3135_2020.04.28
	////Количество = ЗапросТовары.Итог("Количество");
	//Количество = 0;
	//
	//Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
	//	//ЕРПС.Кононенко
	//	КоличествоМестВСтроке =  ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес =0,0,Окр(ВыборкаСтрок.Количество /ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
	//	Если КоличествоМестВСтроке < 1 тогда
	//		КоличествоМестВСтроке = 1;
	//	КонецЕсли;	
	//	Количество =  Количество + КоличествоМестВСтроке;
	//	//Количество = Количество+ ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес =0,0,Окр(ВыборкаСтрок.Количество /ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0)); 
	//	//...ЕРПС.Кононенко
	//КонецЦикла;
	//
	//КоличествоТОв = Окр(ЗапросТовары.Итог("Количество"),0)/1000;
	////...3135_2020.04.28
	//
	//КоличествоМест = ?(Цел(Количество) = Количество, Количество, Цел(Количество) + 1);
	//КоличествоМестПрописью = НРег(ЧислоПрописью(КоличествоМест,"Л=uk_UK"));
	//ОбластьМакета.Параметры.КоличествоМестПрописью  = Лев(КоличествоМестПрописью,СтрДлина(КоличествоМестПрописью)-3);
	//
	////3135_2020.04.28
	//З = ЧислоПрописью( КоличествоТОв,"Л=uk_UK; FS=ИСТИНА;",   "ціла, цілих, цілих, ж, тисячна, тисячних, тисячних, ж, 3");
	//
	//ОбластьМакета.Параметры.МассаСловами = " " +  З;
	//   	
	//ПредставлениеВОдит ="";
	//Если ЗначениеЗаполнено(Документ.Водитель) Тогда 
	//	ЗапросПоЛицам = Новый Запрос();
	//	ЗапросПоЛицам.УстановитьПараметр("ДатаСреза",   Шапка.ДатаДокумента);
	//	ЗапросПоЛицам.УстановитьПараметр("ФизЛицо",   Документ.Водитель.ФизическоеЛицо);
	//	
	//	ЗапросПоЛицам.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//	                      |	ФИОФизЛицСрезПоследних.Фамилия,
	//	                      |	ФИОФизЛицСрезПоследних.Имя,
	//	                      |	ФИОФизЛицСрезПоследних.Отчество,
	//	                      |	ФИОФизЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо
	//	                      |ИЗ
	//	                      |	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаСреза, ФизическоеЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних";
	//	
	//	РезВодит = ЗапросПоЛицам.Выполнить().Выбрать();
	//	Если РезВодит.Следующий() Тогда 
	//		ПредставлениеВОдит = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(РезВодит.Фамилия, РезВодит.Имя, РезВодит.Отчество);
	//	КонецЕсли;
	//КонецЕсли;
	//	
	////ОбластьМакета.Параметры.ФиоВодительДолжность =  ?(ЗначениеЗаполнено(Документ.Авто),ПредставлениеВОдит + ", водій","");
	//ОбластьМакета.Параметры.ФиоВодительДолжность =  ?(ЗначениеЗаполнено(Документ.Водитель),ПредставлениеВОдит + ", водій","");
	//
	//
	//Доки =  ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Документ, НСтр("ru='Расходная накладная';uk='Видаткова накладна'",КодЯзыкаПечать),КодЯзыкаПечать);
	//ОбластьМакета.Параметры.Доки = Доки;
	////...3135_2020.04.28
	//
	//ТабДокумент.Вывести(ОбластьМакета);
	////ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//
	//// Выводим заголовок таблицы
	//ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	//ТабДокумент.Вывести(ЗаголовокТаблицы);
	//
	//КоличествоСтрок = ЗапросТовары.Количество();

	//// инициализация итогов по странице
	//ИтогоКоличествоНаСтранице = 0;
	//ИтогоСуммаСНДСНаСтранице  = 0;

	//// инициализация итогов по документу
	//ИтогоМест       = 0;
	//ИтогоКоличество = 0;
	//ИтогоМассаНетто = 0;
	//Ном             = 1;

	//// Выводим многострочную часть докмента
	//ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	//Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

	//	Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
	//		Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
	//		Продолжить;
	//	КонецЕсли;

	//	ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
	//	ОбластьМакета.Параметры.НомерСтроки = Ном;
	//	ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование;
	//	
	//	Количество  = ВыборкаСтрок.Количество;
	//			
	//	//3135_2020.04.28
	//	ОбластьМакета.Параметры.Масса = Количество/1000;
	//	ОбластьМакета.Параметры.Количество = ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес=0,0, Окр(Количество/ ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
	//	//ЕРПС.Кононенко
	//	Если ОбластьМакета.Параметры.Количество < 1 Тогда
	//		ОбластьМакета.Параметры.Количество = 1;
	//	КонецЕсли;
	//	//...ЕРПС.Кононенко
	//	//...3135_2020.04.28

	//	ТабДокумент.Вывести(ОбластьМакета);

	//	// увеличим итоги по дукументу
	//	//3135_2020.04.28
	//	//ЕРПС.Кононенко
	//	//ИтогоКоличество = ИтогоКоличество + ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес=0,0, Окр(Количество/ ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
	//	ИтогоКоличество = ИтогоКоличество + ОбластьМакета.Параметры.Количество;
	//	//...ЕРПС.Кононенко
	//	//...3135_2020.04.28
	//	
	//	Ном             = Ном + 1;

	//КонецЦикла;

	//// Выводим итоги по документу в целом
	//ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	//ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	//
	////3135_2020.04.28
	//ОбластьМакета.Параметры.ИтогоМасса = КоличествоТОв;
	////...3135_2020.04.28

	//ТабДокумент.Вывести(ОбластьМакета);

	//ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	////3135_2020.04.28
	//ДанныеДиретор = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Документ.Организация, Документ.ПредставительОрганизации, Документ.Дата);
	//
	//ФиоДиректора = ДанныеДиретор.Представление + ", " + ДанныеДиретор.Должность;		
	//ОбластьМакета.Параметры.ФИОДиректор = ФиоДиректора;//?(ЗначениеЗаполнено(ФИООтпускРазрешил), ФИООтпускРазрешил + ", " + ДолжностьОтпускРазрешил, "");
	////...3135_2020.04.28
	//ТабДокумент.Вывести(ОбластьМакета);
	//ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	//ТабДокумент.Вывести(ОбластьМакета);
	
	
	//ерпсНикодаЕвгений 2021-10-06 НОВЫЙ КОД
	Документ                 = ПараметрыПечати.Документ;
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	
	//ерпсНикодаЕвгений 2021-10-06
	//Перевозчик               = ПараметрыПечати.Перевозчик;
	Если ПараметрыПечати.Перевозчик <> "" Тогда
		Перевозчик               = ПараметрыПечати.Перевозчик;
	Иначе Перевозчик		 = Справочники.Организации.НайтиПоКоду("000000001");
	КонецЕсли;
	//...ерпсНикодаЕвгений 2021-10-06
	
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;

	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2019_Упрощенная");
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	 СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	 СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	 СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента,,Шапка.БанковскийСчет,КодЯзыкаПечать);
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Формат(Шапка.ДатаДокумента,"Л=uk_UA; ДФ='''""''dd''""'' MMMM yyyy'") +" року";
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	
	//3135_2020.04.28
	//ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ФактическийАдрес,",, КодЯзыкаПечать);
	//ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ПлательщикПредставление       = Шапка.Грузоотправитель.Наименование + " " + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель,  "КодПоЕДРПОУ,ФактическийАдрес,",, КодЯзыкаПечать);
	//...3135_2020.04.28
	
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	
	//3135_2020.04.28
	//ОбластьМакета.Параметры.ФИОВодителя = Водитель;
	Если ТипЗнч(Водитель) = Тип("Строка")тогда
		ОбластьМакета.Параметры.ФИОВодителя = Водитель +  ?(ЗначениеЗаполнено(Документ.Водитель), Документ.Водитель.Права, "");
	Иначе 
		ОбластьМакета.Параметры.ФИОВодителя = Водитель.Наименование +  ?(ЗначениеЗаполнено(Документ.Водитель), Документ.Водитель.Права, "");
	КонецЕсли;
	//...3135_2020.04.28
	
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	
	//3135_2020.04.28
	//ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	//ЕРПС.Кононенко
	//ОбластьМакета.Параметры.ОрганизацияПеревозчик = Шапка.Грузоотправитель.Наименование + " код за ЄДРПОУ " +СведенияОГрузоотправитель.КодПоЕДРПОУ;//3135_2020.04.28
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	//...3135_2020.04.28
	//...ЕРПС.Кононенко
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	СуммаСНДС   = Окр((ЗапросТовары.Итог("Сумма") + ?(Шапка.СуммаВключаетНДС, 0, ЗапросТовары.Итог("СуммаНДС"))), 2);
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	ОбластьМакета.Параметры.СуммаНДС                = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ЗапросТовары.Итог("СуммаНДС"), Константы.ВалютаРегламентированногоУчета.Получить());
	
	//3135_2020.04.28
	//Количество = ЗапросТовары.Итог("Количество");
	Количество = 0;
	
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		//ЕРПС.Кононенко
		КоличествоМестВСтроке =  ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес =0,0,Окр(ВыборкаСтрок.Количество /ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		Если КоличествоМестВСтроке < 1 тогда
			КоличествоМестВСтроке = 1;
		КонецЕсли;	
		Количество =  Количество + КоличествоМестВСтроке;
		//Количество = Количество+ ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес =0,0,Окр(ВыборкаСтрок.Количество /ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0)); 
		//...ЕРПС.Кононенко
	КонецЦикла;
	
	КоличествоТОв = Окр(ЗапросТовары.Итог("Количество"),0)/1000;
	//...3135_2020.04.28
	
	КоличествоМест = ?(Цел(Количество) = Количество, Количество, Цел(Количество) + 1);
	КоличествоМестПрописью = НРег(ЧислоПрописью(КоличествоМест,"Л=uk_UK"));
	ОбластьМакета.Параметры.КоличествоМестПрописью  = Лев(КоличествоМестПрописью,СтрДлина(КоличествоМестПрописью)-3);
	
	//3135_2020.04.28
	//ерпсНикодаЕвгений 2022-01-26
	//исправлено "тисячних" на "десятитисячних"
	З = ЧислоПрописью( КоличествоТОв,"Л=uk_UK; FS=ИСТИНА;",   "ціла, цілих, цілих, ж, десятитисячна, десятитисячних, десятитисячних, ж, 4");
	//...ерпсНикодаЕвгений 2022-01-26

	ОбластьМакета.Параметры.МассаСловами = " " +  З;
	   	
	ПредставлениеВОдит ="";
	Если ЗначениеЗаполнено(Документ.Водитель) Тогда 
		ЗапросПоЛицам = Новый Запрос();
		ЗапросПоЛицам.УстановитьПараметр("ДатаСреза",   Шапка.ДатаДокумента);
		ЗапросПоЛицам.УстановитьПараметр("ФизЛицо",   Документ.Водитель.ФизическоеЛицо);
		
		ЗапросПоЛицам.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	ФИОФизЛицСрезПоследних.Фамилия,
		                      |	ФИОФизЛицСрезПоследних.Имя,
		                      |	ФИОФизЛицСрезПоследних.Отчество,
		                      |	ФИОФизЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо
		                      |ИЗ
		                      |	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаСреза, ФизическоеЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних";
		
		РезВодит = ЗапросПоЛицам.Выполнить().Выбрать();
		Если РезВодит.Следующий() Тогда 
			ПредставлениеВОдит = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(РезВодит.Фамилия, РезВодит.Имя, РезВодит.Отчество);
		КонецЕсли;
	КонецЕсли;
		
	//ОбластьМакета.Параметры.ФиоВодительДолжность =  ?(ЗначениеЗаполнено(Документ.Авто),ПредставлениеВОдит + ", водій","");
	ОбластьМакета.Параметры.ФиоВодительДолжность =  ?(ЗначениеЗаполнено(Документ.Водитель),ПредставлениеВОдит + ", водій","");
	
	
	Доки =  ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Документ, НСтр("ru='Расходная накладная';uk='Видаткова накладна'",КодЯзыкаПечать),КодЯзыкаПечать);
	ОбластьМакета.Параметры.Доки = Доки;
	//...3135_2020.04.28
	
	ТабДокумент.Вывести(ОбластьМакета);
    //ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();

	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;

	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоМассаНетто = 0;
	Ном             = 1;

	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование;
		
		Количество  = ВыборкаСтрок.Количество;
				
		//3135_2020.04.28
		ОбластьМакета.Параметры.Масса = Количество/1000;
		ОбластьМакета.Параметры.Количество = ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес=0,0, Окр(Количество/ ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		//ЕРПС.Кононенко
		Если ОбластьМакета.Параметры.Количество < 1 Тогда
			ОбластьМакета.Параметры.Количество = 1;
		КонецЕсли;
		//...ЕРПС.Кононенко
		//...3135_2020.04.28

		ТабДокумент.Вывести(ОбластьМакета);

		// увеличим итоги по дукументу
		//3135_2020.04.28
		//ЕРПС.Кононенко
		//ИтогоКоличество = ИтогоКоличество + ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес=0,0, Окр(Количество/ ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		ИтогоКоличество = ИтогоКоличество + ОбластьМакета.Параметры.Количество;
		//...ЕРПС.Кононенко
		//...3135_2020.04.28
		
		Ном             = Ном + 1;

	КонецЦикла;

	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	
	//3135_2020.04.28
	ОбластьМакета.Параметры.ИтогоМасса = КоличествоТОв;
	//...3135_2020.04.28

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	//3135_2020.04.28
	ДанныеДиретор = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Документ.Организация, Документ.ПредставительОрганизации, Документ.Дата);
	
	ФиоДиректора = ДанныеДиретор.Представление + ", " + ДанныеДиретор.Должность;		
	ОбластьМакета.Параметры.ФИОДиректор = ФиоДиректора;//?(ЗначениеЗаполнено(ФИООтпускРазрешил), ФИООтпускРазрешил + ", " + ДолжностьОтпускРазрешил, "");
	//...3135_2020.04.28
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры  //ЗаполнитьТТН2019

Процедура ЗаполнитьТТН2021 (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати) // ЗаполнитьТТН2021 ерпсНикодаЕвгений 05-11-2021 Процедура заполнения по правилам от 01-10-2021

	//Документ                 = ПараметрыПечати.Документ;
	//МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	//ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	//ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	//ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	//Водитель                 = ПараметрыПечати.Водитель;
	//Перевозчик               = ПараметрыПечати.Перевозчик;
	//ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	//НомерТТН                 = ПараметрыПечати.НомерТТН;
	
	//ерпсНикодаЕвгений 2021-10-06 НОВЫЙ КОД
	Документ                 = ПараметрыПечати.Документ;
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;

	
	
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2021");
	// Test{20240418 
	Если ПараметрыПечати.БезЦен Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2024_доп");
	КонецЕсли;
	// Test}
	
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	 СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	 СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	 СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента,,Шапка.БанковскийСчет,КодЯзыкаПечать);
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Формат(Шапка.ДатаДокумента,"Л=uk_UA; ДФ='''""''dd''""'' MMMM yyyy'") +" року";
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,КодПоДРФО,",, КодЯзыкаПечать);
	
	//ерпсНикодаЕвгений 05-11-2021
	//Заполнение по правилам от 01.10.2021
	
	//ерпсНикодаЕвгений 2021-11-22
	//Перевозчик               = ПараметрыПечати.Перевозчик;
	//Если ПараметрыПечати.Перевозчик <> "" Тогда
	//	Перевозчик           = ПараметрыПечати.Перевозчик;
	//Иначе Перевозчик		 = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	//КонецЕсли;
	//ерпсНикодаЕвгений 05-11-2021
	//Заполнение по правилам от 01.10.2021
	
	//ерпсНикодаЕвгений 2021-11-23
	Если ПараметрыПечати.Перевозчик <> "" Тогда
		Перевозчик               = 	ПараметрыПечати.Перевозчик;
	Иначе
		Перевозчик         	 = Строка(Документ.Организация) + ", Код ЄДРПОУ " + Строка(Документ.Организация.КодПоЕДРПОУ);	
	КонецЕсли;
	//...ерпсНикодаЕвгений 2021-11-23

	
	//Адрес места составления ТТН
	ОбластьМакета.Параметры.МестоСоставленияТТН       	  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель,  "ФактическийАдрес,",, КодЯзыкаПечать);
	
	//3135_2020.04.28
	//ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ФактическийАдрес,КодПоЕДРПОУ,КодПоДРФО,",, КодЯзыкаПечать);
	Если ПараметрыПечати.БезЦен Тогда
	//	ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
		ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель,  "ПолноеНаименование,КодПоЕДРПОУ,",, КодЯзыкаПечать);
		ОбластьМакета.Параметры.ГрузополучательПредставление  = "Покупець " + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,КодПоЕДРПОУ,",, КодЯзыкаПечать) + " на " + Документ.ПунктРазгрузки;
	Иначе 
		ОбластьМакета.Параметры.ПлательщикПредставление       = Шапка.Грузоотправитель.Наименование + " " + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель,  "КодПоЕДРПОУ,КодПоДРФО,ФактическийАдрес,",, КодЯзыкаПечать);
	КонецЕсли;	
	//...3135_2020.04.28
	
		
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	
	//3135_2020.04.28
	//ОбластьМакета.Параметры.ФИОВодителя = Водитель;
	ОбластьМакета.Параметры.ФИОВодителя = Водитель +  ?(ЗначениеЗаполнено(Документ.Водитель), Документ.Водитель.Права, "");
	//...3135_2020.04.28
	
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	//ОбластьМакета.Параметры.ПунктРазгрузки = СтрШаблон("%1 %2", ПунктРазгрузки, ?(ПараметрыПечати.БезЦен, "", " ("+Документ.ПунктРазгрузки.НаименованиеПолное+")"));
	ОбластьМакета.Параметры.ПунктРазгрузки = СтрШаблон("%1 %2", ПунктРазгрузки, " ("+Документ.ПунктРазгрузки.НаименованиеПолное+")");
	
		//3135_2020.04.28
	//ерпсНикодаЕвгений 09-11-2021	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	//ерпсНикодаЕвгений 22-11-2021
	//...ерпсНикодаЕвгений 22-11-2021
	
	//ОбластьМакета.Параметры.ОрганизацияПеревозчик = Шапка.Грузоотправитель.Наименование + " код за ЄДРПОУ " +СведенияОГрузоотправитель.КодПоЕДРПОУ;//3135_2020.04.28
	
	//...ерпсНикодаЕвгений 09-11-2021
	//...3135_2020.04.28
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	СуммаСНДС   = Окр((ЗапросТовары.Итог("Сумма") + ?(Шапка.СуммаВключаетНДС, 0, ЗапросТовары.Итог("СуммаНДС"))), 2);
	Если Не ПараметрыПечати.БезЦен Тогда
		ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
		ОбластьМакета.Параметры.СуммаНДС                = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ЗапросТовары.Итог("СуммаНДС"), Константы.ВалютаРегламентированногоУчета.Получить());
	КонецЕсли;
	//3135_2020.04.28
	Количествой= ЗапросТовары.Итог("Количество");
	КолСУпаковкой =0;
	КолСУпаковкой = Количествой/1000 + (Количествой * 0.05)/1000;
	Количество = 0;
	
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		Ном = ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес =0,0,Окр(ВыборкаСтрок.Количество /ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		Если Ном < 1 тогда
			Количество = Количество + 1 ;  
		Иначе 	
			Количество = Количество + Ном ;  
		КонецЕсли;
	КонецЦикла;
	
	//ерпс НикодаЕвгений 14.12.2021 Округление до 4-х
	//КоличествоТОв = Окр(ЗапросТовары.Итог("Количество"),0)/1000;

	КоличествоТОв = Окр(ЗапросТовары.Итог("Количество")*?(ПараметрыПечати.БезЦен,1000,1),4)/1000;
	//ерпс НикодаЕвгений 14.12.2021 Округление до 4-х

	//...3135_2020.04.28
	
	//КоличествоМест = ?(Цел(Количество) = Количество, Количество, Цел(Количество) + 1);
	КоличествоМестПрописью = НРег(ЧислоПрописью(Формат(Количество,"ЧЦ=10; ЧДЦ=4"),"Л=uk_UK"));
	ОбластьМакета.Параметры.КоличествоМестПрописью  = Лев(КоличествоМестПрописью,СтрДлина(КоличествоМестПрописью)-3);
	
	//3135_2020.04.28
	//ерпсНикодаЕвгений 2022-01-22
	//исправлено "тисячних"... на "десятитисячних"...
	З = ЧислоПрописью( КолСУпаковкой,"Л=uk_UK; FS=ИСТИНА;",   "ціла, цілих, цілих, ж, десятитисячна, десятитисячних, десятитисячних, ж, 4");
	//ерпсНикодаЕвгений 2022-01-22

	
	ОбластьМакета.Параметры.МассаСловами = " " +  З;
	   	
	ПредставлениеВОдит ="";
	Если ЗначениеЗаполнено(Документ.Водитель) Тогда 
		ЗапросПоЛицам = Новый Запрос();
		ЗапросПоЛицам.УстановитьПараметр("ДатаСреза",   Шапка.ДатаДокумента);
		ЗапросПоЛицам.УстановитьПараметр("ФизЛицо",   Документ.Водитель.ФизическоеЛицо);
		
		ЗапросПоЛицам.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	ФИОФизЛицСрезПоследних.Фамилия,
		                      |	ФИОФизЛицСрезПоследних.Имя,
		                      |	ФИОФизЛицСрезПоследних.Отчество,
		                      |	ФИОФизЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо
		                      |ИЗ
		                      |	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаСреза, ФизическоеЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних";
		
		РезВодит = ЗапросПоЛицам.Выполнить().Выбрать();
		Если РезВодит.Следующий() Тогда 
			ПредставлениеВОдит = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(РезВодит.Фамилия, РезВодит.Имя, РезВодит.Отчество);
		КонецЕсли;
	КонецЕсли;
		
	//ОбластьМакета.Параметры.ФиоВодительДолжность =  ?(ЗначениеЗаполнено(Документ.Авто),ПредставлениеВОдит + ", водій","");
	ОбластьМакета.Параметры.ФиоВодительДолжность =  ?(ЗначениеЗаполнено(Документ.Водитель),ПредставлениеВОдит + ", водій","");
	
	
	Доки =  ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Документ, НСтр("ru='Расходная накладная';uk='Видаткова накладна'",КодЯзыкаПечать),КодЯзыкаПечать);
	Если ПараметрыПечати.БезЦен Тогда
		
		Доки = Доки + " згідно заявки № " + Документ.ИДЗаявкиКлиента + " від " + Формат(Документ.ДатаЗаявкиКлиента, "ДФ=dd.MM.yyyyр.");
		Если Не ЗначениеЗаполнено(Документ.ИДЗаявкиКлиента) Тогда
			ВызватьИсключение("Не заповнено ІД заявки клієнта в документі " + Документ);
		КонецЕсли;
	КонецЕсли;
	ОбластьМакета.Параметры.Доки = Доки;
	//...3135_2020.04.28
	
	ТабДокумент.Вывести(ОбластьМакета);
    //ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы"+?(ПараметрыПечати.БезЦен,"Доп",""));
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();

	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;

	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоКоличествоБ = 0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 1;

		
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"+?(ПараметрыПечати.БезЦен,"Доп",""));
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование;
		
		Количество  = ВыборкаСтрок.Количество;
				
		//3135_2020.04.28 
		ОбластьМакета.Параметры.Масса = Количество/1000 *?(ПараметрыПечати.БезЦен,1000,1);
		//ерпсИгнатенко
		КолСУпаковкой = 0;
		КолСУпаковкой = (Количество * 0.05)/1000;  
		ОбластьМакета.Параметры.МассаБ = Количество/1000 + КолСУпаковкой;
		//ерпсИгнатенко
		ОбластьМакета.Параметры.Количество = ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес=0,0, Окр(Количество/ ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		//ЕРПС.Кононенко
		Если ОбластьМакета.Параметры.Количество < 1 Тогда
			ОбластьМакета.Параметры.Количество = 1;
		КонецЕсли;
		Если ПараметрыПечати.БезЦен Тогда
			ОбластьМакета.Параметры.ДокументыСГрузом = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ.Номер);
		КонецЕсли;
		//...ЕРПС.Кононенко
		//...3135_2020.04.28

		ТабДокумент.Вывести(ОбластьМакета);

		// увеличим итоги по дукументу
		//3135_2020.04.28
		//ЕРПС.Кононенко
		//ИтогоКоличество = ИтогоКоличество + ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес=0,0, Окр(Количество/ ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		ИтогоКоличество = ИтогоКоличество + ОбластьМакета.Параметры.Количество;
		ИтогоКоличествоБ= ИтогоКоличествоБ + ОбластьМакета.Параметры.МассаБ;
		//...ЕРПС.Кононенко
		//...3135_2020.04.28
		
		Ном             = Ном + 1;

	КонецЦикла;

	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего"+?(ПараметрыПечати.БезЦен,"Доп",""));
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	//ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;
	//3135_2020.04.28

	ОбластьМакета.Параметры.ИтогоМасса = КоличествоТОв;
	ОбластьМакета.Параметры.ИтогоМассаБ = ИтогоКоличествоБ; 
	//...3135_2020.04.28

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	
		
	//3135_2020.04.28
	ДанныеДиретор = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Документ.Организация, Документ.ПредставительОрганизации, Документ.Дата);
	
	ФиоДиректора = ДанныеДиретор.Представление + ", " + ДанныеДиретор.Должность;		
	ОбластьМакета.Параметры.ФИОДиректор = ФиоДиректора;//?(ЗначениеЗаполнено(ФИООтпускРазрешил), ФИООтпускРазрешил + ", " + ДолжностьОтпускРазрешил, "");
	//...3135_2020.04.28
	ТабДокумент.Вывести(ОбластьМакета);
	
	//ерпсНикодаЕвгений 22-11-2021
	//ерпсНикодаЕвгений 05-11-2021
	//Заполнение таблицы "ВІДОМОСТІ ПРО ПАРАМЕТРИ ТРАНСПОРТНОГО ЗАСОБУ"
	
	//ОбластьМакета = Макет.ПолучитьОбласть("ПараметрыТС");
	//ОбластьМакета.Параметры.ВинКод = Документ.Авто.ВинКод; 
	//ОбластьМакета.Параметры.ГодВыпускаТС = (Формат(Документ.Авто.ГодВыпускаТС, "ДФ=гггг")); 
	//ОбластьМакета.Параметры.ДлинаТС = Документ.Авто.ДлинаТС; 
	//ОбластьМакета.Параметры.ШиринаТС = Документ.Авто.ШиринаТС;
	//ОбластьМакета.Параметры.ВысотаТС = Документ.Авто.ВысотаТС;
	//ОбластьМакета.Параметры.ВесБезГруза = Документ.Авто.ВесБезГруза;
	//
	////ОбластьМакета.Параметры.ВесСГрузом = Документ.Авто.ВесБезГруза + Окр(ЗапросТовары.Итог("Количество"),0)/1000;
	//ОбластьМакета.Параметры.ВесСГрузом = Документ.Авто.ВесБезГруза + ИтогоКоличествоБ;
	//ТабДокумент.Вывести(ОбластьМакета);
	//
		//Заполнение таблицы "ВІДОМОСТІ ПРО ПАРАМЕТРИ ТРАНСПОРТНОГО ЗАСОБУ"
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПараметрыТС");
	ОбластьМакета.Параметры.ВинКод = Документ.Авто.ВинКод; 
	ОбластьМакета.Параметры.ГодВыпускаТС = (Формат(Документ.Авто.ГодВыпускаТС, "ДФ=гггг")); 
	ОбластьМакета.Параметры.ДлинаТС = Документ.Авто.ДлинаТС; 
	ОбластьМакета.Параметры.ШиринаТС = Документ.Авто.ШиринаТС;
	ОбластьМакета.Параметры.ВысотаТС = Документ.Авто.ВысотаТС;
	ОбластьМакета.Параметры.ВесБезГруза = Документ.Авто.ВесБезГруза;
	ОбластьМакета.Параметры.ВесСталаАвто = Документ.Авто.ВесАвтоСтала;

	//ерпсНикодаЕвгений 19-11-2021
	Если Документ.Прицеп.Наименование <> "" тогда
		ОбластьМакета.Параметры.ВинКодПР = Документ.Прицеп.ВинКод;
		ОбластьМакета.Параметры.ГодВыпускаПР = (Формат(Документ.Прицеп.ГодВыпускаТС, "ДФ=гггг")); 
		ОбластьМакета.Параметры.ДлинаПР = Документ.Прицеп.ДлинаТС;
		ОбластьМакета.Параметры.ШиринаПР = Документ.Прицеп.ШиринаТС;
		ОбластьМакета.Параметры.ВысотаПР = Документ.Прицеп.ВысотаТС;
		ОбластьМакета.Параметры.ВесБезГрузаПР = Документ.Прицеп.ВесБезГруза;
		ОбластьМакета.Параметры.ВесСталаПР = Документ.Прицеп.ВесТсСтал;
	Иначе
		ОбластьМакета.Параметры.ВинКодПР = "—";
		ОбластьМакета.Параметры.ГодВыпускаПР = "—"; 
		ОбластьМакета.Параметры.ДлинаПР = "—";
		ОбластьМакета.Параметры.ШиринаПР = "—";
		ОбластьМакета.Параметры.ВысотаПР = "—";
		ОбластьМакета.Параметры.ВесБезГрузаПР = "—";
		ОбластьМакета.Параметры.ВесСталаПР = "—";
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	//...ерпсНикодаЕвгений 19-11-2021
	
	////...ерпсНикодаЕвгений 05-11-2021
	//
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ОбластьМакета.Параметры.ИтогоМассаБ = ИтогоКоличествоБ;
	ТабДокумент.Вывести(ОбластьМакета);
	
	//...ерпсНикодаЕвгений 22-11-2021
	//ерпсНикодаЕвгений 05-11-2021
	
	//ОбластьМакета.Параметры.ВесСГрузом = Документ.Авто.ВесБезГруза + Окр(ЗапросТовары.Итог("Количество"),0)/1000;
	//ерпсНикодаЕвгений 19-11-2021
	//ОбластьМакета.Параметры.ВесСГрузом = Документ.Авто.ВесБезГруза + ИтогоКоличествоБ;
	//...ерпсНикодаЕвгений 19-11-2021

		
	//...ерпсНикодаЕвгений 05-11-2021

	
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	
		
	КонецПроцедуры //...ерпсНикодаЕвгений 05-11-2021 Конец Процедуры ЗаполнитьТТН2021 Заполнение по правилам от 01-10-2021


// Функция осуществляет печать формы "1-Т"
// на основании документа "ПеремещениеТоваров".
//
Функция ПечатьТТН_ПеремещениеТоваров(ПараметрыПечати, ОбъектыПечати) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	мВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Документ                 = ПараметрыПечати.Документ;
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	Перевозчик               = ПараметрыПечати.Перевозчик;
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;
	ТипЦен                   = ПараметрыПечати.ТипЦен;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          Документ.Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Документ.СкладОтправитель);
	Запрос.УстановитьПараметр("ТекущийДокумент",    Документ);
	Запрос.УстановитьПараметр("ПустойКонтрагент",   Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТипСкладаНТТ",       Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата         КАК ДатаДокумента,
	|	Организация,
	|	Организация  КАК ЮрФизЛицо,
	|	Организация  КАК Поставщик,
	|	Организация  КАК Контрагент,
	|	Организация  КАК Руководители,
	|	Организация  КАК Грузополучатель,
	|	Организация  КАК Грузоотправитель,
	|	Организация.ОсновнойБанковскийСчет КАК БанковскийСчет,
	|	&ПустойКонтрагент КАК Покупатель,
	|	&ПустойКонтрагент КАК Плательщик,
	|	ВЫБОР КОГДА (СкладОтправитель.ТипСклада = &ТипСкладаНТТ ИЛИ СкладПолучатель.ТипСклада = &ТипСкладаНТТ) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ЕстьНТТ,
	|	ОтветственныеЛица.ФизическоеЛицо КАК ОтветственноеЛицо
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДокПеремещение
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
	|ПО
	|	ОтветственныеЛица.СтруктурнаяЕдиница = ДокПеремещение.СкладОтправитель
	|
	|ГДЕ
	|	ДокПеремещение.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Документ);
	Запрос.УстановитьПараметр("ЕстьНТТ",         Шапка.ЕстьНТТ);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                 КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код         				     КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код 						 КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление   	         КАК ВидУпаковки,
	|	ВложенныйЗапрос.Цена                                         КАК Цена,
	|	0                                                            КАК Сумма,
	|	ВложенныйЗапрос.Количество                                   КАК Количество,
	|	ВложенныйЗапрос.НомерСтроки                                  КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка                                        КАК Метка
	|ИЗ
	|
	|	(
	|	ВЫБРАТЬ
	|		ДокТовар.Номенклатура,
	|		ДокТовар.ЕдиницаИзмерения,
	|		ДокТовар.ЕдиницаИзмерения,
	|		ВЫБОР КОГДА &ЕстьНТТ ТОГДА ДокТовар.Цена ИНАЧЕ 0 КОНЕЦ КАК Цена,
	|		СУММА(ДокТовар.Количество)          КАК Количество,
	|		МИНИМУМ(ДокТовар.НомерСтроки)       КАК НомерСтроки,
	|		0                                   КАК Метка
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ДокТовар
	|	ГДЕ
	|		ДокТовар.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|		ДокТовар.Номенклатура,
	|		ДокТовар.ЕдиницаИзмерения,
	|		ВЫБОР КОГДА &ЕстьНТТ ТОГДА ДокТовар.Цена ИНАЧЕ 0 КОНЕЦ
	|
	|	) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)),
	|	ВложенныйЗапрос.Номенклатура.Код,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление,
	|	ВложенныйЗапрос.Цена,
	|	0,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.Метка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокТовар.Номенклатура КАК Номенклатура,
	|		ДокТовар.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ВЫБОР
	|			КОГДА &ЕстьНТТ
	|				ТОГДА ДокТовар.Цена
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Цена,
	|		СУММА(ДокТовар.Количество) КАК Количество,
	|		МИНИМУМ(ДокТовар.НомерСтроки) КАК НомерСтроки,
	|		1 КАК Метка
	|	ИЗ
	|		Документ.ПеремещениеТоваров.ТоварыНаКомиссии КАК ДокТовар
	|	ГДЕ
	|		ДокТовар.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДокТовар.Номенклатура,
	|		ДокТовар.ЕдиницаИзмерения,
	|		ВЫБОР
	|			КОГДА &ЕстьНТТ
	|				ТОГДА ДокТовар.Цена
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ДокТовар.ЕдиницаИзмерения) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
 	|
	|ВЫБРАТЬ
	|	ДокТара.Номенклатура                                  КАК Номенклатура,
	|	ДокТара.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ДокТара.Номенклатура.Код             			      КАК Артикул,
	|	ДокТара.Номенклатура.БазоваяЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	|	ДокТара.Номенклатура.БазоваяЕдиницаИзмерения.Код 						 КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ДокТара.Номенклатура.БазоваяЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	|	NULL                                                  КАК ВидУпаковки,
	|	0                                                     КАК Цена,
	|	0                                                     КАК Сумма,	
	|	ДокТара.Количество                                    КАК Количество,
	|	ДокТара.НомерСтроки                                   КАК НомерСтроки,
	|	2                                                     КАК Метка
	|ИЗ
	|	Документ.ПеремещениеТоваров.ВозвратнаяТара КАК ДокТара
	|
	|ГДЕ
	|	ДокТара.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";

	ЗапросТовары = Запрос.Выполнить().Выгрузить();

	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Количество  = ВыборкаСтрок.Количество;

		Если ВыборкаСтрок.Метка <> 0
		 ИЛИ НЕ ЗначениеЗаполнено(ТипЦен) Тогда
			Цена      = 0;
			СуммаСНДС = 0;
		Иначе
			Если ВыборкаСтрок.Цена = 0 Тогда
				Цена = Ценообразование.ПолучитьЦенуНоменклатуры(ВыборкаСтрок.Номенклатура, 
				                                ТипЦен, Шапка.ДатаДокумента, 
				                                мВалютаРегламентированногоУчета, 1, 1);
			Иначе
				Цена = ВыборкаСтрок.Цена;
			КонецЕсли;

			СуммаСНДС = Окр(Количество * Цена, 2);
		КонецЕсли;

		ВыборкаСтрок.Цена  = Цена;
		ВыборкаСтрок.Сумма = СуммаСНДС;

	КонецЦикла;
	
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	Если Шапка.ДатаДокумента < Дата("20140114") Тогда
		ЗаполнитьТТН_ПеремещениеТоваров  (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	ИначеЕсли Шапка.ДатаДокумента < Дата("20180910") Тогда
	    ЗаполнитьТТН2014_ПеремещениеТоваров  (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	ИначеЕсли Шапка.ДатаДокумента < Дата("20190712")Тогда
	    ЗаполнитьТТН2018_ПеремещениеТоваров (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
	Иначе
		//ЗаполнитьТТН2019_ПеремещениеТоваров (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати)
		ЗаполнитьТТН2021_ПеремещениеТоваров (Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати);
	КонецЕсли;	
	
	// В табличном документе зададим имя области, в которую был выведен объект.
	// Конкретно в этом случае, нужен не для покомплектной печати, а для возможности задать наименование фалйа при сохранении с номером и датой.
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Документ);	
	
	Возврат ТабДокумент;

КонецФункции // ПечатьТТН_ПеремещениеТоваров()

Процедура ЗаполнитьТТН_ПеремещениеТоваров (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	
	мВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	Перевозчик               = ПараметрыПечати.Перевозчик;
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;
	ТипЦен                   = ПараметрыПечати.ТипЦен;
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН");
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузоотправительЕДРПОУ = СведенияОГрузоотправитель.КодПоЕДРПОУ;
	ОбластьМакета.Параметры.ГрузополучательЕДРПОУ  = СведенияОГрузополучателе.КодПоЕДРПОУ;
	ОбластьМакета.Параметры.ПлательщикЕДРПОУ       = СведенияОПокупателе.КодПоЕДРПОУ;
	
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя = Водитель;
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	
	ТабДокумент.Вывести(ОбластьМакета);

	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок = ЗапросТовары.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;

	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 0;

	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование);
		Количество  = ВыборкаСтрок.Количество;

		Если ВыборкаСтрок.Метка = 2
		 ИЛИ НЕ ЗначениеЗаполнено(ТипЦен) Тогда
			Цена      = 0;
			СуммаСНДС = 0;
		Иначе
			Если ВыборкаСтрок.Цена = 0 Тогда
				Цена = Ценообразование.ПолучитьЦенуНоменклатуры(ВыборкаСтрок.Номенклатура, 
				                                ТипЦен, Шапка.ДатаДокумента, 
				                                мВалютаРегламентированногоУчета, 1, 1);
			Иначе
				Цена = ВыборкаСтрок.Цена;
			КонецЕсли;

			СуммаСНДС = Окр(Количество * Цена, 2);
		КонецЕсли;

		ОбластьМакета.Параметры.Цена  = Цена;
		ОбластьМакета.Параметры.Сумма = СуммаСНДС;

		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по дукументу
		ИтогоКоличество = ИтогоКоличество + Количество;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;

	КонецЦикла;
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;

	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	// Отпуск товара разрешил
	ФИООтпускРазрешил       = Руководители.РуководительПредставление;
	ДолжностьОтпускРазрешил = Руководители.РуководительДолжность;
	
	ОбластьМакета.Параметры.ОтпускРазрешилДолжность = ДолжностьОтпускРазрешил;
	
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтогоСуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПрочиеСведения");
	ТабДокумент.Вывести(ОбластьМакета);

КонецПроцедуры

Процедура ЗаполнитьТТН2014_ПеремещениеТоваров (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	Перевозчик               = ПараметрыПечати.Перевозчик;
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;
	
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2014");
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя = Водитель;
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	// Отпуск товара разрешил
	ФИООтпускРазрешил       = Руководители.РуководительПредставление;
	ДолжностьОтпускРазрешил = Руководители.РуководительДолжность;
	
	ОбластьМакета.Параметры.ОтпускРазрешилДолжность = ?(ЗначениеЗаполнено(ФИООтпускРазрешил), ФИООтпускРазрешил + ", " + ДолжностьОтпускРазрешил, "");
	
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ЗапросТовары.Итог("Сумма"), Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	
	Количество = ЗапросТовары.Итог("Количество");
	КоличествоМест = ?(Цел(Количество) = Количество, Количество, Цел(Количество) + 1);
	КоличествоМестПрописью = НРег(ЧислоПрописью(КоличествоМест,"Л=uk_UK"));
	ОбластьМакета.Параметры.КоличествоМестПрописью  = Лев(КоличествоМестПрописью,СтрДлина(КоличествоМестПрописью)-3);
	
	ТабДокумент.Вывести(ОбластьМакета);
    ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	Ном = 1;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		Ном = Ном + 1;
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ЗапросТовары.Итог("Количество");
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ЗапросТовары.Итог("Сумма");

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
КонецПроцедуры

Процедура ЗаполнитьТТН2018_ПеремещениеТоваров (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	Перевозчик               = ПараметрыПечати.Перевозчик;
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;
	
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2018");
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя = Водитель;
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	// Отпуск товара разрешил
	ФИООтпускРазрешил       = Руководители.РуководительПредставление;
	ДолжностьОтпускРазрешил = Руководители.РуководительДолжность;
	
	ОбластьМакета.Параметры.ОтпускРазрешилДолжность = ?(ЗначениеЗаполнено(ФИООтпускРазрешил), ФИООтпускРазрешил + ", " + ДолжностьОтпускРазрешил, "");
	
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ЗапросТовары.Итог("Сумма"), Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	
	Количество = ЗапросТовары.Итог("Количество");
	КоличествоМест = ?(Цел(Количество) = Количество, Количество, Цел(Количество) + 1);
	КоличествоМестПрописью = НРег(ЧислоПрописью(КоличествоМест,"Л=uk_UK"));
	ОбластьМакета.Параметры.КоличествоМестПрописью  = Лев(КоличествоМестПрописью,СтрДлина(КоличествоМестПрописью)-3);
	
	ТабДокумент.Вывести(ОбластьМакета);
    ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	Ном = 1;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		Ном = Ном + 1;
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ЗапросТовары.Итог("Количество");
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ЗапросТовары.Итог("Сумма");

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
КонецПроцедуры

Процедура ЗаполнитьТТН2019_ПеремещениеТоваров (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	Перевозчик               = ПараметрыПечати.Перевозчик;
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;
	
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2019");
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	//СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента);
	//СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента);
	//СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента);
	СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента,,,КодЯзыкаПечать);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Формат(Шапка.ДатаДокумента,"Л=uk_UA; ДФ='''""''dd''""'' MMMM yyyy'") +" року";
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	ОбластьМакета.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
	
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя = Водитель;
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ЗапросТовары.Итог("Сумма"), Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	
	Количество = ЗапросТовары.Итог("Количество");
	КоличествоМест = ?(Цел(Количество) = Количество, Количество, Цел(Количество) + 1);
	КоличествоМестПрописью = НРег(ЧислоПрописью(КоличествоМест,"Л=uk_UK"));
	ОбластьМакета.Параметры.КоличествоМестПрописью  = Лев(КоличествоМестПрописью,СтрДлина(КоличествоМестПрописью)-3);
	
	ТабДокумент.Вывести(ОбластьМакета);
    ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	Ном = 1;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		Ном = Ном + 1;
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ЗапросТовары.Итог("Количество");
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ЗапросТовары.Итог("Сумма");

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОбластьМакета);
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ТабДокумент.Вывести(ОбластьМакета);
КонецПроцедуры 

Процедура ЗаполнитьТТН2021_ПеремещениеТоваров (Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати)
	//#8950
	Документ                 = ПараметрыПечати.Документ;
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	
	Если ПараметрыПечати.Перевозчик <> "" Тогда
		Перевозчик	= ПараметрыПечати.Перевозчик;
	Иначе 
		Перевозчик	= Строка(Шапка.Организация) + ", Код ЄДРПОУ " + Строка(Шапка.Организация.КодПоЕДРПОУ);		
	КонецЕсли;
	
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;
	
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2021");
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента,,,КодЯзыкаПечать);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Формат(Шапка.ДатаДокумента,"Л=uk_UA; ДФ='''""''dd''""'' MMMM yyyy'") +" року";
	ОбластьМакета.Параметры.МестоСоставленияТТН       	  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель,  "ФактическийАдрес,",, КодЯзыкаПечать);
	
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,КодПоДРФО,",, КодЯзыкаПечать);
	
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ФактическийАдрес,КодПоЕДРПОУ,КодПоДРФО,",, КодЯзыкаПечать);	
	ОбластьМакета.Параметры.ПлательщикПредставление       = Шапка.Грузоотправитель.Наименование + " " + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель,  "КодПоЕДРПОУ,КодПоДРФО,ФактическийАдрес,",, КодЯзыкаПечать);
	
	
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	ОбластьМакета.Параметры.ФИОВодителя = Водитель +  ?(ЗначениеЗаполнено(Документ.Водитель), Документ.Водитель.Права, "");
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ЗапросТовары.Итог("Сумма"), Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	
	Количество = ЗапросТовары.Итог("Количество");
	
	КолвоСУпаковкой =0;
	КолвоСУпаковкой = Количество/1000 + (Количество * 0.05)/1000;
	
	Количество = 0;
	
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		Ном = ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес =0,0,Окр(ВыборкаСтрок.Количество /ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		Если Ном < 1 тогда
			Количество = Количество + 1 ;  
		Иначе 	
			Количество = Количество + Ном ;  
		КонецЕсли;
	КонецЦикла;
	
	КоличествоМест = ?(Цел(Количество) = Количество, Количество, Цел(Количество) + 1);
	КоличествоМестПрописью = НРег(ЧислоПрописью(КоличествоМест,"Л=uk_UK"));
	ОбластьМакета.Параметры.КоличествоМестПрописью  = Лев(КоличествоМестПрописью,СтрДлина(КоличествоМестПрописью)-3);
	
	З = ЧислоПрописью(КолвоСУпаковкой, "Л=uk_UK; FS=ИСТИНА;", "ціла, цілих, цілих, ж, десятитисячна, десятитисячних, десятитисячних, ж, 4");	
	ОбластьМакета.Параметры.МассаСловами = " " +  З;
	
	ПредставлениеВодителя ="";
	Если ЗначениеЗаполнено(Документ.Водитель) Тогда 
		ЗапросПоЛицам = Новый Запрос();
		ЗапросПоЛицам.УстановитьПараметр("ДатаСреза",   Шапка.ДатаДокумента);
		ЗапросПоЛицам.УстановитьПараметр("ФизЛицо",   Документ.Водитель.ФизическоеЛицо);
		
		ЗапросПоЛицам.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество,
		|	ФИОФизЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаСреза, ФизическоеЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних";
		
		РезВодит = ЗапросПоЛицам.Выполнить().Выбрать();
		Если РезВодит.Следующий() Тогда 
			ПредставлениеВодителя = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(РезВодит.Фамилия, РезВодит.Имя, РезВодит.Отчество);
		КонецЕсли;
	КонецЕсли;
	
	ОбластьМакета.Параметры.ФиоВодительДолжность =  ?(ЗначениеЗаполнено(Документ.Водитель),ПредставлениеВодителя + ", водій","");
		
	Доки =  ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Документ, НСтр("ru='Расходная накладная';uk='Видаткова накладна'",КодЯзыкаПечать),КодЯзыкаПечать);
	ОбластьМакета.Параметры.Доки = Доки;

	ТабДокумент.Вывести(ОбластьМакета);
    ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	Ном = 1;
	ИтогоКоличество = 0;
	ИтогоКоличествоБ = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		Ном = Ном + 1;
		
		Количество  = ВыборкаСтрок.Количество;
				
		ОбластьМакета.Параметры.Масса = Количество/1000;
		
		КолвоСУпаковкой	= 0;
		КолвоСУпаковкой	= (Количество * 0.05)/1000;
		МассаБрутто		= Количество/1000 + КолвоСУпаковкой;
		ОбластьМакета.Параметры.МассаБ = МассаБрутто;
		
		КолвоМест = ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес=0,0, Окр(Количество/ ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		ОбластьМакета.Параметры.Количество = КолвоМест;
		
		Если ОбластьМакета.Параметры.Количество < 1 Тогда
			ОбластьМакета.Параметры.Количество = 1;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ИтогоКоличество = ИтогоКоличество	+ КолвоМест;
		ИтогоКоличествоБ= ИтогоКоличествоБ	+ МассаБрутто;

	КонецЦикла;
	
	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	
	КоличествоТовары					= Окр(ЗапросТовары.Итог("Количество"),4)/1000;
	ОбластьМакета.Параметры.ИтогоМасса	= КоличествоТовары;
	ОбластьМакета.Параметры.ИтогоМассаБ = ИтогоКоличествоБ;

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	
	//ДанныеДиретор = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Документ.Организация, Документ.ПредставительОрганизации, Документ.Дата);
	//
	//ФиоДиректора = ДанныеДиретор.Представление + ", " + ДанныеДиретор.Должность;		
	//ОбластьМакета.Параметры.ФИОДиректор = ФиоДиректора;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПараметрыТС");
	ОбластьМакета.Параметры.ВинКод = Документ.Авто.ВинКод; 
	ОбластьМакета.Параметры.ГодВыпускаТС = (Формат(Документ.Авто.ГодВыпускаТС, "ДФ=гггг")); 
	ОбластьМакета.Параметры.ДлинаТС = Документ.Авто.ДлинаТС; 
	ОбластьМакета.Параметры.ШиринаТС = Документ.Авто.ШиринаТС;
	ОбластьМакета.Параметры.ВысотаТС = Документ.Авто.ВысотаТС;
	ОбластьМакета.Параметры.ВесБезГруза = Документ.Авто.ВесБезГруза;
	ОбластьМакета.Параметры.ВесСталаАвто = Документ.Авто.ВесАвтоСтала;
	
	Если Документ.Прицеп.Наименование <> "" тогда
		ОбластьМакета.Параметры.ВинКодПР = Документ.Прицеп.ВинКод;
		ОбластьМакета.Параметры.ГодВыпускаПР = (Формат(Документ.Прицеп.ГодВыпускаТС, "ДФ=гггг")); 
		ОбластьМакета.Параметры.ДлинаПР = Документ.Прицеп.ДлинаТС;
		ОбластьМакета.Параметры.ШиринаПР = Документ.Прицеп.ШиринаТС;
		ОбластьМакета.Параметры.ВысотаПР = Документ.Прицеп.ВысотаТС;
		ОбластьМакета.Параметры.ВесБезГрузаПР = Документ.Прицеп.ВесБезГруза;
		ОбластьМакета.Параметры.ВесСталаПР = Документ.Прицеп.ВесТсСтал;
	Иначе
		ОбластьМакета.Параметры.ВинКодПР = "—";
		ОбластьМакета.Параметры.ГодВыпускаПР = "—"; 
		ОбластьМакета.Параметры.ДлинаПР = "—";
		ОбластьМакета.Параметры.ШиринаПР = "—";
		ОбластьМакета.Параметры.ВысотаПР = "—";
		ОбластьМакета.Параметры.ВесБезГрузаПР = "—";
		ОбластьМакета.Параметры.ВесСталаПР = "—";
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ОбластьМакета.Параметры.ИтогоМассаБ = ИтогоКоличествоБ;
	ТабДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Функция ПечатьТТН_ПоступлениеТоваровУслуг(ПараметрыПечати, ОбъектыПечати)
	//#8950
	УстановитьПривилегированныйРежим(Истина);
	
	мВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Документ                 = ПараметрыПечати.Документ;
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
		
	Если ПараметрыПечати.Перевозчик <> "" Тогда
		Перевозчик	= ПараметрыПечати.Перевозчик;
	Иначе 
		Перевозчик	= Документ.Организация.Наименование;
	КонецЕсли;

	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	
	
	НомерТТН                 = ПараметрыПечати.НомерТТН;
	

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза",          Документ.Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Документ.Склад);
	Запрос.УстановитьПараметр("ТекущийДокумент",  Документ);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Ссылка       КАК Документ,
	|	Номер,
	|	ДатаВходящегоДокумента КАК ДатаДокумента,
	|	Организация,
	|	Организация  КАК ЮрФизЛицо,
	|	Организация  КАК Поставщик,
	|	Организация  КАК Контрагент,
	|	Организация  КАК Руководители,
	|	Организация	 КАК Грузополучатель,
	| 	Контрагент  КАК Грузоотправитель,
	|	Организация.ОсновнойБанковскийСчет КАК БанковскийСчет,
	|	Организация   КАК Покупатель,
	|	Организация   КАК Плательщик,
	|	ОтветственныеЛица.ФизическоеЛицо КАК ОтветственноеЛицо,
	|	ВалютаДокумента,
	|	КурсВзаиморасчетов       КАК Курс,
	|	КратностьВзаиморасчетов  КАК Кратность,
	|	СуммаВключаетНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
	|ПО
	|	ОтветственныеЛица.СтруктурнаяЕдиница = ПоступлениеТоваровУслуг.Склад
	|
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Документ);

	Если Документ.ВалютаДокумента = Документ.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		// Документ оформлен в валюте взаиморасчетов
		Запрос.УстановитьПараметр("Курс", Документ.КурсВзаиморасчетов);
		Запрос.УстановитьПараметр("Кратность", Документ.КратностьВзаиморасчетов);
	Иначе
		// Документ оформлен в валюте регламентированного учета
		Запрос.УстановитьПараметр("Курс", 1);
		Запрос.УстановитьПараметр("Кратность", 1);
	КонецЕсли;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                 КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное              КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код			                 КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код 						 КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Номенклатура.ВидУпаковки					 КАК ВидУпаковки,
	|	ВложенныйЗапрос.СтавкаНДС           КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                КАК Цена,
	|	ВложенныйЗапрос.Количество          КАК Количество,
	|	ВложенныйЗапрос.Сумма               КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС            КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки         КАК НомерСтроки,
	|	ВложенныйЗапрос.Метка               КАК Метка
	|ИЗ
	|
	|	(
	|	ВЫБРАТЬ
	|		ПоступлениеТоваровУслуг.Номенклатура,
	|		ПоступлениеТоваровУслуг.Коэффициент,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения 					 КАК ЕдиницаИзмеренияМест,
	|		ПоступлениеТоваровУслуг.СтавкаНДС,
	|		ПоступлениеТоваровУслуг.Цена * &Курс / &Кратность             КАК Цена,
	|		СУММА(ПоступлениеТоваровУслуг.Количество)                     КАК Количество,
	|		СУММА(ПоступлениеТоваровУслуг.Сумма    * &Курс / &Кратность)  КАК Сумма,
	|		СУММА(ПоступлениеТоваровУслуг.СуммаНДС * &Курс / &Кратность)  КАК СуммаНДС,
	|		МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки)                  КАК НомерСтроки,
	|		0                                                            КАК Метка
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|	ГДЕ
	|		ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|		ПоступлениеТоваровУслуг.Номенклатура,
	|		ПоступлениеТоваровУслуг.Коэффициент,
	|		ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|		ПоступлениеТоваровУслуг.СтавкаНДС,
	|		ПоступлениеТоваровУслуг.Цена
	|
	|	) КАК ВложенныйЗапрос
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Номенклатура                    КАК Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.Код   			   КАК Артикул,
	|	ПоступлениеТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения.Представление               КАК БазоваяЕдиницаНаименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения.Код 						КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ПоступлениеТоваровУслуг.Номенклатура.БазоваяЕдиницаИзмерения                             КАК ЕдиницаИзмерения,
	|	NULL                                                  КАК ВидУпаковки,
	|	""Без НДС""                                           КАК СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Цена * &Курс / &Кратность      КАК Цена,
	|	ПоступлениеТоваровУслуг.Количество                     КАК Количество,
	|	ПоступлениеТоваровУслуг.Сумма * &Курс / &Кратность     КАК Сумма,
	|	0                                                     КАК СуммаНДС,
	|	ПоступлениеТоваровУслуг.НомерСтроки                    КАК НомерСтроки,
	|	2                                                     КАК Метка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ВозвратнаяТара КАК ПоступлениеТоваровУслуг
	|
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО Метка ВОЗР, НомерСтроки ВОЗР
	|
	|";

	ЗапросТовары = Запрос.Выполнить().Выгрузить();

	ТабДокумент = Новый ТабличныйДокумент;
	
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	ЗаполнитьТТН_ПоступлениеТоваровУслуг(Шапка, ЗапросТовары, ТабДокумент,ПараметрыПечати);
	
	// В табличном документе зададим имя области, в которую был выведен объект.
	// Конкретно в этом случае, нужен не для покомплектной печати, а для возможности задать наименование фалйа при сохранении с номером и датой.
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Документ);
	
	Возврат ТабДокумент;
	
КонецФункции

Процедура ЗаполнитьТТН_ПоступлениеТоваровУслуг(Шапка, ЗапросТовары, ТабДокумент, ПараметрыПечати) 
	//#8950
	
	Документ                 = ПараметрыПечати.Документ;
	МаркаИГосНомерАвтомобиля = ПараметрыПечати.МаркаИГосНомерАвтомобиля;
	ГосНомерПрицепа          = ПараметрыПечати.ГосНомерПрицепа;
	ПунктПогрузки            = ПараметрыПечати.ПунктПогрузки;
	ПунктРазгрузки           = ПараметрыПечати.ПунктРазгрузки;
	Водитель                 = ПараметрыПечати.Водитель;
	ВидПеревозки             = ПараметрыПечати.ВидПеревозки;
	НомерТТН                 = ПараметрыПечати.НомерТТН;
	Перевозчик               = ПараметрыПечати.Перевозчик;
	
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН2022");
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	 СведенияОПокупателе       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель,       Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	 СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузополучатель,  Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	 СведенияОГрузоотправитель = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Грузоотправитель, Шапка.ДатаДокумента,,,КодЯзыкаПечать);
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.НомерДокумента                = НомерТТН;
	ОбластьМакета.Параметры.ДатаДокумента                 = Формат(Шапка.ДатаДокумента,"Л=uk_UA; ДФ='''""''dd''""'' MMMM yyyy'") +" року";
	ОбластьМакета.Параметры.Грузоотправитель              = Шапка.Грузоотправитель;
	ОбластьМакета.Параметры.Грузополучатель               = Шапка.Грузополучатель;
	ОбластьМакета.Параметры.Плательщик                    = Шапка.Покупатель;
	ОбластьМакета.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,КодПоДРФО,",, КодЯзыкаПечать);
		
	//Адрес места составления ТТН
	ОбластьМакета.Параметры.МестоСоставленияТТН       	  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель,  "ФактическийАдрес,",, КодЯзыкаПечать);
		
	ОбластьМакета.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ФактическийАдрес,КодПоЕДРПОУ,КодПоДРФО,",, КодЯзыкаПечать);
	
	ОбластьМакета.Параметры.ПлательщикПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование, КодПоЕДРПОУ,КодПоДРФО,",, КодЯзыкаПечать);
		
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля;
	
	ОбластьМакета.Параметры.ФИОВодителя = Водитель +  ?(ЗначениеЗаполнено(Документ.Водитель), Документ.Водитель.Права, "");
	
	ОбластьМакета.Параметры.ВидПеревозки = ВидПеревозки;
	ОбластьМакета.Параметры.ГосНомерПрицепа = ГосНомерПрицепа; 
	
	ОбластьМакета.Параметры.ПунктПогрузки = ПунктПогрузки;
	ОбластьМакета.Параметры.ПунктРазгрузки = ПунктРазгрузки;
	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = Перевозчик;
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента);
	
	СуммаСНДС   = Окр((ЗапросТовары.Итог("Сумма") + ?(Шапка.СуммаВключаетНДС, 0, ЗапросТовары.Итог("СуммаНДС"))), 2);
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаСНДС, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
	ОбластьМакета.Параметры.СуммаНДС                = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ЗапросТовары.Итог("СуммаНДС"), Константы.ВалютаРегламентированногоУчета.Получить());
	
	Количество		= ЗапросТовары.Итог("Количество");
	КолСУпаковкой	= 0;
	КолСУпаковкой	= Количество/1000 + (Количество * 0.05)/1000;
	Количество		= 0;
	
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл
		Ном = ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес =0,0,Окр(ВыборкаСтрок.Количество /ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		Если Ном < 1 тогда
			Количество = Количество + 1 ;  
		Иначе 	
			Количество = Количество + Ном ;  
		КонецЕсли;
	КонецЦикла;
		
	КоличествоМестПрописью = НРег(ЧислоПрописью(Формат(Количество,"ЧЦ=10; ЧДЦ=4"),"Л=uk_UK"));
	ОбластьМакета.Параметры.КоличествоМестПрописью  = Лев(КоличествоМестПрописью,СтрДлина(КоличествоМестПрописью)-3);
	
	З = ЧислоПрописью( КолСУпаковкой,"Л=uk_UK; FS=ИСТИНА;",   "ціла, цілих, цілих, ж, десятитисячна, десятитисячних, десятитисячних, ж, 4");

	ОбластьМакета.Параметры.МассаСловами = " " +  З;
	   	
	ПредставлениеВодителя ="";
	Если ЗначениеЗаполнено(Документ.Водитель) Тогда 
		ЗапросПоЛицам = Новый Запрос();
		ЗапросПоЛицам.УстановитьПараметр("ДатаСреза",   Шапка.ДатаДокумента);
		ЗапросПоЛицам.УстановитьПараметр("ФизЛицо",   Документ.Водитель.ФизическоеЛицо);
		
		ЗапросПоЛицам.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	ФИОФизЛицСрезПоследних.Фамилия,
		                      |	ФИОФизЛицСрезПоследних.Имя,
		                      |	ФИОФизЛицСрезПоследних.Отчество,
		                      |	ФИОФизЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо
		                      |ИЗ
		                      |	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаСреза, ФизическоеЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних";
		
		РезВодит = ЗапросПоЛицам.Выполнить().Выбрать();
		Если РезВодит.Следующий() Тогда 
			ПредставлениеВодителя = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(РезВодит.Фамилия, РезВодит.Имя, РезВодит.Отчество);
		КонецЕсли;
	КонецЕсли;
		
	ОбластьМакета.Параметры.ФиоВодительДолжность =  ?(ЗначениеЗаполнено(Документ.Водитель),ПредставлениеВодителя + ", водій","");
	
	НазваниеДокумента = НСтр("ru='Расходная накладная';uk='Видаткова накладна'",КодЯзыкаПечать);
	Доки =  НазваниеДокумента + " № "
			+ Документ.НомерВходящегоДокумента
			+ НСтр("ru=' от ';uk=' від '",КодЯзыкаПечать) + Формат(Документ.ДатаВходящегоДокумента, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать)) + НСтр("ru=' г.';uk=' р.'",КодЯзыкаПечать);
	
	ОбластьМакета.Параметры.Доки = Доки;
	
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ЗапросТовары.Количество();

	// инициализация итогов по странице
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;

	// инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоКоличествоБ = 0;
	ИтогоСуммаСНДС  = 0;
	Ном             = 1;

		
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.Номенклатура) Тогда
			Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрок);
		ОбластьМакета.Параметры.НомерСтроки = Ном;
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрок.ТоварНаименование;
		
		Количество  = ВыборкаСтрок.Количество;
		
		СуммаСНДС   = Окр((ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС)), 2);
		СуммаБезНДС = СуммаСНДС - ВыборкаСтрок.СуммаНДС;
		
		ОбластьМакета.Параметры.Сумма = СуммаСНДС;
		
		ОбластьМакета.Параметры.Цена = ?(Количество = 0, 0, СуммаБезНДС / Количество);

		ОбластьМакета.Параметры.Масса = Количество/1000;
				
		КолСУпаковкой = 0;
		КолСУпаковкой = (Количество * 0.05)/1000;  
		МассаБрутто		= Количество/1000 + КолСУпаковкой;
			
		ОбластьМакета.Параметры.МассаБ = МассаБрутто;
		
		КолвоМест = ?(ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес=0,0, Окр(Количество/ ВыборкаСтрок.Номенклатура.ВидУпаковки.Вес,0));
		ОбластьМакета.Параметры.Количество = КолвоМест;
		
		Если ОбластьМакета.Параметры.Количество < 1 Тогда
			ОбластьМакета.Параметры.Количество = 1;
		КонецЕсли;

		ТабДокумент.Вывести(ОбластьМакета);
		
		// увеличим итоги по дукументу
		
		ИтогоКоличество = ИтогоКоличество + КолвоМест;
		ИтогоКоличествоБ= ИтогоКоличествоБ + МассаБрутто;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;
		
		Ном             = Ном + 1;

	КонецЦикла;

	// Выводим итоги по документу в целом
	ОбластьМакета = Макет.ПолучитьОбласть("Всего");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтогоСуммаСНДС;
	КоличествоТовары					= Окр(ЗапросТовары.Итог("Количество"),4)/1000;
	ОбластьМакета.Параметры.ИтогоМасса	= КоличествоТовары;
	
	ОбластьМакета.Параметры.ИтогоМассаБ = ИтогоКоличествоБ; 
	

	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	
	ОтветственныеЛицаОрганизации = ОтветственныеЛицаБППовтИсп.ОтветственныеЛица(Документ.Организация, Документ.Дата);
	ДанныеФизЛица = ОтветственныеЛицаОрганизации.РуководительФИО;
	
	РуководительФИО = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(
		ДанныеФизЛица.Фамилия,
		ДанныеФизЛица.Имя,
		ДанныеФизЛица.Отчество,
		Истина);
	
	ОбластьМакета.Параметры.ФИОДиректор1 = РуководительФИО + ", " + ОтветственныеЛицаОрганизации.РуководительДолжность;

	
	ТабДокумент.Вывести(ОбластьМакета);
	
	//Заполнение таблицы "ВІДОМОСТІ ПРО ПАРАМЕТРИ ТРАНСПОРТНОГО ЗАСОБУ"
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПараметрыТС");
	ОбластьМакета.Параметры.ВинКод = Документ.Авто.ВинКод; 
	ОбластьМакета.Параметры.ГодВыпускаТС = (Формат(Документ.Авто.ГодВыпускаТС, "ДФ=гггг")); 
	ОбластьМакета.Параметры.ДлинаТС = Документ.Авто.ДлинаТС; 
	ОбластьМакета.Параметры.ШиринаТС = Документ.Авто.ШиринаТС;
	ОбластьМакета.Параметры.ВысотаТС = Документ.Авто.ВысотаТС;
	ОбластьМакета.Параметры.ВесБезГруза = Документ.Авто.ВесБезГруза;
	ОбластьМакета.Параметры.ВесСталаАвто = Документ.Авто.ВесАвтоСтала;

	
	Если Документ.Прицеп.Наименование <> "" тогда
		ОбластьМакета.Параметры.ВинКодПР = Документ.Прицеп.ВинКод;
		ОбластьМакета.Параметры.ГодВыпускаПР = (Формат(Документ.Прицеп.ГодВыпускаТС, "ДФ=гггг")); 
		ОбластьМакета.Параметры.ДлинаПР = Документ.Прицеп.ДлинаТС;
		ОбластьМакета.Параметры.ШиринаПР = Документ.Прицеп.ШиринаТС;
		ОбластьМакета.Параметры.ВысотаПР = Документ.Прицеп.ВысотаТС;
		ОбластьМакета.Параметры.ВесБезГрузаПР = Документ.Прицеп.ВесБезГруза;
		ОбластьМакета.Параметры.ВесСталаПР = Документ.Прицеп.ВесТсСтал;
	Иначе
		ОбластьМакета.Параметры.ВинКодПР = "—";
		ОбластьМакета.Параметры.ГодВыпускаПР = "—"; 
		ОбластьМакета.Параметры.ДлинаПР = "—";
		ОбластьМакета.Параметры.ШиринаПР = "—";
		ОбластьМакета.Параметры.ВысотаПР = "—";
		ОбластьМакета.Параметры.ВесБезГрузаПР = "—";
		ОбластьМакета.Параметры.ВесСталаПР = "—";
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПогрузочныеОперации");
	ОбластьМакета.Параметры.ИтогоМассаБ = ИтогоКоличествоБ;
	ТабДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры
#КонецЕсли