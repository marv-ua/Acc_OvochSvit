&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	  ВыводитьТолькоОтличия = истина;
	  
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр = "Файли Microsoft Excel(*.xlsx;*.xls)|*.xlsx;*.xls";
	
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выберите каталог выгрузки';uk='Оберіть каталог вивантаження'");
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.ИндексФильтра = 0;
	
	ОповещениеВыбора = Новый ОписаниеОповещения("ОбработчикОкончанияПомещения", ЭтотОбъект,Новый Структура);
	ДиалогВыбораФайла.Показать(ОповещениеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОкончанияПомещения(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт
	Если ОписаниеПомещенногоФайла <> неопределено тогда                                                           
		ГУИД = Новый УникальныйИдентификатор;
		Если ЭтаФорма.ТекущийЭлемент = Элементы.ОткрытьФайл тогда
			Объект.ПутьКФайлу = ОписаниеПомещенногоФайла[0];  
			АдресФайла = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Объект.ПутьКФайлу),ГУИД);
			ТекФайл = Новый Файл(Объект.ПутьКФайлу);
		Иначе
			Объект.ПутьКоВторомуФайлу = ОписаниеПомещенногоФайла[0]; 
			АдресФайла = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Объект.ПутьКоВторомуФайлу),ГУИД);
			ТекФайл = Новый Файл(Объект.ПутьКоВторомуФайлу);
		КонецЕсли;
		
		ПрочитатьИзВХНаСервере(АдресФайла,ТекФайл.Расширение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПересохранитьЭксельФайл(ПутьКФайлу,ПутьНового=Неопределено,пФорматФайла=51) 
    
    Попытка
        ExcelЗапущен = Ложь; 
        
        //Проверка на существование файла
        мФайл = Новый Файл(ПутьКФайлу);
        Если НЕ мФайл.Существует() Тогда
            ТекстИскл = "[Файл: " + ПутьКФайлу + " не найден.]";
            ВызватьИсключение ТекстИскл;
        КонецЕсли;
        
        СоответствиеРасширений = Новый Соответствие;
        
        СоответствиеРасширений.Вставить(45, ".mht");
        СоответствиеРасширений.Вставить(46, ".xml");
        СоответствиеРасширений.Вставить(23, ".csv");
        СоответствиеРасширений.Вставить(9,  ".dif");
        СоответствиеРасширений.Вставить(8,  ".dbf");
        //работает только в 2007
        СоответствиеРасширений.Вставить(51, ".xlsx");
        СоответствиеРасширений.Вставить(47, ".xml");
        СоответствиеРасширений.Вставить(57, ".pdf");
        СоответствиеРасширений.Вставить(60, ".ods");
        //
        
        СоответствиеВерсий = Новый Соответствие;
        
        СоответствиеВерсий.Вставить(45, "11.0"); 
        СоответствиеВерсий.Вставить(46, "11.0");
        СоответствиеВерсий.Вставить(23, "11.0");
        СоответствиеВерсий.Вставить(9,  "11.0");
        СоответствиеВерсий.Вставить(8,  "11.0");
        //работает только в 2007
        СоответствиеВерсий.Вставить(51, "12.0");
        СоответствиеВерсий.Вставить(47, "12.0");
        СоответствиеВерсий.Вставить(57, "12.0");
        СоответствиеВерсий.Вставить(60, "12.0");
        //
        
        Расширение = СоответствиеРасширений.Получить(пФорматФайла);
        Если Расширение=Неопределено Тогда
            ВызватьИсключение "[Неверно указан параметр ""Формат файла"".]";
        КонецЕсли;
        
        Если ПутьНового=Неопределено Тогда
            ПутьНового=ПолучитьИмяВременногоФайла(Расширение);
        КонецЕсли;
        
        Попытка
            Excel = Новый COMОбъект("Excel.Application");
            ExcelЗапущен = Истина;
        Исключение
            ВызватьИсключение "[Не удалось запустить Excel.]" + Символы.ПС + ОписаниеОшибки();
        КонецПопытки;
        
        //проверка возможности сохранения в выбранный формат
        Если Excel.Version < СоответствиеВерсий.Получить(пФорматФайла) Тогда
            ВызватьИсключение "[В текущей версии Excel выбранный формат файла ("+Расширение+") не поддерживается.]";
        КонецЕсли;
        
        Excel.Visible       = Ложь;
        Excel.DisplayAlerts = Ложь;
        
        КнигаExcel = Excel.WorkBooks.Open(ПутьКФайлу);
        КнигаExcel.SaveAs(ПутьНового, пФорматФайла);
        
        КнигаExcel.Close();
        Excel.DisplayAlerts = Истина;
        Excel.Quit();
        Excel = Неопределено;
        
        Возврат ПутьНового; 
        
    Исключение
        Если ExcelЗапущен Тогда
            Excel.Quit();
        КонецЕсли;
        КнигаExcel = Неопределено;
        Excel      = Неопределено;
        ВызватьИсключение ОписаниеОшибки();
    КонецПопытки;
    
КонецФункции

&НаСервере
Процедура ПрочитатьИзВХНаСервере(АдресВХ,Формат)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Формат);
	
	ДД = ПолучитьИзВременногоХранилища(АдресВХ);
	ДД.Записать(ИмяВременногоФайла);
	НовоеИмя = ИмяВременногоФайла;//ПересохранитьЭксельФайл(ИмяВременногоФайла);
	СпособЧтения = СпособЧтенияЗначенийТабличногоДокумента.Значение;
	
	//Рассмотрим пример, когда загружаем в 1С файл xlsx с листами
	// Лист1, Лист2, Лист3, Лист4, Лист5
	Попытка
		ТабДок = Новый ТабличныйДокумент;
		ТабДок.Прочитать(НовоеИмя, СпособЧтения);
		Элементы.ТекущийЛист.СписокВыбора.Очистить();
		
		Для каждого Область из ТабДок.Области Цикл
			Name = Область.Имя;
			ТекТабДок = ТабДок.ПолучитьОбласть(Name);
			Элементы.ТекущийЛист.СписокВыбора.Добавить(Name,Name);
			
			НовыйЛист = Листы.Добавить();                            
			НовыйЛист.АдресЛиста = ПолучитьДвоичныеДанныеЛиста(ТекТабДок);
			НовыйЛист.Лист = Name;
			
			
		КонецЦикла;
	Исключение 
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры	
	
&НаКлиенте
Процедура ЗаполнитьСписокВыбораЛистов(ПутьКФайлу)//,ExcelПриложение)
	
	
	
	Элементы.ТекущийЛист.СписокВыбора.Очистить();
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Прочитать(ПутьКФайлу,СпособЧтенияЗначенийТабличногоДокумента.Значение);
	
	Для каждого Область из ТабДок.Области Цикл
		Name = Область.Имя;
		ТекТабДок = Новый ТабличныйДокумент;;
		ТекТабДок.Вывести(Область);
		
		Элементы.ТекущийЛист.СписокВыбора.Добавить(Name,Name);
		
		НовыйЛист = Листы.Добавить();                            
		НовыйЛист.АдресЛиста = ПолучитьДвоичныеДанныеЛиста(ТекТабДок);
		НовыйЛист.Лист = Name;
		
		Если ПустаяСтрока(ТекущийЛист) Тогда
			ТекущийЛист = Name;
			Лист.Вывести(ТекТабДок);
		КонецЕсли;
	
	КонецЦикла;
		
КонецПроцедуры
&НаСервере
Функция ПолучитьДвоичныеДанныеЛиста(ТабличныйДокумент)
	ПотокФайла = Новый ПотокВПамяти();
	ТабличныйДокумент.Записать(ПотокФайла);
	
	ЧтениеПотока = Новый ЧтениеДанных(ПотокФайла);
	РезультатЧтения = ЧтениеПотока.Прочитать();
	Возврат ПоместитьВоВременноеХранилище(ПотокФайла.ЗакрытьИПолучитьДвоичныеДанные());

КонецФункции
Функция ТабличныйДокументПоДвоичнымДанным(ДвоичныеДанныеДокумента) Экспорт
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ДвоичныеДанныеДокумента.Записать(ИмяВременногоФайла);
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяВременногоФайла);
	
	УстановленБезопасныйРежим = БезопасныйРежим();
	Если ТипЗнч(УстановленБезопасныйРежим) = Тип("Строка") Тогда
		УстановленБезопасныйРежим = Истина;
	КонецЕсли;
	
	Если Не УстановленБезопасныйРежим Тогда
		УдалитьФайлы(ИмяВременногоФайла);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаСервере
Процедура ТекущийЛистПриИзмененииНаСервере()
	
	Для каждого ТекСтрока из Листы Цикл
		
		Если ТекСтрока.Лист = ТекущийЛист Тогда
			Лист = ТабличныйДокументПоДвоичнымДанным(ПолучитьИзВременногоХранилища(Листы[1].АдресЛиста));
			прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущийЛистПриИзменении(Элемент)
	ТекущийЛистПриИзмененииНаСервере();
КонецПроцедуры



&НаКлиенте
Процедура Прочитать(Команда)
	
	АдресФайла1 = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Объект.ПутьКФайлу),Новый УникальныйИдентификатор);
	ТекФайл1 = Новый Файл(Объект.ПутьКФайлу);
		
	АдресФайла2 = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Объект.ПутьКоВторомуФайлу),Новый УникальныйИдентификатор);
	ТекФайл2 = Новый Файл(Объект.ПутьКоВторомуФайлу);
	

	СравнитьИзВХНаСервере(АдресФайла1, АдресФайла2,ТекФайл2.Расширение);

КонецПроцедуры

&НаСервере
Процедура СравнитьИзВХНаСервере(АдресВХ, АдресВХ2,Расширение)
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	
	ДД = Новый ДвоичныеДанные(Объект.ПутьКФайлу);
	ДД.Записать(ИмяВременногоФайла);
	НовоеИмя = ИмяВременногоФайла;//ПересохранитьЭксельФайл(ИмяВременногоФайла);
	СпособЧтения = СпособЧтенияЗначенийТабличногоДокумента.Значение;
	
	ИмяВременногоФайла2 = ПолучитьИмяВременногоФайла(Расширение);
	ДД = Новый ДвоичныеДанные(Объект.ПутьКоВторомуФайлу);
	ДД.Записать(ИмяВременногоФайла2);
	НовоеИмя2 = ИмяВременногоФайла2;//ПересохранитьЭксельФайл(ИмяВременногоФайла);

	
	Попытка
		ТабДок = Новый ТабличныйДокумент;
		ТабДок.Прочитать(НовоеИмя, СпособЧтения);

		ТабДок2 = Новый ТабличныйДокумент;
		ТабДок2.Прочитать(НовоеИмя2, СпособЧтения);
		
		зВысота = ТабДок.ВысотаТаблицы;
		зШирина = ТабДок.ШиринаТаблицы;
		
		ТекВысота = 1;
		МассивОбластиОтличий = Новый Массив;
		
		Пока ТекВысота <= зВысота Цикл
			ТекШирина = 1;
			Пока ТекШирина <= зШирина Цикл                               
				ИмяОбласти = "R"+ТекВысота+"C"+ТекШирина;
				
				ТекЗнач1 = ТабДок.Область(ИмяОбласти);
				ТекЗнач2 = ТабДок2.Область(ИмяОбласти);
				
				Если ТекЗнач1.Текст <> ТекЗнач2.Текст ТОгда
					МассивОбластиОтличий.Добавить(Новый Структура("ИмяОбласти, Строка,Колонка,СтароеЗначение",ИмяОбласти,ТекВысота,ТекШирина,ТекЗнач1.Текст)); 
				КонецЕсли;
				
				ТекШирина = ТекШирина +1;
				
			КонецЦикла;
			ТекВысота = ТекВысота +1;
			
		КонецЦикла;
		Лист.Очистить();
		Если ВыводитьТолькоОтличия тогда
			Ид = 1;
			ДЛя Каждого ТекСтрукт из МассивОбластиОтличий Цикл
				
				ТекОбласть = ТабДок2.ПолучитьОбласть("R"+ТекСтрукт.Строка+"C1:"+"R"+ТекСтрукт.Строка+"C"+зШирина);
				Лист.Вывести(ТекОбласть);
				Лист.Область("R"+Ид+"C"+ТекСтрукт.Колонка).ЦветФона = ЦветаСтиля.РезультатПроблемаЦвет;
				Лист.Область("R"+Ид+"C"+ТекСтрукт.Колонка).Расшифровка ="("+ ТекСтрукт.ИмяОбласти+") Попереднє значення: " +ТекСтрукт.СтароеЗначение;
				Если ВыводитьЧерезСлеш Тогда
					Лист.Область("R"+Ид+"C"+ТекСтрукт.Колонка).Защита = Истина;
					Лист.Область("R"+Ид+"C"+ТекСтрукт.Колонка).СодержитЗначение = Ложь;
					Лист.Область("R"+Ид+"C"+ТекСтрукт.Колонка).Текст = Лист.Область("R"+Ид+"C"+ТекСтрукт.Колонка).Текст + " / "+ТекСтрукт.СтароеЗначение	
				КонецЕсли;
				Ид = Ид +1;
			КонецЦикла;
		Иначе
			 Лист.Прочитать(НовоеИмя2, СпособЧтения);
			 ДЛя Каждого ТекСтрукт из МассивОбластиОтличий Цикл
				 
				 Лист.Область("R"+ТекСтрукт.Строка+"C1").ЦветФона = ЦветаСтиля.РезультатПроблемаЦвет;
				 Лист.Область(ТекСтрукт.ИмяОбласти).Защита = Истина; 
				 Лист.Область(ТекСтрукт.ИмяОбласти).ЦветФона = ЦветаСтиля.РезультатПроблемаЦвет;
				 Лист.Область(ТекСтрукт.ИмяОбласти).Расшифровка = "Попереднє значення: " +ТекСтрукт.СтароеЗначение;
				 Если ВыводитьЧерезСлеш Тогда
					 Лист.Область(ТекСтрукт.ИмяОбласти).СодержитЗначение = Ложь;//Лист.Область(ТекСтрукт.ИмяОбласти).Текст + " / "+ТекСтрукт.СтароеЗначение;
					 Лист.Область(ТекСтрукт.ИмяОбласти).Текст = Лист.Область(ТекСтрукт.ИмяОбласти).Текст + " / "+ТекСтрукт.СтароеЗначение;	
				 КонецЕсли;
			 КонецЦикла;
		 КонецЕсли;

	Исключение 
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры



               