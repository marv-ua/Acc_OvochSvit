Процедура ЗаполнитьПоследовательностьНаСервере() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПартииЗапасовГраницы.Период КАК Период,
	|	ПартииЗапасовГраницы.Регистратор КАК Регистратор,
	|	ПартииЗапасовГраницы.МоментВремени КАК МоментВремени
	|ПОМЕСТИТЬ Границы
	|ИЗ
	|	Последовательность.ПартииЗапасов.Границы КАК ПартииЗапасовГраницы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииЗапасов.Период КАК Период,
	|	ПартииЗапасов.Регистратор.Дата КАК ДатаДокумента,
	|	ПартииЗапасов.Регистратор КАК Документ,
	|	ИСТИНА КАК Проводить,
	|	ПартииЗапасов.МоментВремени КАК МоментВремени
	|ИЗ
	|	Границы КАК Границы,
	|	Последовательность.ПартииЗапасов КАК ПартииЗапасов
	|ГДЕ
	|	ПартииЗапасов.МоментВремени > Границы.МоментВремени
	|	И ПартииЗапасов.Регистратор.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	МоментВремени";
	
	СписокДокументовДляПроведения.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

Процедура СкорректироватьПриходныеНакладные() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Период КАК ДатаДокумента,
	|	ВложенныйЗапрос.Регистратор КАК Документ,
	|	ИСТИНА КАК Проводить
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗапасыКРасходуСоСкладов.Регистратор КАК Регистратор,
	|		ЗапасыКРасходуСоСкладов.Период КАК Период
	|	ИЗ
	|		РегистрНакопления.ЗапасыКРасходуСоСкладов КАК ЗапасыКРасходуСоСкладов
	|	ГДЕ
	|		НЕ ЗапасыКРасходуСоСкладов.Регистратор ССЫЛКА Документ.РасходныйОрдер
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗапасыКПоступлениюНаСклады.Регистратор,
	|		ЗапасыКПоступлениюНаСклады.Период
	|	ИЗ
	|		РегистрНакопления.ЗапасыКПоступлениюНаСклады КАК ЗапасыКПоступлениюНаСклады
	|	ГДЕ
	|		НЕ ЗапасыКПоступлениюНаСклады.Регистратор ССЫЛКА Документ.ПриходныйОрдер
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПриходнаяНакладнаяЗапасы.Ссылка,
	|		ПриходнаяНакладнаяЗапасы.Ссылка.Дата
	|	ИЗ
	|		Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	|	ГДЕ
	|		ПриходнаяНакладнаяЗапасы.Партия = ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	|		И ПриходнаяНакладнаяЗапасы.Ссылка.Проведен) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ";
	
	СписокДокументовДляПроведения.Загрузить(Запрос.Выполнить().Выгрузить());
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.ОрдерныйСклад";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекОб = Выборка.Ссылка.ПолучитьОбъект();
		ТекОб.ОрдерныйСклад = Ложь;
		ТекОб.Записать();
	КонецЦикла;
	
	Константы.ФункциональнаяОпцияИспользоватьОрдерныйСклад.Установить(Ложь);
КонецПроцедуры

Функция УдалитьЛишниеПартии() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПартииНоменклатуры.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПартииНоменклатуры КАК ПартииНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	|		ПО ПартииНоменклатуры.Ссылка = ПриходнаяНакладнаяЗапасы.Партия
	|ГДЕ
	|	ПриходнаяНакладнаяЗапасы.Ссылка ЕСТЬ NULL
	|	И НЕ ПартииНоменклатуры.ПометкаУдаления";

	Ном = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекОб = Выборка.Ссылка.ПолучитьОбъект();
		ТекОб.УстановитьПометкуУдаления(Истина);
		Ном = Ном + 1;
	КонецЦикла;
	
	Возврат Ном;
КонецФункции