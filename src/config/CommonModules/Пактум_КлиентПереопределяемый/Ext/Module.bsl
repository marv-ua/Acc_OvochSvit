Процедура ПактумСоздатьПоСпискуЕДРПОУ(Форма) Экспорт
	ОписаниеОповещения = Новый ОписаниеОповещения("ПактумСоздатьПоСпискуЕДРПОУ_Завершение", Форма.ЭтотОбъект);
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаПактумСписокЕДРПОУ", , , , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
КонецПроцедуры

Процедура СоздатьПоСпискуЕДРПОУ_Завершение(Форма, Результат) Экспорт
	Если Результат=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Не Результат.фОК Тогда
		Возврат;
	КонецЕсли;
	пСтр=СокрЛП(Результат.СписокЕДРПОУ);
	Если пСтр="" Тогда
		Возврат;
	КонецЕсли;
	Т=Новый ТекстовыйДокумент;
	Т.УстановитьТекст(пСтр);
	КолСтрок = Т.КоличествоСтрок();
	Если КолСтрок = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru='Коды ЕГРПОУ не обнаружены!';uk='Коди ЄДРПОУ не знайдені!'"));
		Возврат;
	КонецЕсли;
	
	Форма.Пактум_СписокКодов.Очистить();
	Форма.Пактум_ГруппаКонтрагентов = Результат.ГруппаКонтрагентов;
	
	Для А=1 По КолСтрок Цикл
		ТекКод = СокрЛП(Т.ПолучитьСтроку(А));
		Если ТекКод = "" Тогда
			Продолжить;
		КонецЕсли;
		
		спЕДРПОУ = Пактум_Сервер.ПолучитьСписокЕДРПОУПоСтроке(ТекКод);
		Для Каждого Эл Из спЕДРПОУ Цикл
			Если Форма.Пактум_СписокКодов.НайтиПоЗначению(Эл.Значение) = Неопределено Тогда
				Форма.Пактум_СписокКодов.Добавить(Эл.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Форма.Пактум_ОткрыватьКарточки = Результат.ОткрыватьКарточки;
	Форма.Пактум_ОбновлятьСуществующие = Результат.ОбновлятьСуществующие;
	
	спПактум_СписокКодовНовый = Новый СписокЗначений;
	Для Каждого Стр Из Форма.Пактум_СписокКодов Цикл
		пЕДРПОУ = СокрЛП(Стр.Значение);
		спКонтрагенты = Пактум_Сервер.ПолучитьКонтрагента(пЕДРПОУ).спКонтрагенты;
		Если спКонтрагенты.Количество() = 0 Тогда
			спПактум_СписокКодовНовый.Добавить(пЕДРПОУ);
		Иначе
			Для Каждого Эл Из спКонтрагенты Цикл
				Если Форма.Пактум_ОбновлятьСуществующие Тогда
					спПактум_СписокКодовНовый.Добавить(Эл.Значение);
				Иначе
					Пактум_СерверПереопределяемый.УстановитьРодителяКонтрагента(Эл.Значение, Форма.Пактум_ГруппаКонтрагентов);
					Если Форма.Пактум_ОткрыватьКарточки Тогда
						ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", Новый Структура("Ключ", Эл.Значение));
					Иначе
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='Код ЕДРПОУ:%1 - контрагент %2 существует. Пропущено.';uk= 'Код ЄДРПОУ:%1 - контрагент %2 існує. Пропущено.'")
							, пЕДРПОУ, Строка(Эл.Значение));
						Сообщить(ТекстСообщения);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Если спПактум_СписокКодовНовый.Количество() = 0 Тогда
		Сообщить(НСтр("ru='Нет кодов ЕДРПОУ для обработки.';uk= 'Нема кодів ЄДРПОУ для обробки.'"));
		Возврат;
	КонецЕсли;
	
	ПоказатьПредупреждение(, НСтр("ru='Карточки контрагентов будут созданы, на это потребуется некоторое время. При успешном (неуспешном) создании карточек Вы получите соответствующее сообщение.';uk= 'Картки контрагентів будуть створені; це триватиме певний час. При успішному (неуспішному) створенні карток Ви отримаєте відповідне повідомлення.'")
						, 5, НСтр("ru='Внимание!';uk='Увага!'"));
	
	Форма.Пактум_СписокКодов.Очистить();
	Форма.Пактум_КарточкиКОткрытию.Очистить();
	
	Форма.Пактум_СписокКодов.ЗагрузитьЗначения(спПактум_СписокКодовНовый.ВыгрузитьЗначения());
	НайтиИСоздатьПоСписку(Форма);	
КонецПроцедуры

Процедура НайтиИСоздатьПоСписку(Форма) Экспорт
	Пактум_ТекущийКонтрагент = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	
	Для Каждого Стр Из Форма.Пактум_СписокКодов Цикл
		Если ТипЗнч(Стр.Значение) = Тип("Строка") Тогда
			пЕДРПОУ = Стр.Значение;
			СтруПараметры = Пактум_Сервер.ПроверкаКорректностиЕДРПОУ_Пактум(пЕДРПОУ);
			Если Не СтруПараметры.КорректностьЕДРПОУ_Значение Тогда
				Сообщить(СтруПараметры.КорректностьЕДРПОУ_ТекстОшибки);
				Продолжить;
			КонецЕсли;
		Иначе
			Если Не Форма.Пактум_ОбновлятьСуществующие Тогда
				Продолжить;
			КонецЕсли; 
		КонецЕсли;
		
		СтруПараметры = Пактум_Сервер.Авторизация_Пактум();
		Форма.Пактум_Токен=?(СтруПараметры.Токен=Неопределено, "", СтруПараметры.Токен);
		Форма.Пактум_ТекущийИндекс = Форма.Пактум_СписокКодов.Индекс(Стр);
		ВыполнитьЗаполнениеКарточки(Форма, Стр.Значение);
		Прервать;
	КонецЦикла;	
КонецПроцедуры

Процедура ВыполнитьЗаполнениеКарточки(Форма, Значение) Экспорт
	Если ТипЗнч(Значение) = Тип("Строка") Тогда
		Форма.Пактум_ТекущийКонтрагент = Пактум_СерверПереопределяемый.СоздатьКонтрагента(Значение, Форма.Пактум_ГруппаКонтрагентов);
	Иначе
		Форма.Пактум_ТекущийКонтрагент = Значение;
		Форма.Пактум_ТекущийКонтрагент = Пактум_СерверПереопределяемый.УстановитьРодителяКонтрагента(Форма.Пактум_ТекущийКонтрагент, Форма.Пактум_ГруппаКонтрагентов);		
	КонецЕсли;
	
	Пактум_Клиент.Старт(Форма);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("Аутентификация_Завершение", Форма.ЭтотОбъект);
	Пактум_Клиент.НачатьАутентификацию1С(ОповещениеОЗавершении);	
КонецПроцедуры

Процедура Аутентификация_Завершение(Форма, Тикет) Экспорт
	Если Тикет <> Неопределено Тогда
		Если Форма.Пактум_Токен="" Тогда
			Форма.Пактум_Токен=Пактум_Сервер.Авторизация_Пактум().Токен;
		КонецЕсли;
		Если Форма.Пактум_Токен="" Тогда 
			Сообщить(НСтр("ru='Авторизация Пактум.Контрагент не пройдена. Для настройки доступа обратитесь к администратору.';uk= 'Авторизація Пактум.Контрагент не пройдена. Для настройки доступу зверніться до адміністратора.'"));
			Возврат;
		КонецЕсли;		
		
		ДанныеТекущегоКонтрагента = Пактум_СерверПереопределяемый.ПолучитьДанныеТекущегоКонтрагента(Форма.Пактум_ТекущийКонтрагент);
		
		Стру = Новый Структура;
		Стру.Вставить("ЕДРПОУ", ДанныеТекущегоКонтрагента.ЕДРПОУ);
		Стру.Вставить("Код", ДанныеТекущегоКонтрагента.Код);
		Стру.Вставить("КонтрагентСсылка", Форма.Пактум_ТекущийКонтрагент);
		Стру.Вставить("Конфигурация", "БП2");
		Стру.Вставить("Токен", Форма.Пактум_Токен);
		Стру.Вставить("КолЦиклов", 0);
		Стру.Вставить("УИД", Форма.Пактум_УИД_ФоновогоЗадания);
		Пактум_Сервер.ЗапускФоновогоЗадания(Стру);
		
		Форма.Пактум_КоличествоПроверок_ФоновогоЗадания=0;
		Форма.ПодключитьОбработчикОжидания("ПроверкаЗавершенияФоновогоЗадания", 10);
		Пактум_Клиент.ЗаблокироватьФорму(Форма, "БП2");
	Иначе
		ТекстСообщения = НСтр("ru='Аутентификация не выполнена.
			|Проверьте подключение к Интернету.'
			|;uk= 'Аутентифікація не виконана.
			|Перевірте підключення до Інтернету.'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Пактум_Клиент.РазблокироватьФорму(Форма, "БП2");
	КонецЕсли;	
КонецПроцедуры

Процедура ПроверкаЗавершенияФоновогоЗадания(Форма) Экспорт
	ДанныеТекущегоКонтрагента = Пактум_СерверПереопределяемый.ПолучитьДанныеТекущегоКонтрагента(Форма.Пактум_ТекущийКонтрагент);
	Завершить = Пактум_Клиент.ПроверкаЗавершенияФоновогоЗадания(
			ДанныеТекущегоКонтрагента.ЕДРПОУ, 
			ДанныеТекущегоКонтрагента.Код, 
			Форма.Пактум_УИД_ФоновогоЗадания, 
			Форма.Пактум_КоличествоПроверок_ФоновогоЗадания, 
			Форма);
			
	Если Завершить Тогда
		Форма.ОтключитьОбработчикОжидания("ПроверкаЗавершенияФоновогоЗадания");
		
		ЭлементСписка = Форма.Пактум_СписокКодов[Форма.Пактум_ТекущийИндекс];
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Контрагент %1  успешно загружен.'
						|;uk='Контрагента %1 завантажено.'")
					, СокрЛП(Строка(ДанныеТекущегоКонтрагента.КонтрагентСсылка)) + ", код " + СокрЛП(ДанныеТекущегоКонтрагента.Код)));
					
		Если Форма.Пактум_ОткрыватьКарточки Тогда
			ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", Новый Структура("Ключ", Форма.Пактум_ТекущийКонтрагент));
		КонецЕсли;
		
		Если Форма.Пактум_СписокКодов.Индекс(ЭлементСписка) + 1 < Форма.Пактум_СписокКодов.Количество() Тогда
			Для А = Форма.Пактум_СписокКодов.Индекс(ЭлементСписка) + 1 По Форма.Пактум_СписокКодов.Количество() - 1 Цикл
				Стр = Форма.Пактум_СписокКодов[А];
				Если ТипЗнч(Стр.Значение) = Тип("Строка") Тогда
					пЕДРПОУ = Стр.Значение;
					СтруПараметры=Пактум_Сервер.ПроверкаКорректностиЕДРПОУ_Пактум(пЕДРПОУ);
					Если Не СтруПараметры.КорректностьЕДРПОУ_Значение Тогда
						Сообщить(СтруПараметры.КорректностьЕДРПОУ_ТекстОшибки);
						Продолжить;
					КонецЕсли;
				Иначе
					СтруПараметры = Пактум_Сервер.Авторизация_Пактум();
				КонецЕсли;
				Форма.Пактум_Токен=?(СтруПараметры.Токен=Неопределено, "", СтруПараметры.Токен);
				Форма.Пактум_ТекущийИндекс = А;
				ВыполнитьЗаполнениеКарточки(Форма, Стр.Значение);
				Прервать;
			КонецЦикла;
		Иначе
			Форма.Элементы.Список.Обновить();
			Пактум_Клиент.РазблокироватьФорму(Форма, "БП2");
			Сообщить("Завершено!");
		КонецЕсли;
	Иначе
		Форма.Пактум_КоличествоПроверок_ФоновогоЗадания = Форма.Пактум_КоличествоПроверок_ФоновогоЗадания + 1;
	КонецЕсли;	
КонецПроцедуры

Процедура СформироватьРасширенныеДанные(КонтрагентСсылка) Экспорт
	Отчет = Пактум_СерверПереопределяемый.ПолучитьРасширенныеДанныеТабличныйДокумент(КонтрагентСсылка);
	Отчет.ОтображатьГруппировки = Истина;
	Отчет.ОтображатьСетку = Ложь;
	Отчет.ОтображатьЗаголовки = Ложь;
	Отчет.Показать(НСтр("ru='Расширенные данные';uk= 'Розширені дані'") + ": " + СокрЛП(Строка(КонтрагентСсылка)));
КонецПроцедуры

Процедура ОткрытьРасширенныеДанные(КонтрагентСсылка, ИД, Обработчик) Экспорт
		
КонецПроцедуры