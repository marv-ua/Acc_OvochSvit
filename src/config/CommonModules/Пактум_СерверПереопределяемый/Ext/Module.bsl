Функция СоздатьКонтрагента(ЕДРПОУ, ГруппаКонтрагентов) Экспорт
	НовыйКонтрагент = Справочники.Контрагенты.СоздатьЭлемент();
	Если ЗначениеЗаполнено(ГруппаКонтрагентов) Тогда
		НовыйКонтрагент.Родитель = ГруппаКонтрагентов;	
	КонецЕсли;
	НовыйКонтрагент.Наименование = ЕДРПОУ;
	НовыйКонтрагент.КодПоЕДРПОУ = ЕДРПОУ;
	НовыйКонтрагент.Записать();
	
	Возврат НовыйКонтрагент.Ссылка;
КонецФункции

Функция УстановитьРодителяКонтрагента(КонтрагентСсылка, ГруппаКонтрагентов) Экспорт
	Если Не ЗначениеЗаполнено(ГруппаКонтрагентов) Тогда
		Возврат КонтрагентСсылка;	
	КонецЕсли;
	Если КонтрагентСсылка.Родитель = ГруппаКонтрагентов Тогда
		Возврат КонтрагентСсылка;	
	КонецЕсли;
	
	ОбКонтрагент = КонтрагентСсылка.ПолучитьОбъект();
	ОбКонтрагент.Родитель = ГруппаКонтрагентов;
	ОбКонтрагент.Записать();
	
	Возврат ОбКонтрагент.Ссылка;
КонецФункции

Функция ПолучитьДанныеТекущегоКонтрагента(ТекущийКонтрагент) Экспорт
	Стру=Новый Структура;
	Стру.Вставить("ЕДРПОУ", СокрЛП(ТекущийКонтрагент.КодПоЕДРПОУ));
	Стру.Вставить("Код", ТекущийКонтрагент.Код);
	Стру.Вставить("Наименование", ТекущийКонтрагент.Наименование);
	Стру.Вставить("КонтрагентСсылка", ТекущийКонтрагент);
	
	Возврат Стру;
КонецФункции

Процедура ДобавитьРеквизитыПактум(Форма) Экспорт
	МассивРеквизитов = Новый Массив;
	УстановитьПривилегированныйРежим(Истина);
	Настройки=ХранилищеОбщихНастроек.Загрузить("Обработка.Пактум_Контрагент", "Выбранные_Реквизиты", , "Пактум");
	УстановитьПривилегированныйРежим(Ложь);
	Если ТипЗнч(Настройки)=Тип("Массив") Тогда
		МассивРеквизитов = Настройки;
	КонецЕсли;
	Если МассивРеквизитов.Количество() = 0 Тогда
		Форма.Элементы.Пактум_Отчет.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	ТабДанные = Пактум_Сервер.ПолучитьДополнительныеСведенияКонтрагента(Форма.Объект.Ссылка);
	Если ТабДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Для А = 0 По МассивРеквизитов.Количество() - 1 Цикл
		ТекИД = МассивРеквизитов[А];
		Набор = ТабДанные.НайтиСтроки(Новый Структура("ИД", ТекИД));
		Если Набор.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТекСтрока = Набор[0];
		
		ИмяГруппы = "ГруппаПактум_" + А;
		ТекГруппа = Форма.Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"),Форма.Элементы.ГруппаРеквизитыПактумЭлементы);
		ТекГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ТекГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		ТекГруппа.ОтображатьЗаголовок = Ложь;
		
		ИмяРеквизита = "Пактум_" + ТекСтрока.ИД;
		Элемент = Форма.Элементы.Добавить(ИмяРеквизита + "_Заголовок", Тип("ДекорацияФормы"), Форма.Элементы[ИмяГруппы]);
		Элемент.Вид = ВидДекорацииФормы.Надпись;                                  
		Элемент.Заголовок = ТекСтрока.Представление + ": ";
		Элемент.Ширина = 14;
	
		Элемент = Форма.Элементы.Добавить(ИмяРеквизита, Тип("ДекорацияФормы"), Форма.Элементы[ИмяГруппы]);
		Элемент.Вид = ВидДекорацииФормы.Надпись;
		Элемент.Заголовок = ТекСтрока.Значение;
		Элемент.Ширина = 76;
		Элемент.Гиперссылка = Истина;
		Элемент.УстановитьДействие("Нажатие", "Пактум_Отчет");	//"ОткрытьРасширенныеДанные");
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьРасширенныеДанныеТабличныйДокументСтар(КонтрагентСсылка) Экспорт
	Таб = Новый ТабличныйДокумент;
	Макет = РегистрыСведений.Пактум_ДополнительныеСведенияОКонтрагентах.ПолучитьМакет("Макет");
	тзДопСведения = Пактум_Сервер.ПолучитьДополнительныеСведенияКонтрагента(КонтрагентСсылка);
	Если тзДопСведения.Количество() = 0 Тогда
		Обл = Макет.ПолучитьОбласть("НетДанных");
		Таб.Вывести(Обл);
	Иначе
		Обл = Макет.ПолучитьОбласть("Шапка");
		Набор = тзДопСведения.НайтиСтроки(Новый Структура("ИД", "FullName"));
		Обл.Параметры.ПолноеНаименование = Набор[0].Значение;
		Обл.Параметры.Период = Формат(Набор[0].Период, "ДФ=дд.ММ.гггг");
		Таб.Вывести(Обл);
		Для Каждого Стр Из тзДопСведения Цикл
			Если Стр.ИД = "FullName" Тогда
				Продолжить;
			КонецЕсли;
			Если Не Стр.ОтображатьВОтчете Тогда
				Продолжить;
			КонецЕсли;
			Если Стр.ЕстьОтступ Тогда
				Обл = Макет.ПолучитьОбласть("Отступ");
				Таб.Вывести(Обл);
			КонецЕсли;
			Обл = Макет.ПолучитьОбласть("Строка");
			Обл.Параметры.Представление = Стр.Представление;
			Обл.Параметры.Значение = Стр.Значение;
			Таб.Вывести(Обл);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Таб;
КонецФункции

Функция ПолучитьРасширенныеДанныеТабличныйДокумент(КонтрагентСсылка) Экспорт
	Таб = Новый ТабличныйДокумент;
	Макет = РегистрыСведений.Пактум_ДополнительныеСведенияОКонтрагентах.ПолучитьМакет("Макет2");
	тзДопСведения = Пактум_Сервер.ПолучитьДополнительныеСведенияКонтрагента(КонтрагентСсылка);
	Если Не ЗначениеЗаполнено(тзДопСведения) Тогда
		Обл = Макет.ПолучитьОбласть("НетДанных");
		Таб.Вывести(Обл);
	ИначеЕсли тзДопСведения.Количество() = 0 Тогда
		Обл = Макет.ПолучитьОбласть("НетДанных");
		Таб.Вывести(Обл);
	Иначе
		Для Каждого Стр Из тзДопСведения Цикл
			Если ПустаяСтрока(Стр.Представление) И ПустаяСтрока(Стр.Значение) Тогда
				Продолжить;
			КонецЕсли;
			Если Стр.ЕстьОтступ Тогда
				Обл = Макет.ПолучитьОбласть("Отступ");
				Таб.Вывести(Обл);
			КонецЕсли;
			Если Стр.Заголовок = 0 Тогда
				Обл = Макет.ПолучитьОбласть("Строка");
				Обл.Параметры.Представление = Стр.Представление;
			ИначеЕсли Стр.Заголовок = 1 Тогда
				Если ПустаяСтрока(Стр.Представление) Тогда
					Обл = Макет.ПолучитьОбласть("Заголовок11");
				Иначе
					Обл = Макет.ПолучитьОбласть("Заголовок1");
					Обл.Параметры.Представление = Стр.Представление;
				КонецЕсли;
			ИначеЕсли Стр.Заголовок = 2 Тогда
				Обл = Макет.ПолучитьОбласть("Заголовок2");
				Обл.Параметры.Представление = Стр.Представление;
			КонецЕсли;
			Обл.Параметры.Значение = Стр.Значение;
			Таб.Вывести(Обл);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Таб;
КонецФункции