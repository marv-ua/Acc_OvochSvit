
Функция ВыполнитьКомандуПечати(ОписаниеКоманды) Экспорт
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ОписаниеКоманды.МенеджерПечати, ОписаниеКоманды.Идентификатор, ОписаниеКоманды.ОбъектыПечати,
		ОписаниеКоманды.Форма, ПолучитьЗаголовокПечатнойФормы(ОписаниеКоманды.ОбъектыПечати));
	
КонецФункции

Функция ВыполнитьКомандуПечатиЗК(ОписаниеКоманды) Экспорт
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ОписаниеКоманды.МенеджерПечати, ОписаниеКоманды.Идентификатор, ОписаниеКоманды.ОбъектыПечати,
		ОписаниеКоманды.Форма, ОписаниеКоманды.ДополнительныеПараметры);
	
КонецФункции

Функция ОткрытьПечатнуюФормуПредварительногоПросмотраЭДО(ОписаниеКоманды) Экспорт
	
	Результат = Истина;
	
	МассивОбъектов = ОписаниеКоманды.ОбъектыПечати;
	
	Если МассивОбъектов.Количество() = 0  Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если Не РегламентированнаяОтчетностьКлиент.ПодключитьМенеджерЗвит1С() Тогда
		Возврат Результат;
	КонецЕсли;
	
	ИмяОтчета 		= "РегламентированныйОтчетПервичныеДокументыЗвит1С";
	ЭтоВнешнийОтчет = РегламентированнаяОтчетность.ЭтоВнешнийОтчет(ИмяОтчета);
	
	Для каждого Ссылка Из МассивОбъектов Цикл	
		
		ИмяФормыПросмотра = глМенеджерЗвит1С.ОпределитьИмяФормыВыгрузки(Ссылка);
		
		// откроем отчет и загрузим в него данные XML
		Попытка
			ФормаПросмотра = ПолучитьФорму(?(ЭтоВнешнийОтчет, "Внешний", "") + "Отчет." + ИмяОтчета + ".Форма." + ИмяФормыПросмотра);
		Исключение
			ТекстОшибки = НСтр("ru='Не удалось открыть для просмотра требуемую форму отчета ';uk='Не вдалося відкрити для перегляду необхідну форму звіту '")+ИмяОтчета;
			ПоказатьПредупреждение(,ТекстОшибки);
			Возврат Результат;	
		КонецПопытки;
		
		ТабДокумент = ФормаПросмотра.ЗаполнитьИРаспечатать(Ссылка);
		ТабДокумент.Защита 			= Истина;
		ТабДокумент.ТолькоПросмотр 	= Ложь;
		ТабДокумент.ОтображатьСетку 	 = Ложь;
		ТабДокумент.ОтображатьЗаголовки  = Ложь;
		ТабДокумент.Показать("" + Ссылка + НСтр("ru=' (для выгрузки в FREDO ДокМен)';uk= ' (для вивантаження до FREDO ДокМен)'"));
		
	КонецЦикла;
	
КонецФункции

// Выполняет команду печати реестра документов.
// 
// Параметры:
//	ОписаниеКоманды - структура, содержащая ключ, соответствующие таблице значений
//						создаваемой функций БСП УправлениеПечатью.СоздатьКоллекциюКомандПечати(),
//						и ключ Форма - управляемая форма, из которой вызвана команда печати.
//
Функция ВыполнитьКомандуПечатиРеестраДокументов(ОписаниеКоманды) Экспорт
	
	ФормаСписка = ОписаниеКоманды.Форма;

	ПараметрыФормы = Новый Структура();

	ПараметрыФормы.Вставить("Заголовок", ОписаниеКоманды.ЗаголовокФормы);
	Если ОписаниеКоманды.ДополнительныеПараметры.Свойство("АдресХранилищаНастройкиДинСпискаДляРеестра") Тогда
		ПараметрыФормы = ПолучитьИзВременногоХранилища(ОписаниеКоманды.ДополнительныеПараметры.АдресХранилищаНастройкиДинСпискаДляРеестра);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

	ОткрытьФорму("Отчет.РеестрДокументов.Форма.ФормаОтчета", ПараметрыФормы, ФормаСписка, Новый УникальныйИдентификатор);

КонецФункции

// Выполняет команду печати справки-расчета.
// 
// Параметры:
//	ОписаниеКоманды - структура, содержащая ключ, соответствующие таблице значений
//						создаваемой функций БСП УправлениеПечатью.СоздатьКоллекциюКомандПечати(),
//						и ключ Форма - управляемая форма, из которой вызвана команда печати.
//
Функция ВыполнитьКомандуПечатиСправкиРасчета(ОписаниеКоманды) Экспорт
	
	ПараметрКоманды    = ОписаниеКоманды.ОбъектыПечати;
	ВладелецФормы      = ОписаниеКоманды.Форма;
	ИмяОтчета          = ОписаниеКоманды.Идентификатор;
	
	// Проверим количество объектов, допустима печать только одного документа
	Если ТипЗнч(ПараметрКоманды) <> Тип("Массив") ИЛИ ПараметрКоманды.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Документ = ПараметрКоманды[0];
	
	// Получим ключ уникальности открываемой формы
	КлючУникальности = Строка(Новый УникальныйИдентификатор);
	
	ПараметрыОтчета = Новый Структура();
	
	ПараметрыОтчета.Вставить("Организация", ОбщегоНазначенияБПВызовСервера.ЗначениеРеквизитаОбъекта(Документ, "Организация"));
	ПараметрыОтчета.Вставить("НачалоПериода", НачалоМесяца(ОбщегоНазначенияБПВызовСервера.ЗначениеРеквизитаОбъекта(Документ, "Дата")));
	ПараметрыОтчета.Вставить("КонецПериода", КонецМесяца(ОбщегоНазначенияБПВызовСервера.ЗначениеРеквизитаОбъекта(Документ, "Дата")));
	
	Форма = ПолучитьФорму("Отчет." + ИмяОтчета + ".Форма.ФормаОтчета", , ВладелецФормы, КлючУникальности);
	Форма.ОткрытьИСформировать(ПараметрыОтчета);

КонецФункции

Функция ВыполнитьКомандуПечатиКарточкиОС(ОписаниеКоманды) Экспорт
	
	ПараметрыПечати = ПолучитьЗаголовокПечатнойФормы(ОписаниеКоманды.ОбъектыПечати);
	Если ТипЗнч(ОписаниеКоманды.Форма) = Тип("УправляемаяФорма")
		И (ОписаниеКоманды.Форма.ИмяФормы = "Справочник.ОсновныеСредства.Форма.ФормаЭлемента") Тогда
		
		Если ЗначениеЗаполнено(ОписаниеКоманды.Форма.ДатаСведений) Тогда
			ПараметрыПечати.Вставить("ДатаСведений", КонецДня(ОписаниеКоманды.Форма.ДатаСведений));
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ОписаниеКоманды.МенеджерПечати, ОписаниеКоманды.Идентификатор, ОписаниеКоманды.ОбъектыПечати,
		ОписаниеКоманды.Форма, ПараметрыПечати);
	
КонецФункции

Функция ОткрытьФормуПечатиТТН(ОписаниеКоманды) Экспорт
	//ПРЕЖНИЙ КОД ерпсНикодаЕвгений 2021-10-13
	//ПараметрКоманды    = ОписаниеКоманды.ОбъектыПечати;
	//ВладелецФормы      = ОписаниеКоманды.Форма;
	//
	//// Проверим количество объектов, допустима печать только одного документа
	//Если ТипЗнч(ПараметрКоманды) <> Тип("Массив") ИЛИ ПараметрКоманды.Количество() = 0 Тогда
	//	Возврат Ложь;
	//КонецЕсли;
	//
	//// Получим ключ уникальности открываемой формы
	//КлючУникальности = Строка(Новый УникальныйИдентификатор);
	//
	//ПараметрыОткрытия = Новый Структура("Документ", ПараметрКоманды[0]);
	//ПараметрыОткрытия.Вставить("Идентификатор", ОписаниеКоманды.Идентификатор);
	//
	//// Откроем форму печати документов
	//ОткрытьФорму("Обработка.ПечатьТТН.Форма", ПараметрыОткрытия, ВладелецФормы, КлючУникальности);
	//
	
	//ерпс НикодаЕвгений 2021-10-13 #6738

	ПараметрКоманды    = ОписаниеКоманды.ОбъектыПечати;
	ВладелецФормы      = ОписаниеКоманды.Форма;
	
	// Проверим количество объектов, допустима печать только одного документа
	Если ТипЗнч(ПараметрКоманды) <> Тип("Массив") ИЛИ ПараметрКоманды.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Получим ключ уникальности открываемой формы
	КлючУникальности = Строка(Новый УникальныйИдентификатор);
	
	//Новый Код Печать одновременно нескольких ТТН из разных документов РОнТ
	Если ПараметрКоманды.Количество() > 1 Тогда//Проверяем выбор нескольких документов РТУ 
		Счетчик = 0;
		ПараметрыПечатиМассив = Новый Массив;
		ПараметрыПечати = Новый Структура;
		Для каждого Элемент из ПараметрКоманды цикл
			ПараметрыОткрытия = Новый Структура("Документ", ПараметрКоманды[Счетчик]);
			ПараметрыОткрытия.Вставить("Идентификатор", ОписаниеКоманды.Идентификатор);
			ФормаТТН = ПолучитьФорму("Обработка.ПечатьТТН.Форма.Форма",ПараметрыОткрытия, ВладелецФормы);
			
			//Заполним данными Структуру ПараметрыПечати	
			// Test{20231010
			стрСчетчик = Формат(Счетчик, "ЧГ=");
			
			//ПараметрыПечати.Вставить("Документ"+Счетчик, ФормаТТН.Объект.Документ);
			//ПараметрыПечати.Вставить("МаркаИГосНомерАвтомобиля"+Счетчик, ФормаТТН.Объект.МаркаИГосНомерАвтомобиля);
			//ПараметрыПечати.Вставить("ГосНомерПрицепа"+Счетчик, ФормаТТН.Объект.ГосНомерПрицепа);
			//ПараметрыПечати.Вставить("ПунктПогрузки"+Счетчик, "м.Київ, вул.Малинська 4Є");
			//ПараметрыПечати.Вставить("ПунктРазгрузки"+Счетчик,ФормаТТН.Объект.ПунктРазгрузки);
			//ПараметрыПечати.Вставить("Водитель"+Счетчик, ФормаТТН.Объект.Водитель);
			//ПараметрыПечати.Вставить("Перевозчик"+Счетчик, ФормаТТН.Объект.Перевозчик);
			//ПараметрыПечати.Вставить("ВидПеревозки"+Счетчик, "за кілометровим тарифом");
			//ПараметрыПечати.Вставить("ЗаголовокФормы"+Счетчик,ФормаТТН.Объект.Документ);
			//ПараметрыПечати.Вставить("НомерТТН"+Счетчик, ФормаТТН.Объект.НомерТТН);
			//ПараметрыПечати.Вставить("ТипЦен"+Счетчик, ФормаТТН.Объект.ТипЦен);
			//ПараметрыПечати.Вставить("УпрощеннаяТТН"+Счетчик, Истина);
			//ПараметрыПечати.Вставить("ПечатьНескольких", "ПечатьНескольких");  
			ПараметрыПечати.Вставить("Документ"+стрСчетчик, ФормаТТН.Объект.Документ);
			ПараметрыПечати.Вставить("МаркаИГосНомерАвтомобиля"+стрСчетчик, ФормаТТН.Объект.МаркаИГосНомерАвтомобиля);
			ПараметрыПечати.Вставить("ГосНомерПрицепа"+стрСчетчик, ФормаТТН.Объект.ГосНомерПрицепа);
			ПараметрыПечати.Вставить("ПунктПогрузки"+стрСчетчик, ФормаТТН.Объект.ПунктПогрузки);//"м.Київ, вул.Малинська 4Є");
			ПараметрыПечати.Вставить("ПунктРазгрузки"+стрСчетчик,ФормаТТН.Объект.ПунктРазгрузки);
			ПараметрыПечати.Вставить("Водитель"+стрСчетчик, ФормаТТН.Объект.Водитель);
			ПараметрыПечати.Вставить("Перевозчик"+стрСчетчик, ФормаТТН.Объект.Перевозчик);
			ПараметрыПечати.Вставить("ВидПеревозки"+стрСчетчик, "за кілометровим тарифом");
			ПараметрыПечати.Вставить("ЗаголовокФормы"+стрСчетчик,ФормаТТН.Объект.Документ);
			ПараметрыПечати.Вставить("НомерТТН"+стрСчетчик, ФормаТТН.Объект.НомерТТН);
			ПараметрыПечати.Вставить("ТипЦен"+стрСчетчик, ФормаТТН.Объект.ТипЦен);
			ПараметрыПечати.Вставить("УпрощеннаяТТН"+стрСчетчик, Истина);
			ПараметрыПечати.Вставить("ПечатьНескольких", "ПечатьНескольких");
			ПараметрыПечати.Вставить("БезЦен"+стрСчетчик, Булево(СтрНайти(ОписаниеКоманды.Идентификатор, "БезЦен")));
			// Test}
			
			//Заполним данными Структуру ПараметрыПечати
			ПараметрыПечатиМассив.Добавить(ПараметрыПечати);
			Счетчик = Счетчик + 1;
		КонецЦикла;
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Обработка.ПечатьТТН","ТТН",ОписаниеКоманды.ОбъектыПечати,ВладелецФормы,ПараметрыПечати);
			//Иначе - отрабатывает типовая логика для печати ТТН из одного документа РОнТ		
	Иначе 
	
	ПараметрыОткрытия = Новый Структура("Документ", ПараметрКоманды[0]);
		ПараметрыОткрытия.Вставить("Идентификатор", ОписаниеКоманды.Идентификатор);
		
		// Откроем форму печати документов
		ОткрытьФорму("Обработка.ПечатьТТН.Форма", ПараметрыОткрытия, ВладелецФормы, КлючУникальности);
	//...ерпсНикодаЕвгений 2021-10-04 #6738

	КонецЕсли;
	
	
	
КонецФункции

Функция ВыполнитьКомандуПечатиКассовыйОрдер(ОписаниеКоманды) Экспорт
	
	ОбъектыПечати = ОписаниеКоманды.ОбъектыПечати;
	СписокМакетов = ТипыКассовыхДокументов(ОбъектыПечати);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("ЖурналДокументов.Деньги",
		СписокМакетов,
		ОбъектыПечати,
		ОписаниеКоманды.Форма,
		ОбщегоНазначенияБПКлиент.ПолучитьЗаголовокПечатнойФормы(ОбъектыПечати));
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры для команд печати
Функция ПолучитьЗаголовокПечатнойФормы(ПараметрКоманды) Экспорт 
	
	Если Тип(ПараметрКоманды) = Тип("Массив") И ПараметрКоманды.Количество() = 1 Тогда 
		Возврат Новый Структура("ЗаголовокФормы", ПараметрКоманды[0]);
	Иначе
		Возврат Новый Структура;
	КонецЕсли;
	
КонецФункции

Функция ТипыКассовыхДокументов(МассивОбъектов)
	
	СписокТиповКассовыхДокументов = Новый Массив;
	
	ДобавленаРКО = Ложь;
	ДобавленаПКО = Ложь;
	
	Для каждого КассовыйОрдер Из МассивОбъектов Цикл
		Если НЕ ДобавленаРКО И ТипЗнч(КассовыйОрдер) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
			ДобавленаРКО = Истина;
			СписокТиповКассовыхДокументов.Добавить("РКО");
		ИначеЕсли НЕ ДобавленаПКО И ТипЗнч(КассовыйОрдер) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
			ДобавленаПКО = Истина;
			СписокТиповКассовыхДокументов.Добавить("ПКО");
		КонецЕсли;
		
		Если ДобавленаРКО И ДобавленаПКО Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокТиповКассовыхДокументов;
	
КонецФункции
