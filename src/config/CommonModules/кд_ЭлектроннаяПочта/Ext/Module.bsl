Функция ПочтаПользователя(ТекПолучатель) Экспорт 

   Возврат ПользователиСлужебный.ОписаниеПользователя(ТекПолучатель).АдресЭлектроннойПочты;

КонецФункции // ПочтаПользователя()


Процедура ОтправкаОтчетовЕжедневно(МассивПараметров = Неопределено, Тест = Ложь) Экспорт
	
	Перем НачалоПериода, КонецПериода;//Переменные КодВычисленияПараметровОтчетаИПисьма       
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОтправкаОтчетовЕжедневно);
	
	Если МассивПараметров = Неопределено Или ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована Тогда
		Возврат;
	КонецЕсли;       
	
	Настройка 		= МассивПараметров;  
	ЧтоОтправлять 	= Настройка.ЧтоОтправлять;
	ТемаПисьма 		= Настройка.Наименование;
	ТекстПисьма 	= "";
	Отказ 			= Ложь;   
	НазваниеФайла   = ТемаПисьма; 
	
	Если Тест Или Настройка.Тестирование Тогда
		Массив = Настройка.ПолучателиТестирование.ВыгрузитьКолонку("EMail");
	Иначе
		Массив = Настройка.Получатели.ВыгрузитьКолонку("EMail");
	КонецЕсли;
	
	ТаблицаОтборов 	= Неопределено;
	ТекНастройка 	= Настройка.СохраненнаяНастройка;	
	
	Выполнить(Настройка.КодВычисленияПериодаОтчета);

	Выполнить(Настройка.КодВычисленияПараметровОтчетаИПисьма);  
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации("Отправка отчетов ежедневно", УровеньЖурналаРегистрации.Информация, , , "Отправка отчета  "+Настройка.ИмяОтчета+".");
	КомпоновкаДанныхСервер.ОтправитьОтчетПользователю(Массив, НазваниеФайла, Отчеты[Настройка.ИмяОтчета] , Настройка.СохраненнаяНастройка.Наименование, НачалоПериода, КонецПериода, ТаблицаОтборов,,,,,,,,,Истина,ТекНастройка,ТемаПисьма,ТекстПисьма,ЧтоОтправлять);
	ЗаписьЖурналаРегистрации("Отправка отчетов ежедневно", УровеньЖурналаРегистрации.Информация, , , "Завершина отправка отчета "+Настройка.ИмяОтчета+".");
	
КонецПроцедуры

Процедура ДобавитьПолучателя(Получатели,ТекПолучатель) Экспорт
	Если ТипЗнч(ТекПолучатель) = Тип("Строка") Тогда
		Получатели.Добавить(ТекПолучатель);
	ИначеЕсли ТипЗнч(ТекПолучатель) = Тип("СправочникСсылка.Пользователи") Тогда
        Почта = ПользователиСлужебный.ОписаниеПользователя(ТекПолучатель).АдресЭлектроннойПочты;
		Если ЗначениеЗаполнено(Почта) Тогда
			Получатели.Добавить(Почта);
			НайденаЭлПочта = Истина;
		КонецЕсли;
		Если НЕ НайденаЭлПочта Тогда
			ОтправитьПисьмоАдминистратору("Отправка письма " + ТекПолучатель + ": не найден адрес эл. почты!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//Процедура ОтправитьПисьмо(Получатели,Тема,ТекстПисьма,Вложения = Неопределено,ИмяФайлаHTML = "",УчетнаяЗапись = Неопределено, ОтображаемоеИмя = "1С",ФорматHTML=Ложь,Приоритет = 0,НепосредственнаяОтправка = Ложь,ПисьмоОтправлено=Ложь,ОтображаемыйАдрес = Неопределено,ОшибкаНТМЛ = Ложь) Экспорт //Старцев
//	
//	Если УчетнаяЗапись = Неопределено Тогда
//		УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
//	КонецЕсли;
//	
//	тВложения =  Вложения;
//	
//	Если НЕ Вложения = Неопределено и не НепосредственнаяОтправка Тогда
//		Если ТипЗнч(Вложения) = Тип("ХранилищеЗначения") Тогда
//			тВложения =  Вложения;
//		Иначе
//			ТЗВлож = Новый ТаблицаЗначений;
//			ТЗВлож.Колонки.Добавить("Данные");
//			ТЗВлож.Колонки.Добавить("Название");
//			Если ТипЗнч(Вложения) = Тип("Строка") Тогда
//				НовСтр = ТЗВлож.Добавить();
//				НовСтр.Данные = Новый ДвоичныеДанные(Вложения);
//				НовСтр.Название = Вложения;
//			ИначеЕсли ТипЗнч(Вложения) = Тип("Соответствие") Тогда
//				Для Каждого ТекЗапись Из Вложения Цикл
//					НовСтр = ТЗВлож.Добавить();
//					НовСтр.Данные = Новый ДвоичныеДанные(ТекЗапись.Значение);
//					НовСтр.Название = ТекЗапись.Ключ;
//				КонецЦикла;
//			ИначеЕсли ТипЗнч(Вложения) = Тип("Массив") Тогда
//				Для Каждого ТекЗапись Из Вложения Цикл
//					НовСтр = ТЗВлож.Добавить();
//					НовСтр.Данные = Новый ДвоичныеДанные(ТекЗапись);
//					НовСтр.Название = ТекЗапись;
//				КонецЦикла;
//			КонецЕсли;
//			тВложения = Новый ХранилищеЗначения(ТЗВлож);
//		КонецЕсли;
//	КонецЕсли;
//	
//	Если Не НепосредственнаяОтправка Тогда
//		ЗаписатьНеотправленноеПисьмо(Получатели,Тема,ТекстПисьма,УчетнаяЗапись,ФорматHTML,тВложения);
//		//ПисьмоОтправлено = Истина;
//		Возврат;
//	КонецЕсли;
//	
//	ИнтернетПочта = СоединитьсяСИнтернетПочтой(УчетнаяЗапись);
//	Если ИнтернетПочта = Неопределено Тогда
//		ЗаписьЖурналаРегистрации("Отправка системных сообщений",УровеньЖурналаРегистрации.Ошибка,,,"Ошибка подключения к учетной записи");
//		Возврат;
//	КонецЕсли;
//	
//	Если ТипЗнч(Получатели) = Тип("Строка") и Найти(Получатели,",")>0 Тогда
//		мСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Получатели);
//		Получатели = мСтрок
//	КонецЕсли;
//	
//	Сообщение = Новый ИнтернетПочтовоеСообщение;
//	Если ТипЗнч(Получатели) = Тип("Строка") или ТипЗнч(Получатели) = Тип("СправочникСсылка.Пользователи") Тогда
//		ДобавитьПолучателя(Сообщение.Получатели,Получатели);
//	ИначеЕсли ТипЗнч(Получатели) = Тип("Структура") Тогда
//		Для Каждого ТекПолучатель Из Получатели Цикл
//			ДобавитьПолучателя(Сообщение.Получатели,ТекПолучатель.Значение);
//		КонецЦикла;
//	ИначеЕсли ТипЗнч(Получатели) = Тип("Массив") Тогда
//		Для Каждого ТекПолучатель Из Получатели Цикл
//			ДобавитьПолучателя(Сообщение.Получатели,ТекПолучатель);
//		КонецЦикла;
//	ИначеЕсли ТипЗнч(Получатели) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
//		Для Каждого ТекСтрока Из Получатели.ПользователиГруппы Цикл
//			ДобавитьПолучателя(Сообщение.Получатели, ТекСтрока.Пользователь);
//		КонецЦикла;
//	КонецЕсли;
//	
//	Сообщение.Тема = Тема;
//	
//	Если ОтображаемыйАдрес = Неопределено Тогда
//		Сообщение.Отправитель.Адрес	= УчетнаяЗапись.АдресЭлектроннойПочты;
//	Иначе
//		Сообщение.Отправитель.Адрес	= ОтображаемыйАдрес;
//	КонецЕсли;
//	
//	Сообщение.Отправитель.ОтображаемоеИмя = ОтображаемоеИмя;
//	
//	Если Сообщение.Получатели.Количество() = 0 Тогда
//		ОтправитьПисьмоАдминистратору(Тема + ": Ошибка при отправке. Не определены получатели! Отправитель " + ПараметрыСеанса.ТекущийПользователь,ТекстПисьма);
//		Возврат;
//	КонецЕсли;
//	
//	ОбрабатыватьСообщение = Истина;
//	Если Не ИмяФайлаHTML = "" Тогда
//		тмп = Новый ТекстовыйДокумент;
//		тмп.Прочитать(ИмяФайлаHTML);
//		
//		ФайлHTML = Новый ЧтениеHTML;
//		ФайлHTML.ОткрытьФайл(ИмяФайлаHTML);
//		ПостроительDOM = Новый ПостроительDOM;
//		ДокументDOM = ПостроительDOM.Прочитать(ФайлHTML);
//		
//		Текст 				= Сообщение.Тексты.Добавить();
//		Текст.ТипТекста 	= ТипТекстаПочтовогоСообщения.HTML;
//		Текст.Текст 		= ТекстПисьма + Символы.ПС + тмп.ПолучитьТекст();//ДокументDOM.Картинки.Элемент(1);
//		Сообщение.ОбработатьТексты();
//	ИначеЕсли Не ФорматHTML Тогда
//		Текст 						= Сообщение.Тексты.Добавить(Сообщение.Тема);
//		Текст.ТипТекста 			= ТипТекстаПочтовогоСообщения.ПростойТекст;
//		Текст.Текст					= ТекстПисьма; //Сообщение.Тема + "." + Символы.ПС + ТекстПисьма;// + Символы.ПС + "_______________________________________" + Символы.ПС + "С уважением, " + ПараметрыСеанса.ТекущийПользователь + ".";
//	Иначе
//		Текст 						= Сообщение.Тексты.Добавить(ТекстПисьма);
//		Текст.ТипТекста 			= ТипТекстаПочтовогоСообщения.HTML;
//		
//		Попытка		
//			Сообщение.ОбработатьТексты();		
//		Исключение
//			ОбрабатыватьСообщение = Ложь;
//			//ОшибкаНТМЛ = Истина;
//			//ВызватьИсключение;
//		КонецПопытки;
//	КонецЕсли; 
//	
//	Если НепосредственнаяОтправка Тогда
//		тВложения = Вложения;
//	КонецЕсли;
//	
//	Если НЕ тВложения = Неопределено Тогда
//		Если ТипЗнч(тВложения) = Тип("ХранилищеЗначения") Тогда
//			ТЗВлож  =  тВложения.Получить();
//			Если ТипЗнч(ТЗВлож) = Тип("ТаблицаЗначений") Тогда
//				Для Каждого ТекСтр Из ТЗВлож Цикл
//					Сообщение.Вложения.Добавить(ТекСтр.Данные,ТекСтр.Название);
//				КонецЦикла;
//			КонецЕсли;
//		Иначе
//			Если ТипЗнч(тВложения) = Тип("Строка") Тогда
//				Сообщение.Вложения.Добавить(тВложения,тВложения);
//			ИначеЕсли ТипЗнч(тВложения) = Тип("Соответствие") Тогда
//				Для Каждого ТекЗапись Из тВложения Цикл
//					Сообщение.Вложения.Добавить(ТекЗапись.Значение,ТекЗапись.Ключ);
//				КонецЦикла;
//			ИначеЕсли ТипЗнч(тВложения) = Тип("Массив") Тогда
//				Для Каждого ТекЗапись Из тВложения Цикл
//					Сообщение.Вложения.Добавить(ТекЗапись,ТекЗапись);
//				КонецЦикла;
//			КонецЕсли;	
//		КонецЕсли;
//	КонецЕсли;
//	Попытка
//		Сообщить("Отправка письма: " + Сообщение.Тема);
//		Если ОбрабатыватьСообщение Тогда              //
//			ОшибочныеПолучатели = ИнтернетПочта.Послать(Сообщение);         
//		Иначе                                         //
//			ОшибочныеПолучатели = ИнтернетПочта.Послать(Сообщение, ОбработкаТекстаИнтернетПочтовогоСообщения.НеОбрабатывать);         //
//		КонецЕсли;		                              //
//		Сообщить("Сообщение отправлено.");
//		//ОтправленоУспешно = ОтправленоУспешно + 1;
//		ПисьмоОтправлено = Истина;		
//		ЗаписьЖурналаРегистрации("Отправка системных сообщений",УровеньЖурналаРегистрации.Информация,,,"Сообщение отправлено");
//	Исключение
//		ПисьмоОтправлено = Ложь;
//		ЗаписьЖурналаРегистрации("Отправка системных сообщений",УровеньЖурналаРегистрации.Ошибка,,,"Ошибка подключения к почте: " + ОписаниеОшибки());
//		ОшибкаНТМЛ = Истина;       //
//		ВызватьИсключение;         //
//	КонецПопытки;
//	
//КонецПроцедуры

Функция ОтправитьПисьмо(Знач Получатели, Тема="", ТекстПисьма="", Вложения = Неопределено, ИмяФайлаHTML = "", Знач УчетнаяЗапись = Неопределено, 
                            ОтображаемоеИмя = Неопределено, ФорматHTML=Ложь, Приоритет = 0, 
							//НепосредственнаяОтправка = Ложь, 
                            ПисьмоОтправлено = Ложь, прПараметрыАвтоФормирования = Неопределено,НепосредственнаяОтправка = Истина) Экспорт //Старцев
	
	Если ТипЗнч(УчетнаяЗапись) <> Тип("ДанныеФормыСтруктура") и НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	КонецЕсли;
	
	тВложения =  Вложения;
	
	Если Вложения <> Неопределено Тогда
		Если ТипЗнч(Вложения) = Тип("ХранилищеЗначения") Тогда
			тВложения =  Вложения;
		Иначе
			ТЗВлож = Новый ТаблицаЗначений;
			ТЗВлож.Колонки.Добавить("Данные");
			ТЗВлож.Колонки.Добавить("Название");
			Если ТипЗнч(Вложения) = Тип("Строка") Тогда
				НовСтр = ТЗВлож.Добавить();
				НовСтр.Данные = Новый ДвоичныеДанные(Вложения);
				НовСтр.Название = Вложения;
			ИначеЕсли ТипЗнч(Вложения) = Тип("Соответствие") Тогда
				Для Каждого ТекЗапись Из Вложения Цикл
					НовСтр = ТЗВлож.Добавить();
					НовСтр.Данные = Новый ДвоичныеДанные(ТекЗапись.Значение);
					НовСтр.Название = ТекЗапись.Ключ;
				КонецЦикла;
			ИначеЕсли ТипЗнч(Вложения) = Тип("Массив") Тогда
				Для Каждого ТекЗапись Из Вложения Цикл
					НовСтр = ТЗВлож.Добавить();
					НовСтр.Данные = Новый ДвоичныеДанные(ТекЗапись);
					НовСтр.Название = ТекЗапись;
				КонецЦикла;
			КонецЕсли;
			тВложения = Новый ХранилищеЗначения(ТЗВлож);
		КонецЕсли;
	КонецЕсли;
	
	Если Не НепосредственнаяОтправка Тогда
		ЗаписатьНеотправленноеПисьмо(Получатели,Тема,ТекстПисьма,УчетнаяЗапись,ФорматHTML,тВложения);
		//ПисьмоОтправлено = Истина;
		Возврат Ложь;
	КонецЕсли;
	
    ИнтернетПочта = СоединитьсяСИнтернетПочтой(УчетнаяЗапись);
	
    Если ИнтернетПочта = Неопределено Тогда
    	ЗаписьЖурналаРегистрации("Отправка системных сообщений",УровеньЖурналаРегистрации.Ошибка,,,"Ошибка подключения к учетной записи");
    	Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(Получатели) = Тип("Строка") и Найти(Получатели,",")>0 Тогда
		мСтрок = ОбщегоНазначенияСервер.РазложитьСтрокуВМассивПодстрок(Получатели);
		Получатели = мСтрок
	КонецЕсли;
	
	Сообщение = Новый ИнтернетПочтовоеСообщение;
	Если ТипЗнч(Получатели) = Тип("Строка") или ТипЗнч(Получатели) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ДобавитьПолучателя(Сообщение.Получатели,Получатели);
	ИначеЕсли ТипЗнч(Получатели) = Тип("Структура") Тогда
		Для Каждого ТекПолучатель Из Получатели Цикл
			ДобавитьПолучателя(Сообщение.Получатели,ТекПолучатель.Значение);
		КонецЦикла;
	ИначеЕсли ТипЗнч(Получатели) = Тип("Массив") Тогда
		Для Каждого ТекПолучатель Из Получатели Цикл
			ДобавитьПолучателя(Сообщение.Получатели,ТекПолучатель);
		КонецЦикла;
	КонецЕсли;
	
	Сообщение.Тема 							= Тема;
	Сообщение.Отправитель.Адрес				= УчетнаяЗапись.АдресЭлектроннойПочты;
	Сообщение.Отправитель.ОтображаемоеИмя	= ?(ЗначениеЗаполнено(ОтображаемоеИмя), ОтображаемоеИмя, Константы.ЗаголовокСистемы.Получить());
	
	Если Сообщение.Получатели.Количество() = 0 Тогда
		Сообщить("Не заданы получатели для письма " + Сообщение.Тема);
		Возврат Ложь;
	КонецЕсли;
	
	//Подпись = УчетнаяЗапись.Подпись;
	
	Текст 						= Сообщение.Тексты.Добавить(ТекстПисьма);
	
	//Если НЕ ПустаяСтрока(Подпись) Тогда
	//	Текст.Текст				= Текст.Текст + Символы.ПС + Подпись;
	//КонецЕсли;
		
    Если Не ФорматHTML Тогда
		Текст.ТипТекста 			= ТипТекстаПочтовогоСообщения.ПростойТекст;
	Иначе
		Текст.ТипТекста 			= ТипТекстаПочтовогоСообщения.HTML;
        Сообщение.ОбработатьТексты();
	КонецЕсли; 

	//Если НепосредственнаяОтправка Тогда
		тВложения = Вложения;
	//КонецЕсли;
	
	Если тВложения <> Неопределено Тогда
		Если ТипЗнч(тВложения) = Тип("ХранилищеЗначения") Тогда
			ТЗВлож  =  тВложения.Получить();
			Если ТипЗнч(ТЗВлож) = Тип("ТаблицаЗначений") Тогда
				Для Каждого ТекСтр Из ТЗВлож Цикл
					Сообщение.Вложения.Добавить(ТекСтр.Данные,ТекСтр.Название);
				КонецЦикла;
			КонецЕсли;
		Иначе
			Если ТипЗнч(тВложения) = Тип("Строка") Тогда
				Сообщение.Вложения.Добавить(тВложения,тВложения);
			ИначеЕсли ТипЗнч(тВложения) = Тип("Соответствие") Тогда
				Для Каждого ТекЗапись Из тВложения Цикл
					Сообщение.Вложения.Добавить(ТекЗапись.Значение,ТекЗапись.Ключ);
				КонецЦикла;
			ИначеЕсли ТипЗнч(тВложения) = Тип("Массив") Тогда
				Для Каждого ТекЗапись Из тВложения Цикл
					Сообщение.Вложения.Добавить(ТекЗапись,ТекЗапись);
				КонецЦикла;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		Сообщить("[" + ТекущаяДата() +  "] Отправка письма: " + Сообщение.Тема);
		ИнтернетПочта.Послать(Сообщение);
		Сообщить("[" + ТекущаяДата() +  "] Сообщение отправлено.");
		ПисьмоОтправлено = Истина;
		ЗаписьЖурналаРегистрации("Отправка эл. почты", УровеньЖурналаРегистрации.Информация,,,"Сообщение отправлено");
	Исключение
		ПисьмоОтправлено = Ложь;
		ЗаписьЖурналаРегистрации("Отправка эл. почты", УровеньЖурналаРегистрации.Ошибка,,,"Ошибка отправки сообщения: " + ОписаниеОшибки());
	КонецПопытки;
	
	Возврат ПисьмоОтправлено;
	
КонецФункции

Процедура ОтправитьПисьмоАдминистратору(Тема,ТекстПисьма = "",Вложения = Неопределено,ФорматHTML=Ложь,ДопПолучатели = Неопределено) Экспорт
	Сообщить("Отправка письма об ошибке администратору...",СтатусСообщения.Информация);            
	Получатели = Справочники.Константы.ПолучитьЗначениеКонстанты("Сервисные адреса");        
	Если Не ЗначениеЗаполнено(Получатели) Тогда
    	Возврат;						
	КонецЕсли;                                                        
	ОтправлятьТолькоОшибки =  Справочники.Константы.ПолучитьЗначениеКонстанты("Отправлять только ошибки");  
	Если ЗначениеЗаполнено(ОтправлятьТолькоОшибки) И ОтправлятьТолькоОшибки Тогда
		Если Найти(Тема,"Виконано") > 0 Или Найти(Тема,"успешно") Тогда
			Возврат;	
		КонецЕсли;		
	КонецЕсли;
	мПолучатели = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Получатели,";",Истина);   

	ОтправитьПисьмо(мПолучатели,Тема + ": " + ПараметрыСеанса.ТекущийПользователь,?(ТекстПисьма = "",Тема,ТекстПисьма),Вложения,,Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты,,ФорматHTML,5,Истина,,Ложь);
КонецПроцедуры

Процедура ЗаписатьНеотправленноеПисьмо(Получатели,Тема,ТекстПисьма,УчетнаяЗапись=Неопределено,ФорматHTML=Ложь,Вложения=Неопределено) Экспорт
	Если УчетнаяЗапись = Неопределено Тогда
		УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	КонецЕсли;
	
	пПолучатели = "";
	Если ТипЗнч(Получатели) = Тип("Строка") или ТипЗнч(Получатели) = Тип("СправочникСсылка.Пользователи")
		или ТипЗнч(Получатели) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		пПолучатели = Получатели;
	ИначеЕсли ТипЗнч(Получатели) = Тип("Структура") Тогда
		Для Каждого ТекПолучатель Из Получатели Цикл
			пПолучатели = пПолучатели + ?(пПолучатели="","",",")+СокрЛП(Строка(ТекПолучатель.Значение));
		КонецЦикла;
	ИначеЕсли ТипЗнч(Получатели) = Тип("Массив") Тогда
		Для Каждого ТекПолучатель Из Получатели Цикл
			пПолучатели = пПолучатели + ?(пПолучатели="","",",")+СокрЛП(Строка(ТекПолучатель));
		КонецЦикла;
	КонецЕсли;
	
	РегНС = РегистрыСведений.НеотправленныеПисьма.СоздатьМенеджерЗаписи();
	РегНС.УИД = Новый УникальныйИдентификатор();
	РегНС.ДатаЗаписи = ТекущаяДата();
	РегНС.Тема = Тема;
	РегНС.Текст = ТекстПисьма;
	РегНС.Получатели = пПолучатели;
	РегНС.УчетнаяЗапись = УчетнаяЗапись;
	РегНС.ФорматHTML = ФорматHTML;
	Если Не Вложения = Неопределено Тогда
		Если ТипЗнч(Вложения) = Тип("ХранилищеЗначения") Тогда
			РегНС.Вложения = Вложения;
		Иначе
			РегНС.Вложения = Новый ХранилищеЗначения(Вложения);
		КонецЕсли;
	КонецЕсли;
	РегНС.Записать();
КонецПроцедуры

Процедура ОтправитьНеотправленныеСообщенияПоРегистру() Экспорт
	//Если Не ПараметрыСеанса.ЭтоРабочаяБаза Тогда
	//	ЗаписьЖурналаРегистрации("Закрытие смены",,,,"Не проверяем тестовую базу");
	//	ПолныеПрава.ПроверитьРегламентныеНаТестовойБазе();
	//	Возврат;
	//КонецЕсли;
	
	РегламентноеЗадание = Метаданные.РегламентныеЗадания.ОтправкаНеотправленныхСообщений;
	МассивЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("ИмяМетода, Состояние", "кд_ЭлектроннаяПочта.ОтправитьНеотправленныеСообщенияПоРегистру", СостояниеФоновогоЗадания.Активно));
	Если МассивЗаданий.Количество() > 1  Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НеотправленныеПисьма.УИД,
	|	НеотправленныеПисьма.ДатаЗаписи,
	|	НеотправленныеПисьма.Получатели,
	|	НеотправленныеПисьма.Тема,
	|	НеотправленныеПисьма.Текст,
	|	НеотправленныеПисьма.ФорматHTML,
	|	НеотправленныеПисьма.УчетнаяЗапись КАК УчетнаяЗапись,
	|	НеотправленныеПисьма.Вложения,
	|	НеотправленныеПисьма.Приоритет КАК Приоритет
	|ИЗ
	|	РегистрСведений.НеотправленныеПисьма КАК НеотправленныеПисьма
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет УБЫВ
	|ИТОГИ ПО
	|	УчетнаяЗапись
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	
	мСтр = Новый Массив;
	КвоСообщенийВБлоке = 5;
	
	ВыборкаУчетнаяЗапись = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаУчетнаяЗапись.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Пока ВыборкаУчетнаяЗапись.Следующий() Цикл
		//Старцев (
		//Если ВыборкаУчетнаяЗапись.УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.Служебная Тогда
		//	Продолжить;
		//КонецЕсли;
		//Старцев )
		
		ТекУчетнаяЗапись = Неопределено;
		Если ВыборкаУчетнаяЗапись.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			ТекУчетнаяЗапись = ВыборкаУчетнаяЗапись.УчетнаяЗапись;
			Выборка = ВыборкаУчетнаяЗапись.Выбрать();
			
			Индекс = 0;
			КвоСообщений = Выборка.Количество();
			КвоОбработано = 0;
			Пока Выборка.Следующий() Цикл
				Индекс = Индекс + 1;
				КвоОбработано = КвоОбработано + 1;
				
				мСтр.Добавить(Выборка);
				
				Если Индекс = КвоСообщенийВБлоке Или КвоОбработано = КвоСообщений Тогда
					ОтправитьБлокСообщений(мСтр,ТекУчетнаяЗапись);
					мСтр = Новый Массив;
					Индекс = 0;
				КонецЕсли;
				
			КонецЦикла;		
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

Процедура АвтоматическаяОтправкаНеотправленныхСообщенийПоРегистру() Экспорт
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОтправкаНеотправленныхСообщений);    
	Если ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована Тогда
		Возврат;	
	КонецЕсли;
	ОтправитьНеотправленныеСообщенияПоРегистру()
КонецПроцедуры

Процедура ОтправитьБлокСообщений(мЗаписейРегистра,УчетнаяЗапись=Неопределено) Экспорт
	
	Если УчетнаяЗапись = Неопределено Тогда
		УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	КонецЕсли;
	
	ИнтернетПочта = СоединитьсяСИнтернетПочтой(УчетнаяЗапись);
	Если ИнтернетПочта = Неопределено Тогда
		ЗаписьЖурналаРегистрации("Отправка системных сообщений",УровеньЖурналаРегистрации.Ошибка,,,"Ошибка подключения к учетной записи");
		Возврат;
	КонецЕсли;
	
	Для каждого ТекВыборка Из мЗаписейРегистра Цикл
		
		Сообщение = Новый ИнтернетПочтовоеСообщение;
		ОтображаемоеИмя = "1С:ТГИ";
		Если ТипЗнч(ТекВыборка.Получатели) = Тип("Строка") и Найти(ТекВыборка.Получатели,",")>0 Тогда
			мСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекВыборка.Получатели);
			Для Каждого ТекПолучатель Из мСтрок Цикл
				ДобавитьПолучателя(Сообщение.Получатели,ТекПолучатель);
			КонецЦикла;
		ИначеЕсли ТипЗнч(ТекВыборка.Получатели) = Тип("Строка") или ТипЗнч(ТекВыборка.Получатели) = Тип("СправочникСсылка.Пользователи") Тогда
			ДобавитьПолучателя(Сообщение.Получатели,ТекВыборка.Получатели);
		ИначеЕсли ТипЗнч(ТекВыборка.Получатели) = Тип("Структура") Тогда
			Для Каждого ТекПолучатель Из ТекВыборка.Получатели Цикл
				ДобавитьПолучателя(Сообщение.Получатели,ТекПолучатель.Значение);
			КонецЦикла;
		ИначеЕсли ТипЗнч(ТекВыборка.Получатели) = Тип("Массив") Тогда
			Для Каждого ТекПолучатель Из ТекВыборка.Получатели Цикл
				ДобавитьПолучателя(Сообщение.Получатели,ТекПолучатель);
			КонецЦикла;
		ИначеЕсли ТипЗнч(ТекВыборка.Получатели) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
			Для Каждого ТекСтрока Из ТекВыборка.Получатели.ПользователиГруппы Цикл
				ДобавитьПолучателя(Сообщение.Получатели, ТекСтрока.Пользователь);
			КонецЦикла;
		КонецЕсли;
		
		Сообщение.Тема 							= ТекВыборка.Тема;
		Сообщение.Отправитель.Адрес				= УчетнаяЗапись.АдресЭлектроннойПочты;
		Сообщение.Отправитель.ОтображаемоеИмя	= ОтображаемоеИмя;
		
		Если Сообщение.Получатели.Количество() = 0 Тогда
			ОтправитьПисьмоАдминистратору(ТекВыборка.Тема + ": Ошибка при отправке. Не определены получатели! Отправитель " + ПараметрыСеанса.ТекущийПользователь,ТекВыборка.ТекстПисьма);
			продолжить;
		КонецЕсли;
		
		Если Не ТекВыборка.ФорматHTML Тогда
			Текст 						= Сообщение.Тексты.Добавить(Сообщение.Тема);
			Текст.ТипТекста 			= ТипТекстаПочтовогоСообщения.ПростойТекст;
			Текст.Текст					= Сообщение.Тема + "." + Символы.ПС + ТекВыборка.Текст;
		Иначе
			Текст 						= Сообщение.Тексты.Добавить(ТекВыборка.Текст);
			Текст.ТипТекста 			= ТипТекстаПочтовогоСообщения.HTML;
			Сообщение.ОбработатьТексты();
		КонецЕсли; 
		
		тВложения = ТекВыборка.Вложения;
		
		Если НЕ тВложения = Неопределено Тогда
			Если ТипЗнч(тВложения) = Тип("ХранилищеЗначения") Тогда
				ТЗВлож  =  тВложения.Получить();
				Если ТипЗнч(ТЗВлож) = Тип("ТаблицаЗначений") Тогда
					Для Каждого ТекСтр Из ТЗВлож Цикл
						Сообщение.Вложения.Добавить(ТекСтр.Данные,ТекСтр.Название);
					КонецЦикла;
				КонецЕсли;
			Иначе
				Если ТипЗнч(тВложения) = Тип("Строка") Тогда
					Сообщение.Вложения.Добавить(тВложения,тВложения);
				ИначеЕсли ТипЗнч(тВложения) = Тип("Соответствие") Тогда
					Для Каждого ТекЗапись Из тВложения Цикл
						Сообщение.Вложения.Добавить(ТекЗапись.Значение,ТекЗапись.Ключ);
					КонецЦикла;
				ИначеЕсли ТипЗнч(тВложения) = Тип("Массив") Тогда
					Для Каждого ТекЗапись Из тВложения Цикл
						Сообщение.Вложения.Добавить(ТекЗапись,ТекЗапись);
					КонецЦикла;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		Попытка
			Сообщить("Отправка письма: " + Сообщение.Тема);
			ИнтернетПочта.Послать(Сообщение);
			Сообщить("Сообщение отправлено.");
			ЗаписьЖурналаРегистрации("Отправка системных сообщений",УровеньЖурналаРегистрации.Информация,,,"Сообщение отправлено");
			Отбор = Новый Структура;
			Отбор.Вставить("УИД", ТекВыборка.УИД);
			Рег = РегистрыСведений.НеотправленныеПисьма;
			КлючЗаписи = Рег.СоздатьКлючЗаписи(Отбор);
			РегНС = РегистрыСведений.НеотправленныеПисьма.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(РегНС,КлючЗаписи);
			РегНС.Прочитать();
			РегНС.Удалить();
		Исключение
			ЗаписьЖурналаРегистрации("Отправка системных сообщений",УровеньЖурналаРегистрации.Ошибка,,,"Ошибка подключения к почте: " + ОписаниеОшибки());
		КонецПопытки;
		
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись) Экспорт
	
	Перем ПарольSMTP,Пароль;
	
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	
	Профиль.АдресСервераIMAP = УчетнаяЗапись.СерверВходящейПочты;
	Профиль.АдресСервераSMTP = УчетнаяЗапись.СерверИсходящейПочты;

	//Если УчетнаяЗапись.Таймаут > 0 Тогда
	//	Профиль.Таймаут = УчетнаяЗапись.Таймаут;
	//КонецЕсли; 
	
	Пароль = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(УчетнаяЗапись,  "Пароль");
	ПарольSMTP = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(УчетнаяЗапись, "ПарольSMTP");
	
	
	Профиль.ПарольIMAP         	= Пароль;
	Профиль.Пользователь    	= УчетнаяЗапись.Пользователь;
	
	Профиль.ПортIMAP        	= УчетнаяЗапись.ПортСервераВходящейПочты;
	Профиль.ПортSMTP         	= УчетнаяЗапись.ПортСервераИсходящейПочты;
	
	Профиль.ИспользоватьSSLSMTP = УчетнаяЗапись.ИспользоватьЗащищенноеСоединениеДляИсходящейПочты;
	Профиль.ИспользоватьSSLIMAP = УчетнаяЗапись.ИспользоватьЗащищенноеСоединениеДляВходящейПочты;
	
	Профиль.ТолькоЗащищеннаяАутентификацияIMAP = УчетнаяЗапись.ИспользоватьЗащищенноеСоединениеДляВходящейПочты;
	Профиль.ТолькоЗащищеннаяАутентификацияSMTP = УчетнаяЗапись.ИспользоватьЗащищенноеСоединениеДляИсходящейПочты;
	
	//Если УчетнаяЗапись.ТребуетсяВходНаСерверПередОтправкой Тогда
		Профиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
		Профиль.ПарольSMTP         = ПарольSMTP;
		Профиль.ПользовательSMTP   = УчетнаяЗапись.ПользовательSMTP;
	//Иначе
	//	Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
	//	Профиль.ПарольSMTP         = "";
	//	Профиль.ПользовательSMTP   = "";
	//КонецЕсли; 
	
	Возврат Профиль;

КонецФункции // ПолучитьИнтернетПочтовоеПодключение()

Функция СоединитьсяСИнтернетПочтой(УчетнаяЗапись) Экспорт
	
	Если ТипЗнч(УчетнаяЗапись) <> Тип("ДанныеФормыСтруктура") и НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Сообщить("Не указана учетная запись!",СтатусСообщения.ОченьВажное);
		#Если Клиент Тогда
			Предупреждение("Не указана учетная запись!",10);
		#КонецЕсли
		Возврат Неопределено;
	КонецЕсли;
	
	Профиль 		= ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	
	Сообщить("[" + ТекущаяДата() +  "] Старт подключения к учетной записи " + УчетнаяЗапись + "...");
	
	ИнтернетПочта 	= Новый ИнтернетПочта;
	Попытка
		ИнтернетПочта.Подключиться(Профиль);
	Исключение
		Сообщить("[" + ТекущаяДата() +  "] Ошибка подключения к учетной записи " + УчетнаяЗапись + ":
		|" + ОписаниеОшибки(),СтатусСообщения.ОченьВажное);
		#Если Клиент Тогда
		Предупреждение("Произошли ошибки при проверке настроек учетной записи.
					   |Описание ошибки приведено в окне сообщения.",5);
		#КонецЕсли
		Возврат Неопределено;
	КонецПопытки;
	
	Сообщить("[" + ТекущаяДата() +  "] Подключение к учетной записи " + УчетнаяЗапись + " выполнено.");
	Возврат ИнтернетПочта;
КонецФункции

