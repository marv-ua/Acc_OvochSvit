// Позволяет определить, есть ли среди реквизитов объекта реквизит с переданным именем.
//
// Параметры:
//  ИмяРеквизита - Строка - имя реквизита;
//  МетаданныеОбъекта - ОбъектМетаданных - объект, в котором требуется проверить наличие реквизита.
//
// Возвращаемое значение:
//  Булево.
//
Функция ЕстьРеквизитОбъекта(ИмяРеквизита, МетаданныеОбъекта, ИмяТабличнойЧасти = "") Экспорт // Пушенко

	Если ИмяТабличнойЧасти = "" Тогда
		Возврат МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизита) <> Неопределено;
	Иначе
		Если МетаданныеОбъекта.ТабличныеЧасти.Найти(ИмяТабличнойЧасти) = Неопределено Тогда
			Сообщить("ВНИМАНИЕ! У " + МетаданныеОбъекта.Имя + " нет табличной части " + ИмяТабличнойЧасти,СтатусСообщения.ОченьВажное);
			Возврат Ложь;
		КонецЕсли;
		Возврат МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.Найти(ИмяРеквизита) <> Неопределено;
	КонецЕсли;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Общие процедуры и функции для работы с данными в базе

// Возвращает структуру, содержащую значения реквизитов прочитанные из информационной базы
// по ссылке на объект.
// 
//  Если доступа к одному из реквизитов нет, возникнет исключение прав доступа.
//  Если необходимо зачитать реквизит независимо от прав текущего пользователя,
//  то следует использовать предварительный переход в привилегированный режим.
// 
// Функция не предназначена для получения значений реквизитов пустых ссылок.
//
// Параметры:
//  Ссылка    - ЛюбаяСсылка - объект, значения реквизитов которого необходимо получить.
//
//  Реквизиты - Строка - имена реквизитов, перечисленные через запятую, в формате
//              требований к свойствам структуры.
//              Например, "Код, Наименование, Родитель".
//            - Структура, ФиксированнаяСтруктура - в качестве ключа передается
//              псевдоним поля для возвращаемой структуры с результатом, а в качестве
//              значения (опционально) фактическое имя поля в таблице.
//              Если значение не определено, то имя поля берется из ключа.
//            - Массив, ФиксированныйМассив - имена реквизитов в формате требований
//              к свойствам структуры.
//
// Возвращаемое значение:
//  Структура - содержит имена (ключи) и значения затребованных реквизитов.
//              Если строка затребованных реквизитов пуста, то возвращается пустая структура.
//              Если в качестве объекта передана пустая ссылка, то все реквизиты вернутся со значением Неопределено.
//
Функция ЗначенияРеквизитовОбъекта(Ссылка, Знач Реквизиты = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Реквизиты) Тогда
		
		Реквизиты = Новый Структура;
		
		Для Каждого ТекРеквизит из Ссылка.Метаданные().Реквизиты Цикл
			
			Реквизиты.Вставить(ТекРеквизит.Имя);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТипЗнч(Реквизиты) = Тип("Строка") Тогда
		Если ПустаяСтрока(Реквизиты) Тогда
			Возврат Новый Структура;
		КонецЕсли;
		Реквизиты = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Реквизиты, ",", Истина);
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура;
	Если ТипЗнч(Реквизиты) = Тип("Структура") Или ТипЗнч(Реквизиты) = Тип("ФиксированнаяСтруктура") Тогда
		СтруктураРеквизитов = Реквизиты;
	ИначеЕсли ТипЗнч(Реквизиты) = Тип("Массив") Или ТипЗнч(Реквизиты) = Тип("ФиксированныйМассив") Тогда
		Для Каждого Реквизит Из Реквизиты Цикл
			СтруктураРеквизитов.Вставить(СтрЗаменить(Реквизит, ".", ""), Реквизит);
		КонецЦикла;
	Иначе
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Неверный тип второго параметра Реквизиты: %1';uk='Невірний тип другого параметра Реквізити: %1'"),
			Строка(ТипЗнч(Реквизиты)));
	КонецЕсли;
	
	ТекстПолей = "";
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		ИмяПоля   = ?(ЗначениеЗаполнено(КлючИЗначение.Значение),
		              СокрЛП(КлючИЗначение.Значение),
		              СокрЛП(КлючИЗначение.Ключ));
		
		Псевдоним = СокрЛП(КлючИЗначение.Ключ);
		
		ТекстПолей  = ТекстПолей + ?(ПустаяСтрока(ТекстПолей), "", ",") + "
		|	" + ИмяПоля + " КАК " + Псевдоним;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|" + ТекстПолей + "
	|ИЗ
	|	" + Ссылка.Метаданные().ПолноеИмя() + " КАК ПсевдонимЗаданнойТаблицы
	|ГДЕ
	|	ПсевдонимЗаданнойТаблицы.Ссылка = &Ссылка
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Результат = Новый Структура;
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		Результат.Вставить(КлючИЗначение.Ключ);
	КонецЦикла;
	ЗаполнитьЗначенияСвойств(Результат, Выборка); 
		
	Возврат Результат;
	
КонецФункции

Функция НайтиАртикул(Номенклатура) Экспорт
	
	Возврат Справочники.ДополнительныеАртикулы.НайтиАртикул(Номенклатура);
	
КонецФункции

Функция МесяцСтрокойДП(Ном) Экспорт
	КромеМесяца = Новый СписокЗначений;
	КромеМесяца.Добавить(1, НСтр("ru='января';uk='січня'"));
	КромеМесяца.Добавить(2, НСтр("ru='февраля';uk='лютого'"));
	КромеМесяца.Добавить(3, НСтр("ru='марта';uk='березня'"));
	КромеМесяца.Добавить(4, НСтр("ru='апреля';uk='квітня'"));
	КромеМесяца.Добавить(5, НСтр("ru='мая';uk='травня'"));
	КромеМесяца.Добавить(6, НСтр("ru='июня';uk='червня'"));
	КромеМесяца.Добавить(7, НСтр("ru='июля';uk='липня'"));
	КромеМесяца.Добавить(8, НСтр("ru='августа';uk='серпня'"));
	КромеМесяца.Добавить(9, НСтр("ru='сентября';uk='вересня'"));
	КромеМесяца.Добавить(10, НСтр("ru='октября';uk='жовтня'"));
	КромеМесяца.Добавить(11, НСтр("ru='ноября';uk='листопада'"));
	КромеМесяца.Добавить(12, НСтр("ru='декабря';uk='грудня'"));
	
	Возврат КромеМесяца.НайтиПоЗначению(Ном).Представление;
КонецФункции

Функция ПриказОСНМА(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Приказ.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.а_ПриказНаВВодВЭксплуатацию КАК Приказ
	               |ГДЕ
	               |	Приказ.ДокументОснование = &Ссылка
	               |	И НЕ Приказ.ПометкаУдаления";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции
	
