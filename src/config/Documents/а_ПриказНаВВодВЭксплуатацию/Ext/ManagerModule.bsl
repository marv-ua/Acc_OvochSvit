#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти  

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриказПокупкаОС";
	КомандаПечати.Представление = НСтр("ru='Печать приказа на покупку ОС';uk='Друк наказу на купівлю ОЗ'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru='Реестр документов ""Приказ на покупку ОС""';uk='Реєстр документів ""Наказ на купівлю ОЗ""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета ОтчетККМ формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриказПокупкаОС") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ИмяМакета = "";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ПриказПокупкаОС",
			НСтр("ru='Печать приказа на покупку ОС';uk='Друк наказу про купівлю ОЗ'"),
			ПолучитьТабличныйДокумент_Приказ(МассивОбъектов, ОбъектыПечати, ИмяМакета),
			,
			ИмяМакета);
	КонецЕсли;
		
		
КонецПроцедуры

Функция ПолучитьТабличныйДокумент_Приказ(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КомлпектВодителю";
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Макет = ПолучитьМакет("МакетПриказа");

	Для Каждого Док Из МассивОбъектов Цикл
		СтруктураПараметров = ПолучитьСтруктуру(Док);
		
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область); 
		

		Для Каждого ОС Из Док.ОС Цикл
			
			Область = Макет.ПолучитьОбласть("Строка");
			Результат = Новый Структура;
			Результат.Вставить("ОсновноеСредство", СокрЛП(ОС.ОсновноеСредство));
			Результат.Вставить("ИнвентарныйНомер", СокрЛП(ОС.ИнвентарныйНомер));
	
			Область.Параметры.Заполнить(Результат);
			ТабличныйДокумент.Вывести(Область);

		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Пункт2");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);

		Область = Макет.ПолучитьОбласть("Пункт3");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);

		Область = Макет.ПолучитьОбласть("Пункт4");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Пункт5");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;  
	
КонецФункции

Функция ПолучитьСтруктуру(Док)
	
	Результат = Новый Структура;
	Результат.Вставить("ОрганизацияПолноеНаименование", Док.Организация.НаименованиеПолное);
	Результат.Вставить("ИНН", Док.Организация.КодПоЕДРПОУ);
	Результат.Вставить("НомерПриказа", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Док.Номер));
	Результат.Вставить("ДатаПриказа", Формат(Док.Дата,"Л=uk_UA; ДФ='dd MMMM yyyy р.'"));
	
	Лет = Цел(Док.СрокПолезногоИспользованияБУ/12);
	Месяцев = Док.СрокПолезногоИспользованияБУ%12;
	Результат.Вставить("СрокПолезногоИспользованияБУ",
		?(Лет > 0, ""+ Лет + " років", "") +
		?(Месяцев > 0 , ""+ ?(Лет > 0, " ", "") + Месяцев + " місяців", "")
	);
	
	Результат.Вставить("День", День(Док.Дата));
	Результат.Вставить("Месяц", Месяц(Док.Дата));
	Результат.Вставить("Год", Год(Док.Дата)); 
	
	Результат.Вставить("ГородИспользования", Сред(Док.ПодразделениеОрганизации,СтрНайти(Док.ПодразделениеОрганизации, "м."),СтрДлина(Док.ПодразделениеОрганизации)));
	
	Результат.Вставить("МОЛДолжность", Док.МОЛДолжность);
	
	ФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(СокрЛП(Док.МОЛБУ));
	Результат.Вставить("МОЛБУ",
		СтрШаблон("%1 %2. %3",
			ФИО.Фамилия,
			ВРег(Лев(ФИО.Имя,1)),
			?(ПустаяСтрока(ФИО.Отчество), "", ВРег(Лев(ФИО.Отчество,1)+ "."))			
		)
	);
	
	ОтвЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Док.Организация, Док.Дата);
	Результат.Вставить("Должность", ОтвЛица.РуководительДолжностьПредставление);
	Результат.Вставить("ФИО", ОтвЛица.РуководительПредставление);
	
	//Результат.Вставить("Пункт", ?(Док.СрокПолезногоИспользованияБУ = 0, 4, 5)); 
	Результат.Вставить("ЛиквидационнаяСтоимость", ?(Док.ЛиквидационнаяСтоимостьБУ = 0, "нулю",
		ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Док.ЛиквидационнаяСтоимостьБУ, ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета(), "uk")
	));

	
	Возврат Результат;
	
КонецФункции



