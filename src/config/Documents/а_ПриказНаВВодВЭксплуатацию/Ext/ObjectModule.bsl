
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснованию(Основание)

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ВводВЭксплуатациюОС") Тогда
		Дата				= Основание.Дата;
		Организация			= Основание.Организация;
		ДокументОснование	= Основание;
		МОЛБУ				= Основание.МОЛБУ;
		СрокПолезногоИспользованияБУ = Основание.СрокПолезногоИспользованияБУ;
		ПодразделениеОрганизации = Основание.ПодразделениеОрганизации;
		ЛиквидационнаяСтоимостьБУ = Основание.ЛиквидационнаяСтоимостьБУ;
		
		// попробуем получить сотрудника и определить его должность
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
		               |ИЗ
		               |	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(
		               |			&Период,
		               |			Организация = &Организация
		               |				И ФизическоеЛицо = &ФизическоеЛицо) КАК КадроваяИсторияСотрудниковСрезПоследних";
		Запрос.УстановитьПараметр("Период", Дата);
		Запрос.УстановитьПараметр("ФизическоеЛицо", МОЛБУ);
		Запрос.УстановитьПараметр("Организация", Организация);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			МОЛДолжность = СокрЛП(ПолучитьТекущуюДолжностьСотрудника(Выборка.Сотрудник, Дата)); 
		КонецЕсли;
		
		Для Каждого СтрОснования Из Основание.ОС Цикл
			НовСтр			= ОС.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, СтрОснования);
		КонецЦикла;
		
		Ответственный = Пользователи.ТекущийПользователь();
		
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьТекущуюДолжностьСотрудника(Сотрудник, Период)

	ДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Ложь, Сотрудник, "Должность", 
		НачалоДня(Период));
	
	Если ДанныеСотрудников.Количество() > 0 Тогда
		ТекущиеКадровыеДанныеСотрудника = ДанныеСотрудников[0];
		Возврат ТекущиеКадровыеДанныеСотрудника.Должность;
	КонецЕсли;

	Возврат Справочники.Должности.ПустаяСсылка();

КонецФункции

