
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	//ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	//Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
	//	И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
	//	ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	//КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ДополнительныеСвойства.Свойство("ПроверятьБлокировку") Тогда 
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Ссылка);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон("Документ %1 заблокирован", Ссылка));
			Отказ = Истина;
		КонецПопытки;
	КонецЕсли;
	
	Если Документы.а_ЗаказНаСборку.ПользовательКладовщик() Тогда
		Кладовщик = Пользователи.ТекущийПользователь();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	УстановитьСтатус();
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Набор = РегистрыСведений.а_СтатусыЗаявок.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить(ДокументОснование);
	Набор.Отбор.ТипСтатуса.Установить(Перечисления.а_ТипыСтатусов.СтатусСобрано);
	Набор.Отбор.Идентификатор.Установить(Идентификатор);
	Набор.Записать();
КонецПроцедуры

Процедура УстановитьСтатус() Экспорт
	
	Менеджер = РегистрыСведений.а_СтатусыЗаявок.СоздатьМенеджерЗаписи();
	Менеджер.Период = Дата;
	Менеджер.Объект = ДокументОснование;
	Менеджер.Идентификатор = Идентификатор;
	Менеджер.ТипСтатуса = Перечисления.а_ТипыСтатусов.СтатусСобрано;
	Менеджер.СтатусСобран = ?(ПометкаУдаления, Ложь, Собран); 
	
	Попытка
		Менеджер.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Идентификатор = "";
	Ответственный = Пользователи.ТекущийПользователь();
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При копіюванні Замовлення на збірку не буде створено зв'язку з Заявкою. Правильніше буде зробити замовлення із Заявки.");
КонецПроцедуры




