#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Заполняет настройки, влияющие на использование плана обмена.
// 
// Параметры:
//  Настройки - Структура - настройки плана обмена по умолчанию, см. ОбменДаннымиСервер.НастройкиПланаОбменаПоУмолчанию,
//                          описание возвращаемого значения функции.
//
Процедура ПриПолученииНастроек(Настройки) Экспорт

	Настройки.ИмяКонфигурацииИсточника = ОбщегоНазначенияБП.ИмяКонфигурацииИсточника();
	
	Настройки.ПланОбменаИспользуетсяВМоделиСервиса = Истина;
	
	Настройки.ПредупреждатьОНесоответствииВерсийПравилОбмена  = Ложь;

	Настройки.Алгоритмы.ПриПолученииВариантовНастроекОбмена   = Истина;
	Настройки.Алгоритмы.ПриПолученииОписанияВариантаНастройки = Истина;

	Настройки.Алгоритмы.ОписаниеОграниченийПередачиДанных                   = Истина;

	Настройки.Алгоритмы.ОбработчикПроверкиПараметровУчета     = Истина;

КонецПроцедуры

// Заполняет коллекцию вариантов настроек, предусмотренных для плана обмена.
// 
// Параметры:
//  ВариантыНастроекОбмена - ТаблицаЗначений - коллекция вариантов настроек обмена, см. описание возвращаемого значения
//                                       функции НастройкиПланаОбменаПоУмолчанию общего модуля ОбменДаннымиСервер.
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияВариантовНастроек,
//                                       описание возвращаемого значения функции.
//
Процедура ПриПолученииВариантовНастроекОбмена(ВариантыНастроекОбмена, ПараметрыКонтекста) Экспорт
	
	ВариантНастройки = ВариантыНастроекОбмена.Добавить();
	ВариантНастройки.ИдентификаторНастройки        = "Двухсторонний";
	ВариантНастройки.КорреспондентВМоделиСервиса   = Истина;
	ВариантНастройки.КорреспондентВЛокальномРежиме = Истина;

КонецПроцедуры

// Заполняет набор параметров, определяющих вариант настройки обмена.
// 
// Параметры:
//  ОписаниеВарианта       - Структура - набор варианта настройки по умолчанию,
//                                       см. ОбменДаннымиСервер.ОписаниеВариантаНастройкиОбменаПоУмолчанию,
//                                       описание возвращаемого значения.
//  ИдентификаторНастройки - Строка    - идентификатор варианта настройки обмена.
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияОписанияВариантаНастройки,
//                                       описание возвращаемого значения функции.
//
Процедура ПриПолученииОписанияВариантаНастройки(ОписаниеВарианта, ИдентификаторНастройки, ПараметрыКонтекста) Экспорт

	ОписаниеВарианта.КраткаяИнформацияПоОбмену   = 	НСтр("ru='Позволяет синхронизировать данные между конфигурациями ""BAS Бухгалтерия"", ред. 2.1 и ""BAS Зарплата и управление персоналом"", ред. 3.0.
                            |Синхронизация данных выполняется в двустороннем режиме на уровне документов и справочной информации.'
                            |;uk='Дозволяє синхронізувати дані між конфігураціями ""BAS Бухгалтерія"", ред. 2.1 та ""BAS Зарплата та управління персоналом"", ред. 3.0. Синхронізація даних виконується у двосторонньому режимі на рівні документів та довідкової інформації.'");

	ОписаниеВарианта.ПодробнаяИнформацияПоОбмену = "ПланОбмена.ОбменЗарплата30Бухгалтерия21.Форма.ПодробнаяИнформация";

	ОписаниеВарианта.ИспользоватьПомощникСозданияОбменаДанными = Истина;
	ОписаниеВарианта.ИспользуемыеТранспортыСообщенийОбмена     = ОбменДаннымиСервер.ВсеТранспортыСообщенийОбменаКонфигурации();

	ОписаниеВарианта.ИмяФайлаНастроекДляПриемника      = НСтр("ru='Настройки обмена БП - ЗУП';uk='Настройка обміну БП - ЗУП'");

	ОписаниеВарианта.ЗаголовокПомощникаСозданияОбмена  = НСтр("ru='Настройка обмена данными с программой BAS Зарплата и управление персоналом, ред. 3.0';uk='Налаштування обміну даними із програмою BAS Зарплата та управління персоналом, ред. 3.0'");;

	ЗаголовокФормыУзла = НСтр("ru='Синхронизация данных с BAS Зарплата и управление персоналом, ред. 3.0';uk='Синхронізація даних із BAS Зарплата та управління персоналом, ред. 3.0'");

	ОписаниеВарианта.Вставить("ЗаголовокУзлаПланаОбмена", ЗаголовокФормыУзла);
	
	
	ОписаниеВарианта.ИмяКонфигурацииКорреспондента = "BASHRM";
	ОписаниеВарианта.НаименованиеКонфигурацииКорреспондента =  НСтр("ru='BAS Зарплата и управление персоналом, редакция 3.0';uk='BAS Зарплата та управління персоналом, редакція 3.0'");
	ОписаниеВарианта.ЗаголовокКомандыДляСозданияНовогоОбменаДанными =  НСтр("ru='BAS Зарплата и управление персоналом, редакция 3.0';uk='BAS Зарплата та управління персоналом, редакція 3.0'");


	ОписаниеВарианта.ОбщиеДанныеУзлов = ОбщиеДанныеУзлов();

	// Отборы и значения по умолчанию.
	ОписаниеВарианта.Отборы = НастройкаОтборовНаУзле(ИдентификаторНастройки);
	ОписаниеВарианта.ЗначенияПоУмолчанию = ЗначенияПоУмолчаниюНаУзле(ИдентификаторНастройки);

КонецПроцедуры

// Возвращает строку описания ограничений миграции данных для пользователя;
// Прикладной разработчик на основе установленных отборов на узле должен сформировать строку описания ограничений 
// удобную для восприятия пользователем.
// 
// Параметры:
//	НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена,
//										 полученная при помощи функции НастройкаОтборовНаУзле().
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									описания ограничений передачи данных в зависимости от версии корреспондента.
// Возвращаемое значение:
//	Строка - Строка описания ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанных(НастройкаОтборовНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	// отбор по организациям
	Если НастройкаОтборовНаУзле.ИспользоватьОтборПоОрганизациям Тогда
		СтрокаПредставленияОтбора = СтрСоединить(НастройкаОтборовНаУзле.Организации.Организация,"; ");
		ОграничениеОтборПоОрганизациям = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Только по организациям: %1';uk='Тільки по організаціям: %1'"),СтрокаПредставленияОтбора);
	Иначе
		ОграничениеОтборПоОрганизациям = НСтр("ru='По всем организациям';uk='По всіх організаціях'");
	КонецЕсли;
	
	Если НастройкаОтборовНаУзле.НеВыгружатьПерсональныеДанныеФизическихЛиц Тогда
		ОграничениеВыгружатьПерсональныеДанные = НСтр("ru='Данные для формирования проводок будут загружаться сводно.';uk='Дані для формування проводок завантажуватимуться зведено.'");;
	Иначе
		ОграничениеВыгружатьПерсональныеДанные = НСтр("ru='Данные для формирования проводок будут загружаться с детализацией по сотрудникам.';uk='Дані для формування проводок завантажуватимуться з деталізацією по співробітникам.'"); 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НастройкаОтборовНаУзле.ДатаНачалаИспользованияОбмена) Тогда
		ПредставлениеДаты = Формат(НастройкаОтборовНаУзле.ДатаНачалаИспользованияОбмена, "ДЛФ=D");
		ОграничениеДатаНачалаИспользованияОбмена = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Программа будет автоматически отслеживать изменения документов, и регистрировать их к отправке начиная с даты: %1';uk='Програма автоматично відстежуватиме зміни документів і реєструватиме їх до відправлення починаючи з дати: %1'"),ПредставлениеДаты);
	Иначе
		ОграничениеДатаНачалаИспользованияОбмена = ""; 
	КонецЕсли;
	
	Возврат (НСтр("ru='Выгружать документы и справочную информацию:';uk='Вивантажувати документи та довідкову інформацію:'")
		+ Символы.ПС
		+ ОграничениеОтборПоОрганизациям
		+ Символы.ПС
		+ ОграничениеВыгружатьПерсональныеДанные
		+ Символы.ПС
		+ ОграничениеДатаНачалаИспользованияОбмена);
		
КонецФункции

// Возвращает представление команды создания нового обмена данными.
//
// Возвращаемое значение:
//  Строка, Неогранич - представление команды, выводимое в пользовательском интерфейсе.
//
// Например:
//	Возврат НСтр("ru='Создать обмен в распределенной информационной базе'");
//
Функция ЗаголовокКомандыДляСозданияНовогоОбменаДанными() Экспорт
	
	Возврат НСтр("ru='Зарплата и управление персоналом, редакция 3.0';uk='Зарплата та управління персоналом, редакція 3.0'");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Для работы через подключение к корреспонденту через внешнее соединение или веб-сервис.

// Возвращает строку описания ограничений миграции данных для базы корреспондента, которая отображается пользователю;
// Прикладной разработчик на основе установленных отборов на узле базы корреспондента должен сформировать строку
// описания ограничений  удобную для восприятия пользователем.
// 
// Параметры:
//	НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена базы корреспондента,
//                                       полученная при помощи функции НастройкаОтборовНаУзлеБазыКорреспондента().
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									описания ограничений передачи данных в зависимости от версии корреспондента.
// 
// Возвращаемое значение:
//	Строка - строка описания ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанныхБазыКорреспондента(НастройкаОтборовНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	Если НастройкаОтборовНаУзле.ИспользоватьОтборПоОрганизациям Тогда
		СтрокаПредставленияОтбора = СтрСоединить(НастройкаОтборовНаУзле.Организации.Организация,"; ");
		ОграничениеОтборПоОрганизациям = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Только по организациям: %1';uk='Тільки по організаціям: %1'"),СтрокаПредставленияОтбора);
	Иначе
		ОграничениеОтборПоОрганизациям = НСтр("ru='По всем организациям';uk='По всіх організаціях'");
	КонецЕсли;
	
	Если НастройкаОтборовНаУзле.НеВыгружатьПерсональныеДанныеФизическихЛиц Тогда
		ОграничениеВыгружатьПерсональныеДанные = НСтр("ru='Данные для формирования проводок будут загружаться сводно.';uk='Дані для формування проводок завантажуватимуться зведено.'");;
	Иначе
		ОграничениеВыгружатьПерсональныеДанные = НСтр("ru='Данные для формирования проводок будут загружаться с детализацией по сотрудникам.';uk='Дані для формування проводок завантажуватимуться з деталізацією по співробітникам.'"); 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НастройкаОтборовНаУзле.ДатаНачалаИспользованияОбмена) Тогда
		ПредставлениеДаты = Формат(НастройкаОтборовНаУзле.ДатаНачалаИспользованияОбмена, "ДЛФ=D");
		ОграничениеДатаНачалаИспользованияОбмена = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Программа будет автоматически отслеживать изменения документов, и регистрировать их к отправке начиная с даты: %1';uk='Програма автоматично відстежуватиме зміни документів і реєструватиме їх до відправлення починаючи з дати: %1'"),ПредставлениеДаты);
	Иначе
		ОграничениеДатаНачалаИспользованияОбмена = ""; 
	КонецЕсли;
	
	Возврат (НСтр("ru='Выгружать документы и справочную информацию:';uk='Вивантажувати документи та довідкову інформацію:'")
	+ Символы.ПС
	+ ОграничениеОтборПоОрганизациям
	+ Символы.ПС
	+ ОграничениеВыгружатьПерсональныеДанные
	+ Символы.ПС
	+ ОграничениеДатаНачалаИспользованияОбмена);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Константы и проверка параметров учета

Процедура ОбработчикПроверкиПараметровУчета(Отказ, Получатель, Сообщение) Экспорт
		
	Если Константы.УчетЗарплатыИКадровСредствамиБухгалтерии.Получить() Тогда
		Если НЕ ОбщегоНазначения.РазделениеВключено() Тогда
			Отказ = Истина;
			Сообщение = НСтр("ru='Укажите в настройках параметров учета, что учеты зарплат ведется во внешней программе.';uk='Вкажіть у настройках параметрів обліку, що обліки зарплат ведеться у зовнішній програмі.'");
			Возврат;
		Иначе
			Сообщение = НСтр("ru='Укажите в настройках параметров учета, что учеты зарплат ведется во внешней программе.';uk='Вкажіть у настройках параметрів обліку, що обліки зарплат ведеться у зовнішній програмі.'");
		КонецЕсли;
	КонецЕсли;
	
	Отбор = Неопределено;
	
	СвойстваПолучателя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Получатель, "ИспользоватьОтборПоОрганизациям, Организации");
	
	Если СвойстваПолучателя.ИспользоватьОтборПоОрганизациям Тогда
		
		Отбор = СвойстваПолучателя.Организации.Выгрузить().ВыгрузитьКолонку("Организация");
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Переопределяемая настройка дополнения выгрузки

////////////////////////////////////////////////////////////////////////////////
//Дополнение к функционалу БСП

//Возвращает режим запуска, в случае интерактивного инициирования синхронизации
//Возвращаемые значения АвтоматическаяСинхронизация Или ИнтерактивнаяСинхронизация
//На основании этих значений запускается либо помощник интерактивного обмена, либо автообмен
Функция РежимЗапускаСинхронизацииДанных(УзелИнформационнойБазы) Экспорт
	//Пример типового возврата
	Возврат "";
КонецФункции

//Возвращает сценарий работы помощника интерактивного сопостовления
//НеОтправлять, ИнтерактивнаяСинхронизацияДокументов, ИнтерактивнаяСинхронизацияСправочников либо пустую строку
Функция ИнициализироватьСценарийРаботыПомощникаИнтерактивногоОбмена(УзелИнформационнойБазы) Экспорт
	//Пример типового возврата
	Возврат "";
КонецФункции

//Возвращает значения ограничений объектов узла плана обмена для интерактивной регистрации к обмену
//Структура: ВсеДокументы, ВсеСправочники, ДетальныйОтбор
//Детальный отбор либо неопределено, либо массив объектов метаданных входящих в состав узла (Указывается полное имя метаданных)
Функция ДобавитьГруппыОграничений(УзелИнформационнойБазы) Экспорт
	//Пример типового возврата
	Возврат Новый Структура("ВсеДокументы, ВсеСправочники, ДетальныйОтбор", Ложь, Ложь, Неопределено);
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает структуру отборов на узле плана обмена с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//  Нет.
// 
// Возвращаемое значение:
//  СтруктураНастроек - Структура - структура отборов на узле плана обмена
// 
Функция НастройкаОтборовНаУзле(ИдентификаторНастройки)
	
	СтруктураТабличнойЧастиОрганизации = Новый Структура;
	СтруктураТабличнойЧастиОрганизации.Вставить("Организация", Новый Массив);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ИспользоватьОтборПоОрганизациям",  Ложь);
	СтруктураНастроек.Вставить("Организации",                      СтруктураТабличнойЧастиОрганизации);
	СтруктураНастроек.Вставить("ДатаНачалаИспользованияОбмена",    НачалоМесяца(ТекущаяДата()));
	СтруктураНастроек.Вставить("НеВыгружатьПерсональныеДанныеФизическихЛиц", Ложь);
	СтруктураНастроек.Вставить("РежимВыгрузкиПриНеобходимости", 				  Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости);
	СтруктураНастроек.Вставить("РежимВыгрузкиПерсональныеДанные", 				  Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВсегда);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Возвращает структуру значений по умолчению для узла;
// Структура настроек повторяет состав реквизитов шапки плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры.
// 
// Параметры:
//  Нет.
// 
// Возвращаемое значение:
//  СтруктураНастроек - Структура - структура значений по умолчанию на узле плана обмена
// 
Функция ЗначенияПоУмолчаниюНаУзле(ИдентификаторНастройки)
	
	СтруктураНастроек = Новый Структура;
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Возвращает имена реквизитов и табличных частей плана обмена, перечисленных через запятую,
// которые являются общими для пары обменивающихся конфигураций.
//
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для разного
//									состава общих данных узлов в зависимости от версии корреспондента.
//	ИмяФормы - Строка - Имя используемой формы настройки значений по умолчанию.
//						Возможно, например, использование различных форм для разных версий корреспондента.
//
// Возвращаемое значение:
//	Строка - Список имен реквизитов.
//
Функция ОбщиеДанныеУзлов()
	
	Возврат "ИспользоватьОтборПоОрганизациям, РежимВыгрузкиПриНеобходимости, ДатаНачалаИспользованияОбмена, НеВыгружатьПерсональныеДанныеФизическихЛиц, РежимВыгрузкиПерсональныеДанные";
	
КонецФункции


#КонецОбласти

#КонецЕсли

